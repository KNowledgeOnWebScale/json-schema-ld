{
  "$schema": "http://json-schema.org/schema",
  "$schemaVersion": "0.0.1",
  "modelTags": "",
  "$id": "https://smart-data-models.github.io/dataModel.IssueTracking/IssueReporting/schema.json",
  "title": "Smart Data models - IssueReporting schema",
  "description": "A Data Model for citizen issues, reports and feedbacks.",
  "type": "object",
  "required": [
    "id",
    "type"
  ],
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "Property. NGSI entity type. It has to be IssueReporting",
          "enum": [
            "IssueReporting"
          ]
        },
        "comments": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. User comments corresponding to this observation."
        },
        "wardId": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Ward ID of the entity corresponding to this observation."
        },
        "departmentId": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Unique ID or code associated with the department which is associated with the service or the issue corresponding to this observation."
        },
        "title": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. The title assigned to the issue, report or feedback corresponding to this observation."
        },
        "subCategoryCode": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Unique identifier for the sub-category corresponding to the issue reported."
        },
        "titleCode": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. The code assigned to the title corresponding to this observation."
        },
        "subCategory": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. The sub-category name corresponding to the issue that has been reported."
        },
        "reportId": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Unique ID assigned for the issue or report or feedback or transaction corresponding to this observation."
        },
        "categoryCode": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Unique identifier for the category corresponding to the issue reported."
        },
        "category": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. The category name corresponding to the issue that has been reported."
        },
        "landmark": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. A physical distinguishing feature on land that marks a locality or a place."
        },
        "observationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Property. Model:'https://schema.org/Text'. Last reported time of observation."
        },
        "mediaURL": {
          "type": "string",
          "format": "uri",
          "description": "Property. Model:'https://schema.org/Text'. URL providing further information of any image(s) or media of the complaint or place."
        },
        "resolutionStatus": {
          "type": "string",
          "enum": [
            "Assigned",
            "Closed.",
            "InProgress",
            "Open",
            "Unassigned"
          ],
          "description": "Property. Model:'https://schema.org/Text. Status of the issue that was reported in terms of resolution or the actions taken on it. Could be Open, Assigned, InProgress, Unassigned, Closed"
        }
      }
    }
  ]
}