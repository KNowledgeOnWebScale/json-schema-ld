{
  "title": "Smart Data Models - CSV Dialect",
  "description": "The CSV dialect descriptor.Converted for Smart Data Models initiative from original frictionless data",
  "$schemaVersion": "0.0.2",
  "$schema": "http://json-schema.org/schema",
  "id": "https://smart-data-models.github.io/dataModel.FrictionlessData/CSVDialectFrictionlessData/schema.json",
  "type": "object",
  "modelTags": "SDG",
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "Property. It has to be CSVDialectFrictionlessData. NGSI entity type",
          "enum": [
            "CSVDialectFrictionlessData"
          ]
        },
        "csvddfVersion": {
          "type": "number",
          "description": "Property. CSV Dialect schema version. A number to indicate the schema version of CSV Dialect. Version 1.0 was named CSV Dialect Description Format and used different field names"
        },
        "delimiter": {
          "type": "string",
          "description": "Property. Delimiter. A character sequence to use as the field separator"
        },
        "doubleQuote": {
          "type": "boolean",
          "description": "Property. Double Quote. If Double Quote is set to true, two consecutive quotes must be interpreted as one. Specifies the handling of quotes inside fields"
        },
        "lineTerminator": {
          "type": "string",
          "description": "Property. Line Terminator. Specifies the character sequence that must be used to terminate rows"
        },
        "nullSequence": {
          "type": "string",
          "description": "Property. Null Sequence. Specifies the null sequence, for example, \\ and then 'N'"
        },
        "quoteChar": {
          "type": "string",
          "description": "Property. Quote Character. Specifies a one-character string to use as the quoting character"
        },
        "escapeChar": {
          "type": "string",
          "description": "Property. Escape Character. Specifies a one-character string to use as the escape character"
        },
        "skipInitialSpace": {
          "type": "boolean",
          "description": "Property. Skip Initial Space. Specifies the interpretation of whitespace immediately following a delimiter. If false, whitespace immediately after a delimiter should be treated as part of the subsequent field"
        },
        "header": {
          "type": "boolean",
          "description": "Property. Header. Specifies if the file includes a header row, always as the first row in the file"
        },
        "commentChar": {
          "type": "string",
          "description": "Property. Comment Character. Specifies that any row beginning with this one-character string, without preceding whitespace, causes the entire line to be ignored"
        },
        "caseSensitiveHeader": {
          "type": "boolean",
          "description": "Property. Case Sensitive Header. Use of case in source CSV files is not always an intentional decision. For example, should 'CAT' and 'Cat' be considered to have the same meaning. Specifies if the case of headers is meaningful"
        }
      }
    }
  ],
  "required": [
    "id",
    "delimiter",
    "doubleQuote",
    "type"
  ]
}