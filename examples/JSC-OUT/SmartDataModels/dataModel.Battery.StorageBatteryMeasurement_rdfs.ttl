@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json> dcterms:title "Smart Data Models. Storage Battery Measurement schema";
    dcterms:description "Storage Battery Observed Data Model is intended to measure the remaining energy capacity in a battery, which can be redistributed in the form of electrical energy. These functions apply from a source which depends on the type of battery (reference to the attribute 'batteryType' of the Data Model `StorageBatteryDevice`).".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be StorageBatteryMeasurement";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:StorageBatteryMeasurement)
].
sdm:StorageBatteryMeasurement rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "StorageBatteryMeasurement".
sdm:refStorageBatteryDevice dcterms:description "Relationship. Reference to a [Storage Battery Device](https://github.com/FIWARE/data-models/blob/master/specs/Energy/StorageBatteryDevice/doc/spec.md) which captured this observation, if the entity is used.";
    rdf:type rdf:Property;
    rdfs:label "refStorageBatteryDevice";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>.
sdm:refPointOfInterest dcterms:description "Relationship. Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the Repository.";
    rdf:type rdf:Property;
    rdfs:label "refPointOfInterest";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>.
sdm:dateObservedFrom dcterms:description "Property. Model:'https://schema.org/DateTime'. Observation period: Start date and time in an ISO8601 UTC format. The attribute can be used in addition to the 'dateObserved' attribute when it corresponds to a time interval to be highlighted.";
    rdf:type rdf:Property;
    rdfs:label "dateObservedFrom";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:dateTime.
sdm:dateObservedTo dcterms:description "Property. Model:'https://schema.org/DateTime'. Observation period: End date and time in an ISO8601 UTC format. The attribute can be used in addition to the 'dateObserved' attribute when it corresponds to a time interval to be highlighted.";
    rdf:type rdf:Property;
    rdfs:label "dateObservedTo";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:dateTime.
sdm:batteryLevel dcterms:description "Property. Model:'https://schema.org/Number'. Device's battery level. A unique value of the following value 0.0=battery empty, 1.0=Battery full, -1.0=Transiently not determined.";
    rdf:type rdf:Property;
    rdfs:label "batteryLevel";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>.
sdm:batteryStatus dcterms:description "Property. Status of the battery during the measurement( giving or not energy). Enum:'consumingEnergy, givingEnergy, standby'";
    rdf:type rdf:Property;
    rdfs:label "batteryStatus";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>.
sdm:BatteryStatus rdf:type skos:ConceptScheme.
sdm:batteryStatus rdfs:range [
  owl:oneOf (sdm:consumingEnergy sdm:givingEnergy sdm:standby)
].
sdm:consumingEnergy rdf:type skos:Concept;
    skos:inScheme sdm:BatteryStatus;
    rdfs:label "consumingEnergy".
sdm:givingEnergy rdf:type skos:Concept;
    skos:inScheme sdm:BatteryStatus;
    rdfs:label "givingEnergy".
sdm:standby rdf:type skos:Concept;
    skos:inScheme sdm:BatteryStatus;
    rdfs:label "standby".
sdm:batteryAssessmentMethods dcterms:description "Property. Assessment and calculation methods for measurements assessing the condition of the battery. Enum:'ampereHourMetry, dischargeTest, electrolyteDensity, highFrequencyImpedance, lowFrequencyImpedance, mathematicalModel, operatingVoltageWithClosedCircuit, quiescentVoltageWithOpenCircuit'";
    rdf:type rdf:Property;
    rdfs:label "batteryAssessmentMethods";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>.
sdm:BatteryAssessmentMethods rdf:type skos:ConceptScheme.
sdm:batteryAssessmentMethods rdfs:range [
  owl:oneOf (sdm:ampereHourMetry sdm:dischargeTest sdm:electrolyteDensity sdm:highFrequencyImpedance sdm:lowFrequencyImpedance sdm:mathematicalModel sdm:operatingVoltageWithClosedCircuit sdm:quiescentVoltageWithOpenCircuit)
].
sdm:ampereHourMetry rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "ampereHourMetry".
sdm:dischargeTest rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "dischargeTest".
sdm:electrolyteDensity rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "electrolyteDensity".
sdm:highFrequencyImpedance rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "highFrequencyImpedance".
sdm:lowFrequencyImpedance rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "lowFrequencyImpedance".
sdm:mathematicalModel rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "mathematicalModel".
sdm:operatingVoltageWithClosedCircuit rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "operatingVoltageWithClosedCircuit".
sdm:quiescentVoltageWithOpenCircuit rdf:type skos:Concept;
    skos:inScheme sdm:BatteryAssessmentMethods;
    rdfs:label "quiescentVoltageWithOpenCircuit".
sdm:dateEnergyMeteringStarted dcterms:description "Property. The starting date for metering energy in an ISO8601 UTC format. Model:'https://schema.org/DateTime'.";
    rdf:type rdf:Property;
    rdfs:label "dateEnergyMeteringStarted";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:dateTime.
sdm:temperature dcterms:description "Property. Main Temperature recorded at the time of Observation compared to the  nominal reference temperature of the device. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CEL** represents Degree Celsius. Model:'https://schema.org/Number'. Units:'celsius degrees '.";
    rdf:type rdf:Property;
    rdfs:label "temperature";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:stateOfCharge dcterms:description "Property. The State of Charge (Code SoC) expressed in % is defined as the ratio between the remaining and the current capacities. The current capacity is the maximum capacity that can be withdrawn from the fully charged battery under specific discharge conditions. Rule [SOC] + [DOD] = 100 %. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent. Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "stateOfCharge";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:deepOfDischarge dcterms:description "Property. The Deep of Discharge (Code DoD) expressed in % is the ratio between the capacity already discharged and the nominal capacity of the accumulator. That is to say the energy consumed in the battery. Rule  [DOD] = 100 % - [SOC]. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent. Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "deepOfDischarge";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:stateOfHealth dcterms:description "Property. The State of Health  (Code SoH) expressed in % is defined as the ratio between the maximum amount of charge that a fully charged battery can provide under its nominal discharge regime, and its nominal capacity. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent. Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "stateOfHealth";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:activePower dcterms:description "Property. Active Power, where 'phi' is the phase shift of the current compared to the voltage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **KWT** represents Kilowatt. Model:'https://schema.org/Number'. Units:'Kilowatt'.";
    rdf:type rdf:Property;
    rdfs:label "activePower";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:reactivePower dcterms:description "Property. Reactive Power used by circuits. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **K5** represents kilovolt-ampere-reactive. Model:'https://schema.org/Number'. Units:'kilovolt-ampere-reactive'.";
    rdf:type rdf:Property;
    rdfs:label "reactivePower";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:current dcterms:description "Property. Current. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'. ";
    rdf:type rdf:Property;
    rdfs:label "current";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:openCircuitVoltage dcterms:description "Property. The Open Circuit Voltage (Code OCV) expressed in Volt is the difference of electrical potential between two terminals of a device when disconnected from any circuit. There is no external load connected and No external electric current flows between the terminals. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'.";
    rdf:type rdf:Property;
    rdfs:label "openCircuitVoltage";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>;
    rdfs:range xsd:decimal.
sdm:inverterStatus rdf:type rdf:Property;
    rdfs:label "inverterStatus";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/StorageBatteryMeasurement/schema.json>.
sdm:InverterStatus rdf:type skos:ConceptScheme.
sdm:inverterStatus rdfs:range [
  owl:oneOf (sdm:00-OnSector <sdm:01-PowerFailure/OnBattery> sdm:02-LossCommunication sdm:03-BatteryFault sdm:04-SystemShutDown sdm:05-TensionDip sdm:06-OverVoltage sdm:07-VoltageDrop sdm:08-VoltageIncrease sdm:09-LineNoise sdm:10-FrequencyVariation sdm:11-TransientDistortion sdm:12-HarmonicDistortion)
].
sdm:00-OnSector rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "00-OnSector".
<sdm:01-PowerFailure/OnBattery> rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "01-PowerFailure/OnBattery".
sdm:02-LossCommunication rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "02-LossCommunication".
sdm:03-BatteryFault rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "03-BatteryFault".
sdm:04-SystemShutDown rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "04-SystemShutDown".
sdm:05-TensionDip rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "05-TensionDip".
sdm:06-OverVoltage rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "06-OverVoltage".
sdm:07-VoltageDrop rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "07-VoltageDrop".
sdm:08-VoltageIncrease rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "08-VoltageIncrease".
sdm:09-LineNoise rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "09-LineNoise".
sdm:10-FrequencyVariation rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "10-FrequencyVariation".
sdm:11-TransientDistortion rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "11-TransientDistortion".
sdm:12-HarmonicDistortion rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "12-HarmonicDistortion".
