@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.IT/Tests/schema.json> dcterms:title "Smart Data models - Testing schema";
    dcterms:description "This is the data model for representing the result of testing procedures.".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be ITTests";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.IT/Tests/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:ITTests)
].
sdm:ITTests rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "ITTests".
sdm:timestamp dcterms:description "Property. Model:'https://schema.org/Number'. EPOCH timestamp measures in milliseconds corresponding to the starting point of the execution of the tests.";
    rdf:type rdf:Property;
    rdfs:label "timestamp";
    rdfs:domain <https://smart-data-models.github.io/dataModel.IT/Tests/schema.json>;
    rdfs:range xsd:decimal.
sdm:elapsedTime dcterms:description "Property. Model:'https://schema.org/Number'. Elapsed time since the beginning of the execution of the tests. It measures in milliseconds the duration of the execution of the tests.";
    rdf:type rdf:Property;
    rdfs:label "elapsedTime";
    rdfs:domain <https://smart-data-models.github.io/dataModel.IT/Tests/schema.json>;
    rdfs:range xsd:decimal.
sdm:status dcterms:description "Property. Model:'https://schema.org/Text'. Overall status of the execution of the tests: OK, all the tests passed; NOK, there is at least some tests that failed; POK, it is possible that some tests are marked as optionals, therefore it they fails the overall status is not NOK but POK.";
    rdf:type rdf:Property;
    rdfs:label "status";
    rdfs:domain <https://smart-data-models.github.io/dataModel.IT/Tests/schema.json>.
sdm:Status rdf:type skos:ConceptScheme.
sdm:status rdfs:range [
  owl:oneOf (sdm:OK sdm:NOK sdm:POK)
].
sdm:OK rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "OK".
sdm:NOK rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "NOK".
sdm:POK rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "POK".
sdm:component dcterms:description "Relationship. Identifier format of any NGSI entity corresponding to the Software or component to be tested.";
    rdf:type rdf:Property;
    rdfs:label "component";
    rdfs:domain <https://smart-data-models.github.io/dataModel.IT/Tests/schema.json>;
    rdfs:range xsd:anyURI.
sdm:tests dcterms:description "Property. Model:'https://schema.org/Text'. Status of the execution of each of the tests.";
    rdf:type rdf:Property;
    rdfs:label "tests";
    rdfs:domain <https://smart-data-models.github.io/dataModel.IT/Tests/schema.json>;
    rdfs:range sdm:Test.
sdm:Test rdf:type rdfs:Class;
    rdfs:label "Test".
sdm:name dcterms:description "Property. Model:'https://schema.org/Text'. The name or identification to the test executed.";
    rdf:type rdf:Property;
    rdfs:label "name";
    rdfs:domain sdm:Test;
    rdfs:range xsd:string.
sdm:result dcterms:description "Property. Model:'https://schema.org/Text'. The result of the execution of the test. it could be:OK, the test passed; NOK, the test failed; N/A, the test was not executed due to it was not applicable for the corresponding software or component; DISMISS, the test could not be executed due to a previous error in other test.";
    rdf:type rdf:Property;
    rdfs:label "result";
    rdfs:domain sdm:Test.
sdm:Result rdf:type skos:ConceptScheme.
sdm:result rdfs:range [
  owl:oneOf (sdm:OK sdm:NOK sdm:NA sdm:DISMISS)
].
sdm:OK rdf:type skos:Concept;
    skos:inScheme sdm:Result;
    rdfs:label "OK".
sdm:NOK rdf:type skos:Concept;
    skos:inScheme sdm:Result;
    rdfs:label "NOK".
sdm:NA rdf:type skos:Concept;
    skos:inScheme sdm:Result;
    rdfs:label "NA".
sdm:DISMISS rdf:type skos:Concept;
    skos:inScheme sdm:Result;
    rdfs:label "DISMISS".
