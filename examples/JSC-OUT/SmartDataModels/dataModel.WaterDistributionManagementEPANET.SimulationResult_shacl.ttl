@prefix dash: <http://datashapes.org/dash#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix schema: <https://schema.org/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix gbfs: <https://w3id.org/gbfs#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix sdm: <https://w3id.org/sdm#>.
@prefix sdmshape: <https://w3id.org/sdm/shapes/schema.json#>.

<https://w3id.org/sdm/shapes/schema.json#schema.jsonShape> rdf:type sh:NodeShape;
    sh:targetClass <https://smart-data-models.github.io/dataModel.WaterDistributionManagementEPANET/Result/schema.json>.
sdmshape:schema.jsonShape sh:property [
  sh:path sdm:type;
  sh:description "Property. NGSI-LD Entity Type. It has to be SimulationResult";
  sh:name "type";
  sh:in (sdm:SimulationResult);
  sh:minCount 1;
  sh:maxCount 1
], [
  sh:path sdm:hasInputNetwork;
  sh:or ([
  sh:minLength 1;
  sh:maxLength 256;
  sh:pattern "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$";
  sh:datatype xsd:string
] [ sh:datatype xsd:anyURI ])
], [
  sh:path sdm:refSimulationScenario;
  sh:or ([
  sh:minLength 1;
  sh:maxLength 256;
  sh:pattern "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$";
  sh:datatype xsd:string
] [ sh:datatype xsd:anyURI ])
], [
  sh:path sdm:outputParameters;
  sh:description "Property. Description of the set of results of applied simulation to the network.";
  sh:name "outputParameters"
].
sdmshape:OutputParameterShape rdf:type sh:NodeShape;
    sh:targetClass sdm:OutputParameter;
    sh:property [
  sh:path sdm:parameter;
  sh:name "parameter";
  sh:in (sdm:demand sdm:energyUse sdm:flow sdm:head sdm:initialQuality sdm:level sdm:pressure sdm:quality sdm:sourceMassInflow sdm:supply sdm:velocity sdm:waterLevel)
], [
  sh:path sdm:value;
  sh:or ([ sh:datatype xsd:string ] [ sh:datatype xsd:decimal ] [ sh:datatype xsd:boolean ])
], [
  sh:path sdm:targetURI;
  sh:or ([
  sh:minLength 1;
  sh:maxLength 256;
  sh:pattern "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$";
  sh:datatype xsd:string
] [ sh:datatype xsd:anyURI ])
].
sdmshape:schema.jsonShape sh:property [
  sh:path sdm:outputFile;
  sh:description "Property. Link to binary file containing results of applied simulation to the network.";
  sh:name "outputFile";
  sh:datatype xsd:anyURI
].
