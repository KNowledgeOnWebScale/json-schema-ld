@prefix dash: <http://datashapes.org/dash#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix schema: <https://schema.org/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix gbfs: <https://w3id.org/gbfs#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix sdm: <https://w3id.org/sdm#>.
@prefix sdmshape: <https://w3id.org/sdm/shapes/schema.json#>.

<https://w3id.org/sdm/shapes/schema.json#schema.jsonShape> rdf:type sh:NodeShape;
    sh:targetClass <https://smart-data-models.github.io/dataModel.WasteManagement/WasteContainer/schema.json>.
sdm:schema.jsonShape sh:property [
  sh:path sdm:type;
  sh:description "Property. NGSI Entity Type: It has to be WasteContainer";
  sh:name "type";
  sh:in (sdm:WasteContainer);
  sh:minCount 1;
  sh:maxCount 1
], [
  sh:path sdm:fillingLevel;
  sh:description "Property. Model:'https://schema.org/Number'. Filling level of the container";
  sh:name "fillingLevel";
  sh:minInclusive 0;
  sh:maxInclusive 1;
  sh:datatype xsd:decimal
], [
  sh:path sdm:category;
  sh:name "category";
  sh:in (sdm:fixed sdm:ground sdm:other sdm:portable sdm:underground)
], [
  sh:path sdm:cargoWeight;
  sh:description "Property. Model:'https://schema.org/Number'. Weight of the container load.";
  sh:name "cargoWeight";
  sh:minInclusive 0;
  sh:datatype xsd:decimal
], [
  sh:path sdm:temperature;
  sh:description "Property. Temperature inside the container. Model:'http://schema.org/Number'";
  sh:name "temperature";
  sh:datatype xsd:decimal
], [
  sh:path sdm:methaneConcentration;
  sh:description "Property. Model:'https://schema.org/Number'. Methane (CH4) concentration inside the container.";
  sh:name "methaneConcentration";
  sh:minInclusive 0;
  sh:datatype xsd:decimal
], [
  sh:path sdm:storedWasteKind;
  sh:description "Property. Model:'https://schema.org/Text'. Kind/s of waste stored by the container. Enum:'organic, inorganic, glass, oil, plastic, metal, paper, batteries, electronics, hazardous, other'. Or any other value which does not fit within the former. ";
  sh:name "storedWasteKind";
  sh:in (sdm:organic sdm:inorganic sdm:glass sdm:oil sdm:plastic sdm:metal sdm:paper sdm:batteries sdm:electronics sdm:hazardous sdm:other)
], [
  sh:path sdm:storedWasteOrigin;
  sh:description "Property. Model:'https://schema.org/Text'. Origin of the waste stored. Enum:'household, municipal, industrial, construction, hostelry, agriculture, other' ";
  sh:name "storedWasteOrigin";
  sh:in (sdm:household sdm:municipal sdm:industrial sdm:construction sdm:hostelry sdm:agriculture sdm:other)
], [
  sh:path sdm:storedWasteCode;
  sh:description "Property. Model:'https://schema.org/Text' As per the regulation, waste codes which precisely identifies waste origin and kind. Depend on the target regulation. For Europe, check [Europe's List of Waste](http://ec.europa.eu/environment/waste/framework/list.htm).";
  sh:name "storedWasteCode";
  sh:datatype xsd:string
], [
  sh:path sdm:serialNumber;
  sh:description "Property. Model:'https://schema.org/serialNumber'. Serial number of the container.";
  sh:name "serialNumber";
  sh:datatype xsd:string
], [
  sh:path sdm:regulation;
  sh:description "Property. Regulation under which the container is operating. Model:'http://schema.org/Text'";
  sh:name "regulation";
  sh:datatype xsd:string
], [
  sh:path sdm:responsible;
  sh:description "Property. Responsible for the container, i.e. entity in charge of  actuating (emptying, collecting, etc). Model:'https://schema.org/Text'";
  sh:name "responsible";
  sh:datatype xsd:string
], [
  sh:path sdm:dateServiceStarted;
  sh:description "Property. Model:'https://schema.org/Date'. Date at which the container started giving service.";
  sh:name "dateServiceStarted";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:dateLastEmptying;
  sh:description "Property. Model:'https://schema.org/DateTime'. Timestamp which represents when the container was emptied last time.";
  sh:name "dateLastEmptying";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:nextActuationDeadline;
  sh:description "Property. Model:'https://schema.org/DateTime'. Deadline for next actuation to be performed (emptying, picking up, etc.).";
  sh:name "nextActuationDeadline";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:actuationHours;
  sh:description "Property. Model:'openingHours'. Hours suitable for performing actuations over the container.";
  sh:name "actuationHours";
  sh:datatype xsd:string
], [
  sh:path sdm:dateLastCleaning;
  sh:description "Property. When the container was cleaned last time. Model:'https://schema.org/DateTime'. ";
  sh:name "dateLastCleaning";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:nextCleaningDeadline;
  sh:description "Property. Model:'https://schema.org/DateTime'. Deadline for next cleaning.";
  sh:name "nextCleaningDeadline";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:isleId;
  sh:description "Property. Identifier (or name) of the isle where the container is placed. This attribute should be used when entities of type `WasteContainerIsle` are not being modelled specifically. Otherwise, `refWasteContainerIsle` should be used.";
  sh:name "isleId";
  sh:datatype xsd:string
], [
  sh:path sdm:status;
  sh:description "Property. Container's status from the point of view of safety. Enum:'ok , lidOpen , dropped , moved , vandalized , burning , unknown'.  -   `ok`. Container is where it must be and stands properly. `lidOpen`. Container's lid has been opened and not closed after a certain amount of time. `dropped`. Container has been dropped for some reason. `moved`. Container has been moved from its regular position and has not come back. `vandalized`. Container has been damaged or destroyed due to vandalism. `burning`. Container is burning and an immediate action has to be taken. `unknown`. The status of the container is not known to the system.";
  sh:name "status";
  sh:in (sdm:ok sdm:lidOpen sdm:dropped sdm:moved sdm:vandalized sdm:burning sdm:unknown)
], [
  sh:path sdm:refWasteContainerModel;
  sh:or ([
  sh:minLength 1;
  sh:maxLength 256;
  sh:pattern "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$";
  sh:datatype xsd:string;
  sh:description "Property. Identifier format of any NGSI entity"
] [
  sh:datatype xsd:anyURI;
  sh:description "Property. Identifier format of any NGSI entity"
])
], [
  sh:path sdm:refWasteContainerIsle;
  sh:or ([
  sh:minLength 1;
  sh:maxLength 256;
  sh:pattern "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$";
  sh:datatype xsd:string;
  sh:description "Property. Identifier format of any NGSI entity"
] [
  sh:datatype xsd:anyURI;
  sh:description "Property. Identifier format of any NGSI entity"
])
], [
  sh:path sdm:binCapacity;
  sh:description "Property. Model:'https://schema.org/Number'. Total capacity in terms of the volume of waste the bin can hold.";
  sh:name "binCapacity";
  sh:datatype xsd:decimal
], [
  sh:path sdm:binColor;
  sh:description "Property. Model:'https://schema.org/Text'. Color of the bin. Could be used for indicating the type of waste. The color coding should follow the conventions applicable to the geographical area the bins are located.";
  sh:name "binColor";
  sh:datatype xsd:string
], [
  sh:path sdm:wardId;
  sh:description "Property. Model:'https://schema.org/Text. Ward Id of the entity corresponding to this observation.";
  sh:name "wardId";
  sh:datatype xsd:string
], [
  sh:path sdm:license_plate;
  sh:description "Property. Model:'https://schema.org/Text. Gives the License Plate number of the vehicle. SameAs: 'license_plate' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)";
  sh:name "license_plate";
  sh:datatype xsd:string
], [
  sh:path sdm:RFID;
  sh:description "Property. Model:'https://schema.org/Text. Gives the ID of the RFID reader.";
  sh:name "RFID";
  sh:datatype xsd:string
], [
  sh:path sdm:binFullnessThreshold;
  sh:description "Property. Model:'https://schema.org/Number'. The fullness threshold level of the bin defined as the level (in terms of percentage) when the bin full alert or notification will be generated.";
  sh:name "binFullnessThreshold";
  sh:datatype xsd:decimal
], [
  sh:path sdm:binRecommendedLoad;
  sh:description "Property. Model:'https://schema.org/Number'. Recommended load (weight) that the waste bin corresponding to this observation can hold.";
  sh:name "binRecommendedLoad";
  sh:datatype xsd:decimal
], [
  sh:path sdm:binId;
  sh:description "Property. Model:'https://schema.org/Text. Id of the waste carrying bin";
  sh:name "binId";
  sh:datatype xsd:string
], [
  sh:path sdm:binMaxLoad;
  sh:description "Property. Model:'https://schema.org/Number'. Maximum load (weight) that the waste bin can hold.";
  sh:name "binMaxLoad";
  sh:datatype xsd:decimal
], [
  sh:path sdm:binLoggedTime;
  sh:description "Property. Model:'https://schema.org/Text'. Time when the bin's level was last logged.";
  sh:name "binLoggedTime";
  sh:datatype xsd:dateTime
].
