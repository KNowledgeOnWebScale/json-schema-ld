@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json> dcterms:title "TechnicalCabinetDevice schema";
    dcterms:description "Technical Cabinet Device Data Model is intended to to describe the technical characteristics of the Device, designed to be placed in an urban or interurban environment. The main objective of these cabinets for this Data Model is to protect the electrical equipment necessary for the control, surveillance, reading and management of urban lighting, signaling, video and electrical distribution. The scope of use of some of these cabinets can extend to an additional protection for installations of modular apparatuses of telephony, data processing, meteorological stations, photo-voltaic stations, wind turbines stations, telecommunications, networks, data, bre Optics , etc. *Remark* : This Data Model can be used directly as a main entity to describe the device `Technical Cabinet`  or as a sub-entity of the Data Model  `DEVICE` using a reference by the `refDevice` attribute. It can also refer to the list of all the components it contains, with the `refDeviceList` attribute, using the Data Model 'DEVICE'".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be TechnicalCabinetDevice";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:TechnicalCabinetDevice)
].
sdm:TechnicalCabinetDevice rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "TechnicalCabinetDevice".
sdm:refDevice dcterms:description "Relationship. The device used to obtain the data expressed by this record";
    rdf:type rdf:Property;
    rdfs:label "refDevice";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:refDeviceList rdf:type rdf:Property;
    rdfs:label "refDeviceList";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:refPointOfInterest dcterms:description "Relationship. Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the observation.";
    rdf:type rdf:Property;
    rdfs:label "refPointOfInterest";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:dateLastReported dcterms:description "Property. A timestamp which denotes the last time when the device successfully reported data. Date and time in an ISO8601 UTCformat. Model:'https://schema.org/DateTime'";
    rdf:type rdf:Property;
    rdfs:label "dateLastReported";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:dateTime.
sdm:brandName dcterms:description "Property. Name of the brand. Model:'https://schema.org/brand'";
    rdf:type rdf:Property;
    rdfs:label "brandName";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:string.
sdm:modelName dcterms:description "Property. Name of the model as given by the manufacturer.";
    rdf:type rdf:Property;
    rdfs:label "modelName";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:string.
sdm:manufacturerName dcterms:description "Property. Name of the manufacturer. Model:'https://schema.org/manufacturer'";
    rdf:type rdf:Property;
    rdfs:label "manufacturerName";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:string.
sdm:serialNumber dcterms:description "Property. Serial number of the container. Model:'https://schema.org/serialNumber'";
    rdf:type rdf:Property;
    rdfs:label "serialNumber";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:string.
sdm:application rdf:type rdf:Property;
    rdfs:label "application";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:Application rdf:type skos:ConceptScheme.
sdm:application rdfs:range [
  owl:oneOf (sdm:commercial sdm:distributionService sdm:industrial sdm:other sdm:publicWorks sdm:road sdm:tertiary sdm:urbanService)
].
sdm:commercial rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "commercial".
sdm:distributionService rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "distributionService".
sdm:industrial rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "industrial".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "other".
sdm:publicWorks rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "publicWorks".
sdm:road rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "road".
sdm:tertiary rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "tertiary".
sdm:urbanService rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "urbanService".
sdm:typeOfUse dcterms:description "Property. Accepted use regarding its positioning in an indoor / outdoor environment. A unique value of these values. Enum:'indoor, mixed, outdoor, other'";
    rdf:type rdf:Property;
    rdfs:label "typeOfUse";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:TypeOfUse rdf:type skos:ConceptScheme.
sdm:typeOfUse rdfs:range [
  owl:oneOf (sdm:indoor sdm:mixed sdm:outdoor sdm:other)
].
sdm:indoor rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "indoor".
sdm:mixed rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "mixed".
sdm:outdoor rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "outdoor".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "other".
sdm:installationMode dcterms:description "Property. Positioning of the device in relation to a ground reference system. Model:'https://schema.org/Text'. Enum:'aerial, ground, other, pole, roofing, underground, wall'";
    rdf:type rdf:Property;
    rdfs:label "installationMode";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:InstallationMode rdf:type skos:ConceptScheme.
sdm:installationMode rdfs:range [
  owl:oneOf (sdm:aerial sdm:ground sdm:other sdm:pole sdm:roofing sdm:underground sdm:wall)
].
sdm:aerial rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "aerial".
sdm:ground rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "ground".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "other".
sdm:pole rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "pole".
sdm:roofing rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "roofing".
sdm:underground rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "underground".
sdm:wall rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "wall".
sdm:installationCondition rdf:type rdf:Property;
    rdfs:label "installationCondition";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:InstallationCondition rdf:type skos:ConceptScheme.
sdm:installationCondition rdfs:range [
  owl:oneOf (sdm:desert sdm:dust sdm:extremeCold sdm:extremeClimate sdm:extremeHeat sdm:extremeHumidity sdm:marine sdm:none sdm:other sdm:saline sdm:seismic sdm:sand)
].
sdm:desert rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "desert".
sdm:dust rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "dust".
sdm:extremeCold rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeCold".
sdm:extremeClimate rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeClimate".
sdm:extremeHeat rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeHeat".
sdm:extremeHumidity rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeHumidity".
sdm:marine rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "marine".
sdm:none rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "none".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "other".
sdm:saline rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "saline".
sdm:seismic rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "seismic".
sdm:sand rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "sand".
sdm:possibilityOfUse dcterms:description "Property. Possibility of use. A unique value. Enum:'mixed, mobile, other, stationary'";
    rdf:type rdf:Property;
    rdfs:label "possibilityOfUse";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:PossibilityOfUse rdf:type skos:ConceptScheme.
sdm:possibilityOfUse rdfs:range [
  owl:oneOf (sdm:mixed sdm:mobile sdm:other sdm:stationary)
].
sdm:mixed rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "mixed".
sdm:mobile rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "mobile".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "other".
sdm:stationary rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "stationary".
sdm:documentation dcterms:description "Property. A link to device's documentation. Model:'https://schema.org/URL'";
    rdf:type rdf:Property;
    rdfs:label "documentation";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:anyURI.
sdm:dimension dcterms:description "Property. The format is structured by a sub-property of 3 items. The unit code (text) of measurement  is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CMT** represents Centimeter.";
    rdf:type rdf:Property;
    rdfs:label "dimension";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range sdm:Dimension.
sdm:Dimension rdf:type rdfs:Class;
    rdfs:label "Dimension".
sdm:height rdf:type rdf:Property;
    rdfs:label "height";
    rdfs:domain sdm:Dimension;
    rdfs:range xsd:decimal.
sdm:width dcterms:description "Property. ";
    rdf:type rdf:Property;
    rdfs:label "width";
    rdfs:domain sdm:Dimension;
    rdfs:range xsd:decimal.
sdm:depth dcterms:description "Property. ";
    rdf:type rdf:Property;
    rdfs:label "depth";
    rdfs:domain sdm:Dimension;
    rdfs:range xsd:decimal.
sdm:weight dcterms:description "Property. Weight of the item. The unit code (text) of measurement  is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **KGM** represents Kilograms. Model:'https://schema.org/weigth'";
    rdf:type rdf:Property;
    rdfs:label "weight";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:internalDimension dcterms:description "Property. Internal dimension corresponding to the place to work inside the technical cabinet. The format is structured by a sub-property of 3 items. The unit code (text) of measurement  is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CMT** represents Centimeter. Model:'https://schema.org/StructuredValue'";
    rdf:type rdf:Property;
    rdfs:label "internalDimension";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range sdm:InternalDimension.
sdm:InternalDimension rdf:type rdfs:Class;
    rdfs:label "InternalDimension".
sdm:height rdf:type rdf:Property;
    rdfs:label "height";
    rdfs:domain sdm:InternalDimension;
    rdfs:range xsd:decimal.
sdm:width rdf:type rdf:Property;
    rdfs:label "width";
    rdfs:domain sdm:InternalDimension;
    rdfs:range xsd:decimal.
sdm:depth rdf:type rdf:Property;
    rdfs:label "depth";
    rdfs:domain sdm:InternalDimension;
    rdfs:range xsd:decimal.
sdm:protectionIP dcterms:description "Property. IP 'Ingress Protection' for the Junction Box. This is the level classifies and rates the degree of protection provided by mechanical casings and electrical enclosures against intrusion, dust, accidental contact, and water according to International Electrotechnical Commission standard (EN 60-529). First digit: Solid particle protection (Single numeral: 06 or 'X'). Second digit: Liquid ingress protection (Single numeral: 09 or 'X' ).Third digit: Personal Protection against access to dangerous parts (optional additional letter). Fourth digit: Other protections (optional additional letter)";
    rdf:type rdf:Property;
    rdfs:label "protectionIP";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:string.
sdm:protectionIK dcterms:description "Property. IK '*Mecanic Protection*' level relating to numeric classification for the degrees of protection provided by enclosures for electrical equipment against external mechanical impacts, according to International Electro technical Commission standard (EN 62-262). - IK varies from 0 (minimum resistance) to 10 (maximum resistance) which represents an Impact Energy (Unit Joule)";
    rdf:type rdf:Property;
    rdfs:label "protectionIK";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:maximumSystemVoltage dcterms:description "Property. Maximum system voltage permitted for the **module**. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt";
    rdf:type rdf:Property;
    rdfs:label "maximumSystemVoltage";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:operatingTemperature dcterms:description "Property. Ambient operating temperature range. This is the minimum and maximum resistance to cold and heat. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CEL** represents Degree Celsius.";
    rdf:type rdf:Property;
    rdfs:label "operatingTemperature";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range sdm:OperatingTemperature.
sdm:OperatingTemperature rdf:type rdfs:Class;
    rdfs:label "OperatingTemperature".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingTemperature;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingTemperature;
    rdfs:range xsd:decimal.
sdm:protectionOthers rdf:type rdf:Property;
    rdfs:label "protectionOthers";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:ProtectionOthers rdf:type skos:ConceptScheme.
sdm:protectionOthers rdfs:range [
  owl:oneOf (sdm:abrasion sdm:basement sdm:dampProof sdm:display sdm:doorTearing sdm:dust sdm:forcedOpening sdm:graffiti sdm:insect sdm:other sdm:roofOverload sdm:saltSpray sdm:shielding sdm:solar sdm:vandalism sdm:water)
].
sdm:abrasion rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "abrasion".
sdm:basement rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "basement".
sdm:dampProof rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "dampProof".
sdm:display rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "display".
sdm:doorTearing rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "doorTearing".
sdm:dust rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "dust".
sdm:forcedOpening rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "forcedOpening".
sdm:graffiti rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "graffiti".
sdm:insect rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "insect".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "other".
sdm:roofOverload rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "roofOverload".
sdm:saltSpray rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "saltSpray".
sdm:shielding rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "shielding".
sdm:solar rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "solar".
sdm:vandalism rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "vandalism".
sdm:water rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionOthers;
    rdfs:label "water".
sdm:doorCount dcterms:description "Property. Count of doors of the technical Cabinet.";
    rdf:type rdf:Property;
    rdfs:label "doorCount";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:doorType dcterms:description "Property. Type of door of the technical Cabinet. A unique value of these values. Enum:'mixed, other, solid, transparent'";
    rdf:type rdf:Property;
    rdfs:label "doorType";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:DoorType rdf:type skos:ConceptScheme.
sdm:doorType rdfs:range [
  owl:oneOf (sdm:mixed sdm:other sdm:solid sdm:transparent)
].
sdm:mixed rdf:type skos:Concept;
    skos:inScheme sdm:DoorType;
    rdfs:label "mixed".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:DoorType;
    rdfs:label "other".
sdm:solid rdf:type skos:Concept;
    skos:inScheme sdm:DoorType;
    rdfs:label "solid".
sdm:transparent rdf:type skos:Concept;
    skos:inScheme sdm:DoorType;
    rdfs:label "transparent".
sdm:doorOpeningAngle dcterms:description "Property. Door opening angle expressed in decimal degrees with a range from 0 to 180 degree. The unit code (text) of measurement  is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **DD** represents Decimal Degrees.";
    rdf:type rdf:Property;
    rdfs:label "doorOpeningAngle";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:doorClosingMode rdf:type rdf:Property;
    rdfs:label "doorClosingMode";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:DoorClosingMode rdf:type skos:ConceptScheme.
sdm:doorClosingMode rdfs:range [
  owl:oneOf (sdm:fixedHandle sdm:other sdm:revolvingHandle sdm:triangleHandle)
].
sdm:fixedHandle rdf:type skos:Concept;
    skos:inScheme sdm:DoorClosingMode;
    rdfs:label "fixedHandle".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:DoorClosingMode;
    rdfs:label "other".
sdm:revolvingHandle rdf:type skos:Concept;
    skos:inScheme sdm:DoorClosingMode;
    rdfs:label "revolvingHandle".
sdm:triangleHandle rdf:type skos:Concept;
    skos:inScheme sdm:DoorClosingMode;
    rdfs:label "triangleHandle".
sdm:designMaterials rdf:type rdf:Property;
    rdfs:label "designMaterials";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:DesignMaterials rdf:type skos:ConceptScheme.
sdm:designMaterials rdfs:range [
  owl:oneOf (sdm:ABS-Plastic sdm:aluminum sdm:fiberGlass sdm:galvanizedSteel sdm:other sdm:polyester sdm:stainlessSteel)
].
sdm:ABS-Plastic rdf:type skos:Concept;
    skos:inScheme sdm:DesignMaterials;
    rdfs:label "ABS-Plastic".
sdm:aluminum rdf:type skos:Concept;
    skos:inScheme sdm:DesignMaterials;
    rdfs:label "aluminum".
sdm:fiberGlass rdf:type skos:Concept;
    skos:inScheme sdm:DesignMaterials;
    rdfs:label "fiberGlass".
sdm:galvanizedSteel rdf:type skos:Concept;
    skos:inScheme sdm:DesignMaterials;
    rdfs:label "galvanizedSteel".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:DesignMaterials;
    rdfs:label "other".
sdm:polyester rdf:type skos:Concept;
    skos:inScheme sdm:DesignMaterials;
    rdfs:label "polyester".
sdm:stainlessSteel rdf:type skos:Concept;
    skos:inScheme sdm:DesignMaterials;
    rdfs:label "stainlessSteel".
sdm:interiorCoating rdf:type rdf:Property;
    rdfs:label "interiorCoating";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:InteriorCoating rdf:type skos:ConceptScheme.
sdm:interiorCoating rdfs:range [
  owl:oneOf (sdm:fiberGlass sdm:heatInsulating sdm:other sdm:plastic sdm:polyester sdm:polyesterResin sdm:steel)
].
sdm:fiberGlass rdf:type skos:Concept;
    skos:inScheme sdm:InteriorCoating;
    rdfs:label "fiberGlass".
sdm:heatInsulating rdf:type skos:Concept;
    skos:inScheme sdm:InteriorCoating;
    rdfs:label "heatInsulating".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:InteriorCoating;
    rdfs:label "other".
sdm:plastic rdf:type skos:Concept;
    skos:inScheme sdm:InteriorCoating;
    rdfs:label "plastic".
sdm:polyester rdf:type skos:Concept;
    skos:inScheme sdm:InteriorCoating;
    rdfs:label "polyester".
sdm:polyesterResin rdf:type skos:Concept;
    skos:inScheme sdm:InteriorCoating;
    rdfs:label "polyesterResin".
sdm:steel rdf:type skos:Concept;
    skos:inScheme sdm:InteriorCoating;
    rdfs:label "steel".
sdm:exteriorCoating rdf:type rdf:Property;
    rdfs:label "exteriorCoating";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:ExteriorCoating rdf:type skos:ConceptScheme.
sdm:exteriorCoating rdfs:range [
  owl:oneOf (sdm:fiberGlass sdm:other sdm:plastic sdm:polyester sdm:polyesterResin sdm:steel)
].
sdm:fiberGlass rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorCoating;
    rdfs:label "fiberGlass".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorCoating;
    rdfs:label "other".
sdm:plastic rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorCoating;
    rdfs:label "plastic".
sdm:polyester rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorCoating;
    rdfs:label "polyester".
sdm:polyesterResin rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorCoating;
    rdfs:label "polyesterResin".
sdm:steel rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorCoating;
    rdfs:label "steel".
sdm:exteriorFinish rdf:type rdf:Property;
    rdfs:label "exteriorFinish";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:ExteriorFinish rdf:type skos:ConceptScheme.
sdm:exteriorFinish rdfs:range [
  owl:oneOf (sdm:graffiti sdm:other sdm:raised sdm:roughcast sdm:smooth sdm:textured)
].
sdm:graffiti rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorFinish;
    rdfs:label "graffiti".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorFinish;
    rdfs:label "other".
sdm:raised rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorFinish;
    rdfs:label "raised".
sdm:roughcast rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorFinish;
    rdfs:label "roughcast".
sdm:smooth rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorFinish;
    rdfs:label "smooth".
sdm:textured rdf:type skos:Concept;
    skos:inScheme sdm:ExteriorFinish;
    rdfs:label "textured".
sdm:ventilationMode rdf:type rdf:Property;
    rdfs:label "ventilationMode";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/TechnicalCabinetDevice/schema.json>.
sdm:VentilationMode rdf:type skos:ConceptScheme.
sdm:ventilationMode rdfs:range [
  owl:oneOf (sdm:airConditioners sdm:dehumidifier sdm:none sdm:other sdm:selfVentilatedGills)
].
sdm:airConditioners rdf:type skos:Concept;
    skos:inScheme sdm:VentilationMode;
    rdfs:label "airConditioners".
sdm:dehumidifier rdf:type skos:Concept;
    skos:inScheme sdm:VentilationMode;
    rdfs:label "dehumidifier".
sdm:none rdf:type skos:Concept;
    skos:inScheme sdm:VentilationMode;
    rdfs:label "none".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:VentilationMode;
    rdfs:label "other".
sdm:selfVentilatedGills rdf:type skos:Concept;
    skos:inScheme sdm:VentilationMode;
    rdfs:label "selfVentilatedGills".
