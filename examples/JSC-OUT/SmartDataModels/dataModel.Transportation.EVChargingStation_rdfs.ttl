@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json> dcterms:title "Smart Data Models - Transportation / EV Charging Station";
    dcterms:description "EV Charging Station".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be EVChargingStation";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:EVChargingStation)
].
sdm:EVChargingStation rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "EVChargingStation".
sdm:capacity dcterms:description "Property. The total number of vehicles which can be charged at the same time. The total number of sockets can be higher. Model:'http://schema.org/Number'. ";
    rdf:type rdf:Property;
    rdfs:label "capacity";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:integer.
sdm:socketNumber dcterms:description "Property. The total number of sockets offered by this charging station. Model:'http://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "socketNumber";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:integer.
sdm:availableCapacity dcterms:description "Property. The number of vehicles which currently can be charged. Model:'http://schema.org/Number'. It must lower or equal than `capacity`.";
    rdf:type rdf:Property;
    rdfs:label "availableCapacity";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:integer.
sdm:allowedVehicleType rdf:type rdf:Property;
    rdfs:label "allowedVehicleType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>.
sdm:AllowedVehicleType rdf:type skos:ConceptScheme.
sdm:allowedVehicleType rdfs:range [
  owl:oneOf (sdm:bicycle sdm:bus sdm:car sdm:caravan sdm:motorcycle sdm:motorscooter sdm:truck)
].
sdm:bicycle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "bicycle".
sdm:bus rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "bus".
sdm:car rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "car".
sdm:caravan rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "caravan".
sdm:motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorcycle".
sdm:motorscooter rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorscooter".
sdm:truck rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "truck".
sdm:socketType rdf:type rdf:Property;
    rdfs:label "socketType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>.
sdm:SocketType rdf:type skos:ConceptScheme.
sdm:socketType rdfs:range [
  owl:oneOf (sdm:Caravan_Mains_Socket sdm:CHAdeMO <sdm:CCS/SAE> sdm:Dual_CHAdeMO sdm:Dual_J-1772 sdm:Dual_Mennekes sdm:J-1772 sdm:Mennekes sdm:Other sdm:Tesla sdm:Type2 sdm:Type3 sdm:Wall_Euro)
].
sdm:Caravan_Mains_Socket rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Caravan_Mains_Socket".
sdm:CHAdeMO rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "CHAdeMO".
<sdm:CCS/SAE> rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "CCS/SAE".
sdm:Dual_CHAdeMO rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Dual_CHAdeMO".
sdm:Dual_J-1772 rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Dual_J-1772".
sdm:Dual_Mennekes rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Dual_Mennekes".
sdm:J-1772 rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "J-1772".
sdm:Mennekes rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Mennekes".
sdm:Other rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Other".
sdm:Tesla rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Tesla".
sdm:Type2 rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Type2".
sdm:Type3 rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Type3".
sdm:Wall_Euro rdf:type skos:Concept;
    skos:inScheme sdm:SocketType;
    rdfs:label "Wall_Euro".
sdm:openingHours dcterms:description "Property. Opening hours of the charging station. Model:'http://schema.org/openingHours'. ";
    rdf:type rdf:Property;
    rdfs:label "openingHours";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:string.
sdm:status dcterms:description "Property. Model:'http://schema.org/Text'. Status of the charging station. Enum:'almostEmpty, almostFull, empty, full, outOfService, withIncidence, working'. Or any other application-specific.";
    rdf:type rdf:Property;
    rdfs:label "status";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>.
sdm:Status rdf:type skos:ConceptScheme.
sdm:status rdfs:range [
  owl:oneOf (sdm:almostEmpty sdm:almostFull sdm:empty sdm:full sdm:outOfService sdm:withIncidence sdm:working)
].
sdm:almostEmpty rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "almostEmpty".
sdm:almostFull rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "almostFull".
sdm:empty rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "empty".
sdm:full rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "full".
sdm:outOfService rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "outOfService".
sdm:withIncidence rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "withIncidence".
sdm:working rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "working".
sdm:network dcterms:description "Property. The name of the Network, with that the operator cooperates. Model:'https://schema.org/Text'. ";
    rdf:type rdf:Property;
    rdfs:label "network";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:string.
sdm:operator dcterms:description "Property. Charging station's operator. Model:'https://schema.org/Text'. ";
    rdf:type rdf:Property;
    rdfs:label "operator";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:string.
sdm:amperage dcterms:description "Property. The total amperage offered by the charging station.. Model:'http://schema.org/Number'. Units:'Ampers (A)'";
    rdf:type rdf:Property;
    rdfs:label "amperage";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:decimal.
sdm:voltage dcterms:description "Property. The total voltage offered by the charging station. Model:'http://schema.org/Number'. Units:'Volts (V)'";
    rdf:type rdf:Property;
    rdfs:label "voltage";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:decimal.
sdm:chargeType rdf:type rdf:Property;
    rdfs:label "chargeType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>.
sdm:ChargeType rdf:type skos:ConceptScheme.
sdm:chargeType rdfs:range [
  owl:oneOf (sdm:annualPayment sdm:flat sdm:free sdm:monthlyPayment sdm:other)
].
sdm:annualPayment rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "annualPayment".
sdm:flat rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "flat".
sdm:free rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "free".
sdm:monthlyPayment rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "monthlyPayment".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "other".
sdm:acceptedPaymentMethod rdf:type rdf:Property;
    rdfs:label "acceptedPaymentMethod";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>.
sdm:AcceptedPaymentMethod rdf:type skos:ConceptScheme.
sdm:acceptedPaymentMethod rdfs:range [
  owl:oneOf (sdm:ByBankTransferInAdvance sdm:ByInvoice sdm:Cash sdm:CheckInAdvance sdm:COD sdm:DirectDebit sdm:GoogleCheckout sdm:PayPal sdm:PaySwarm)
].
sdm:ByBankTransferInAdvance rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "ByBankTransferInAdvance".
sdm:ByInvoice rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "ByInvoice".
sdm:Cash rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "Cash".
sdm:CheckInAdvance rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "CheckInAdvance".
sdm:COD rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "COD".
sdm:DirectDebit rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "DirectDebit".
sdm:GoogleCheckout rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "GoogleCheckout".
sdm:PayPal rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "PayPal".
sdm:PaySwarm rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "PaySwarm".
sdm:dataDescriptor dcterms:description "Relationship. URI pointing to the data-descriptor entity";
    rdf:type rdf:Property;
    rdfs:label "dataDescriptor";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:anyURI.
sdm:powerConsumption dcterms:description "Property. Power consumed by the entity corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "powerConsumption";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:decimal.
sdm:chargingUnitId dcterms:description "Property. The Id of the charging point in the EV charging station corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "chargingUnitId";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:string.
sdm:transactionId dcterms:description "Property. Unique transaction Id of the entity corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "transactionId";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:string.
sdm:transactionType dcterms:description "Property. Type of the transaction based on the mode of payment (For eg. mobile/UPI, card, etc) or mode of service (For eg. Issue, ReIssue, Entry, Exit etc.) corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "transactionType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:string.
sdm:stationName dcterms:description "Property. The name station corresponding to this observation. It can be the name of bike docking station, charging station, etc.";
    rdf:type rdf:Property;
    rdfs:label "stationName";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:string.
sdm:amountCollected dcterms:description "Property. Amount collected towards the service corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "amountCollected";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:decimal.
sdm:taxAmountCollected dcterms:description "Property. The amount of tax levied on the products, things and services which includes sales tax, value-added tax, service tax, Good and Service tax, customs duty, etc.";
    rdf:type rdf:Property;
    rdfs:label "taxAmountCollected";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:decimal.
sdm:endDateTime dcterms:description "Property. Reported end time corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "endDateTime";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:dateTime.
sdm:startDateTime dcterms:description "Property. Reported start time corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "startDateTime";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:dateTime.
sdm:vehicleType dcterms:description "Property. Type of vehicle from the point of view of its structural characteristics. This is different than the vehicle category . Model:'https://schema.org/Text'. Enum:'agriculturalVehicle, ambulance, anyVehicle, articulatedVehicle, autorickshaw, bicycle, binTrolley, BRT bus, BRT minibus, bus, car, caravan, carOrLightVehicle, carWithCaravan, carWithTrailer, cleaningTrolley, compactor, constructionOrMaintenanceVehicle, dumper, e-moped, e-scooter, e-motorcycle,fire tender, fourWheelDrive, highSidedVehicle, hopper, lorry, minibus, moped, motorcycle, motorcycleWithSideCar, motorscooter, police van, sweepingMachine, tanker, tempo, threeWheeledVehicle, tipper, trailer, tram, twoWheeledVehicle, trolley, van, vehicleWithoutCatalyticConverter, vehicleWithCaravan, vehicleWithTrailer, withEvenNumberedRegistrationPlates, withOddNumberedRegistrationPlates, other'. The following values defined by _VehicleTypeEnum_ and _VehicleTypeEnum2_, [DATEX 2 version 2.3](http://d2docs.ndwcloud.nu/_static/umlmodel/v2.3/index.htm)";
    rdf:type rdf:Property;
    rdfs:label "vehicleType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>.
sdm:VehicleType rdf:type skos:ConceptScheme.
sdm:vehicleType rdfs:range [
  owl:oneOf (sdm:agriculturalVehicle sdm:ambulance sdm:articulatedVehicle sdm:autorickshaw sdm:bicycle sdm:binTrolley sdm:BRT bus sdm:BRT minibus sdm:bus sdm:car sdm:caravan sdm:carOrLightVehicle sdm:carWithCaravan sdm:carWithTrailer sdm:cleaningTrolley sdm:compactor sdm:constructionOrMaintenanceVehicle sdm:dumper sdm:e-moped sdm:e-scooter sdm:e-motorcycle sdm:fire tender sdm:fourWheelDrive sdm:highSidedVehicle sdm:hopper sdm:lorry sdm:minibus sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:police van sdm:sweepingMachine sdm:tanker sdm:tempo sdm:threeWheeledVehicle sdm:tipper sdm:trailer sdm:tram sdm:twoWheeledVehicle sdm:trolley sdm:van)
].
sdm:agriculturalVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "agriculturalVehicle".
sdm:ambulance rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "ambulance".
sdm:articulatedVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "articulatedVehicle".
sdm:autorickshaw rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "autorickshaw".
sdm:bicycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bicycle".
sdm:binTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "binTrolley".
sdm:BRT bus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "BRT bus".
sdm:BRT minibus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "BRT minibus".
sdm:bus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bus".
sdm:car rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "car".
sdm:caravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "caravan".
sdm:carOrLightVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carOrLightVehicle".
sdm:carWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithCaravan".
sdm:carWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithTrailer".
sdm:cleaningTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "cleaningTrolley".
sdm:compactor rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "compactor".
sdm:constructionOrMaintenanceVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "constructionOrMaintenanceVehicle".
sdm:dumper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "dumper".
sdm:e-moped rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-moped".
sdm:e-scooter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-scooter".
sdm:e-motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-motorcycle".
sdm:fire tender rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "fire tender".
sdm:fourWheelDrive rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "fourWheelDrive".
sdm:highSidedVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "highSidedVehicle".
sdm:hopper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "hopper".
sdm:lorry rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "lorry".
sdm:minibus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "minibus".
sdm:moped rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "moped".
sdm:motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycle".
sdm:motorcycleWithSideCar rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycleWithSideCar".
sdm:motorscooter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorscooter".
sdm:police van rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "police van".
sdm:sweepingMachine rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "sweepingMachine".
sdm:tanker rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tanker".
sdm:tempo rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tempo".
sdm:threeWheeledVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "threeWheeledVehicle".
sdm:tipper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tipper".
sdm:trailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trailer".
sdm:tram rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tram".
sdm:twoWheeledVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "twoWheeledVehicle".
sdm:trolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trolley".
sdm:van rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "van".
sdm:observationDateTime dcterms:description "Property. Last reported time of observation.";
    rdf:type rdf:Property;
    rdfs:label "observationDateTime";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/EVChargingStation/schema.json>;
    rdfs:range xsd:dateTime.
