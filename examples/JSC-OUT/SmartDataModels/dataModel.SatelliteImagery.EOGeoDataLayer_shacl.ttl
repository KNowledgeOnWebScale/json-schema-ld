@prefix dash: <http://datashapes.org/dash#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix schema: <https://schema.org/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix gbfs: <https://w3id.org/gbfs#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix sdm: <https://w3id.org/sdm#>.
@prefix sdmshape: <https://w3id.org/sdm/shapes/schema.json#>.

<https://w3id.org/sdm/shapes/schema.json#schema.jsonShape> rdf:type sh:NodeShape;
    sh:targetClass <https://raw.githubusercontent.com/smart-data-models/dataModel.SatelliteImagery/master/EOGeoDataLayer/schema.json>.
sdmshape:schema.jsonShape sh:property [
  sh:path sdm:type;
  sh:description "Property. NGSI-LD Entity Type. It must be equal to EOGeoDataLayer.";
  sh:name "type";
  sh:in (sdm:EOGeoDataLayer);
  sh:minCount 1;
  sh:maxCount 1
], [
  sh:path sdm:localServerPath;
  sh:description "Property. Model:'https://schema.org/Text'. A mandatory text string used to declare the path that the output data layer is saved on the server";
  sh:name "localServerPath";
  sh:minCount 1;
  sh:maxCount 1;
  sh:datatype xsd:string
], [
  sh:path sdm:storageFormat;
  sh:description "Property. Entity's satorage format.";
  sh:name "storageFormat";
  sh:minCount 1;
  sh:maxCount 1;
  sh:datatype xsd:string
], [
  sh:path sdm:geoMetadata;
  sh:description "Property. Model:'https://schema.org/Text'. A text string used to declare the metadata file if available";
  sh:name "geoMetadata";
  sh:datatype xsd:string
], [
  sh:path sdm:contentInformation;
  sh:description "Property. An array that describes for each layer (e.g. band1) or entity name, the type of information (e.g. categorical, numerical) and an array with the explanation of the depicted values (e.g. [1:oil, 0:no oil])";
  sh:name "contentInformation"
].
sdmshape:ContentInformationShape rdf:type sh:NodeShape;
    sh:targetClass sdm:ContentInformation;
    sh:property [
  sh:path sdm:layer_name;
  sh:name "layer_name";
  sh:datatype xsd:string
], [
  sh:path sdm:layer_categorization;
  sh:name "layer_categorization";
  sh:in (sdm:categorical sdm:numerical)
], [
  sh:path sdm:values_explanation;
  sh:name "values_explanation";
  sh:datatype xsd:string
], [
  sh:path sdm:isOutputOf;
  sh:description "Relationship. The ID of the analysis that was performed to extract this data layer";
  sh:name "isOutputOf";
  sh:datatype xsd:anyURI
].
