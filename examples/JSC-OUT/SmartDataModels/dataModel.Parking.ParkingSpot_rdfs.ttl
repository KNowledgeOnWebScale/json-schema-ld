@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json> dcterms:title "Parking Spot";
    dcterms:description "A parking spot is an area well delimited where one vehicle can be parked.".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be ParkingSpot";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:ParkingSpot)
].
sdm:ParkingSpot rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "ParkingSpot".
sdm:status dcterms:description "Property. Model:'https://schema.org/Text'. Status of the parking spot from the point of view of occupancy. Enum:'closed, free, occupied, unknown'";
    rdf:type rdf:Property;
    rdfs:label "status";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>.
sdm:Status rdf:type skos:ConceptScheme.
sdm:status rdfs:range [
  owl:oneOf (sdm:closed sdm:free sdm:occupied sdm:unknown)
].
sdm:closed rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "closed".
sdm:free rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "free".
sdm:occupied rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "occupied".
sdm:unknown rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "unknown".
sdm:width dcterms:description "Property. Model:'https://schema.org/width'. Width of the parking spot.";
    rdf:type rdf:Property;
    rdfs:label "width";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>;
    rdfs:range xsd:decimal.
sdm:length dcterms:description "Property. Model:'https://schema.org/length'. Length of the parking spot.";
    rdf:type rdf:Property;
    rdfs:label "length";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>;
    rdfs:range xsd:decimal.
sdm:refParkingGroup dcterms:description "Relationship. Group to which the parking spot belongs to. For model simplification purposes only one group is allowed per parking spot.";
    rdf:type rdf:Property;
    rdfs:label "refParkingGroup";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>.
sdm:refParkingSite dcterms:description "Relationship. Parking site to which the parking spot belongs to.";
    rdf:type rdf:Property;
    rdfs:label "refParkingSite";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>.
sdm:category rdf:type rdf:Property;
    rdfs:label "category";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>.
sdm:Category rdf:type skos:ConceptScheme.
sdm:category rdfs:range [
  owl:oneOf (sdm:onStreet sdm:offStreet)
].
sdm:onStreet rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "onStreet".
sdm:offStreet rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "offStreet".
sdm:refDevice rdf:type rdf:Property;
    rdfs:label "refDevice";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/ParkingSpot/schema.json>.
