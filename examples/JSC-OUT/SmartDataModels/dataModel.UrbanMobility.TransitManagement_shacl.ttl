@prefix dash: <http://datashapes.org/dash#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix schema: <https://schema.org/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix gbfs: <https://w3id.org/gbfs#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix sdm: <https://w3id.org/sdm#>.
@prefix sdmshape: <https://w3id.org/sdm/shapes/schema.json#>.

<https://w3id.org/sdm/shapes/schema.json#schema.jsonShape> rdf:type sh:NodeShape;
    sh:targetClass <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>.
sdm:schema.jsonShape sh:property [
  sh:path sdm:type;
  sh:description "Property. NGSI Entity type. It has to be TransitManagement";
  sh:name "type";
  sh:in (sdm:TransitManagement);
  sh:minCount 1;
  sh:maxCount 1
], [
  sh:path sdm:dataDescriptor;
  sh:description "Relationship. URI pointing to the data-descriptor entity";
  sh:name "dataDescriptor";
  sh:datatype xsd:anyURI
], [
  sh:path sdm:vehicleType;
  sh:description "Property. Describes the type of vehicle corresponding to this observation, could be hopper, compactor, tipper, dumper in case of solid waste management vehicles, BRT mini bus, BRT bus, city bus in case of ITMS vehicles, Ambulance, Fire tender, Police van etc, in case of emergency vehicles and Moped/Scooter, Motor Cycle,  Autorickshaw, Private car/ Jeep car, Tempo, Bus, E-Moped/E-Scooter/E-Motor Cycle, Public motor in case of vehicle registration.";
  sh:name "vehicleType";
  sh:in (sdm:agriculturalVehicle sdm:ambulance sdm:anyVehicle sdm:articulatedVehicle sdm:autorickshaw sdm:bicycle sdm:binTrolley sdm:BRT mini busÂ· sdm:BRT bus sdm:bus sdm:car sdm:caravan sdm:carOrLightVehicle sdm:carWithCaravan sdm:carWithTrailer sdm:cleaningTrolley sdm:compactor sdm:constructionOrMaintenanceVehicle sdm:dumper sdm:e-moped sdm:e-scooter sdm:e-motorcycle sdm:fireTender sdm:fourWheelDrive sdm:highSidedVehicle sdm:hopper sdm:lorry sdm:minibus sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:policeVan sdm:publicMotor sdm:sweepingMachine sdm:tanker sdm:tempo sdm:threeWheeledVehicle sdm:tipper sdm:trailer sdm:tram sdm:trolley sdm:twoWheeledVehicle sdm:van sdm:vehicleWithoutCatalyticConverter sdm:vehicleWithCaravan sdm:vehicleWithTrailer sdm:withEvenNumberedRegistrationPlates sdm:withOddNumberedRegistrationPlates sdm:other)
], [
  sh:path sdm:trip_details;
  sh:description "Property. A descriptor of realtime update on the schedule of a vehicle along a trip.";
  sh:name "trip_details"
].
sdm:TripDetailShape rdf:type sh:NodeShape;
    sh:targetClass sdm:TripDetail;
    sh:property [
  sh:path sdm:bearing;
  sh:description "Property. Bearing, in degrees, clockwise from True North, i.e., 0 is North and 90 is East. This can be the compass bearing, or the direction towards the next stop or intermediate location. This should not be deduced from the sequence of previous positions, which clients can compute from previous data";
  sh:name "bearing";
  sh:datatype xsd:decimal
], [
  sh:path sdm:odometer;
  sh:description "Property. Odometer value, in meters. Units:'meters'";
  sh:name "odometer";
  sh:datatype xsd:decimal
], [
  sh:path sdm:speed;
  sh:description "Property. Momentary speed measured by the vehicle, in meters per second. Units:'meters per second'";
  sh:name "speed";
  sh:datatype xsd:decimal
].
sdm:schema.jsonShape sh:property [
  sh:path sdm:position;
  sh:description "Property. Describes the current position of the vehicle corresponding to this observation. SameAs: position field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition). Model:'https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition'";
  sh:name "position"
].
sdm:PositionShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Position;
    sh:property [
  sh:path sdm:latitude;
  sh:description "Property. Degrees North, in the WGS-84 coordinate system.";
  sh:name "latitude";
  sh:datatype xsd:decimal
], [
  sh:path sdm:longitude;
  sh:description "Property. Degrees East, in the WGS-84 coordinate system.";
  sh:name "longitude";
  sh:datatype xsd:decimal
], [
  sh:path sdm:bearing;
  sh:description "Property. Bearing, in degrees, clockwise from True North, i.e., 0 is North and 90 is East. This can be the compass bearing, or the direction towards the next stop or intermediate location. This should not be deduced from the sequence of previous positions, which clients can compute from previous data";
  sh:name "bearing";
  sh:datatype xsd:decimal
], [
  sh:path sdm:odometer;
  sh:description "Property. Odometer value, in meters. Units:'meters'";
  sh:name "odometer";
  sh:datatype xsd:decimal
], [
  sh:path sdm:speed;
  sh:description "Property. Momentary speed measured by the vehicle, in meters per second. Units:'meters per second'";
  sh:name "speed";
  sh:datatype xsd:decimal
].
sdm:schema.jsonShape sh:property [
  sh:path sdm:trip_delay;
  sh:description "Property. This can be positive and negative in seconds and shows how much the vehicle deviates from the planned one. SameAs: 'delay' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent)";
  sh:name "trip_delay";
  sh:datatype xsd:decimal
], [
  sh:path sdm:route_url;
  sh:description "Property. Contains the URL of a web page about that particular route and is different from the agency_url. SameAs: 'route_url' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
  sh:name "route_url";
  sh:datatype xsd:string
], [
  sh:path sdm:agency_lang;
  sh:description "Property. Contains a two-letter ISO 639-1 code for the primary language used by this transit agency. The language code is case-insensitive (both en and EN are accepted). SameAs: 'agency_lang' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
  sh:name "agency_lang";
  sh:datatype xsd:string
], [
  sh:path sdm:depot_name;
  sh:description "Property. Describes the depot name of the bus depot corresponding to this observation.";
  sh:name "depot_name";
  sh:datatype xsd:string
], [
  sh:path sdm:travelTime;
  sh:description "Property. The time taken to travel between the origin bus stop and the destination bus stop corresponding to this observation in HH:MM:SS format(HH:MM:SS is also accepted, if the hour begins with 0).";
  sh:name "travelTime";
  sh:datatype xsd:time
], [
  sh:path sdm:direction_id;
  sh:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
  sh:name "direction_id";
  sh:datatype xsd:decimal
], [
  sh:path sdm:schedule_relationship;
  sh:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2)";
  sh:name "schedule_relationship";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_sequence_detail;
  sh:description "Property. Describes the stop sequence for a trip in the designated route made by the public transit vehicle.SameAs: 'stop_sequence' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
  sh:name "stop_sequence_detail"
].
sdm:StopSequenceDetailShape rdf:type sh:NodeShape;
    sh:targetClass sdm:StopSequenceDetail;
    sh:property [
  sh:path sdm:stop_sequence;
  sh:description "Property. Must be the same as in stop_times.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for.";
  sh:name "stop_sequence";
  sh:datatype xsd:decimal
], [
  sh:path sdm:stop_id;
  sh:description "Property. Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.";
  sh:name "stop_id";
  sh:datatype xsd:string
].
sdm:schema.jsonShape sh:property [
  sh:path sdm:stop_time_update;
  sh:description "Property. Additional information on the vehicle that is serving this trip.";
  sh:name "stop_time_update"
].
sdm:StopTimeUpdateShape rdf:type sh:NodeShape;
    sh:targetClass sdm:StopTimeUpdate;
    sh:property [
  sh:path sdm:stop_id;
  sh:description "Property. Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.";
  sh:name "stop_id";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_sequence;
  sh:description "Property. Must be the same as in stop_times.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for.";
  sh:name "stop_sequence";
  sh:datatype xsd:decimal
], [
  sh:path sdm:schedule_relationship;
  sh:description "Property. Enum:'SCHEDULED, SKIPPED, NO_DATA'. SCHEDULED means that the vehicle is proceeding in accordance with its static schedule of stops, although not necessarily according to the times of the schedule. This is the default behavior. At least one of arrival and departure must be provided. SKIPPED means that The stop is skipped, i.e., the vehicle will not stop at this stop. The arrival and departure fields are optional. NO_DATA means that no data is given for this stop. It indicates that there is no realtime information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime information. When NO_DATA is set neither arrival nor departure should be supplied.";
  sh:name "schedule_relationship";
  sh:in (sdm:SCHEDULED sdm:SKIPPED sdm:NO_DATA)
], [
  sh:path sdm:arrival;
  sh:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
  sh:name "arrival"
].
sdm:ArrivalShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Arrival;
    sh:property [
  sh:path sdm:uncertainty;
  sh:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
  sh:name "uncertainty";
  sh:datatype xsd:decimal
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:departure;
  sh:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
  sh:name "departure"
].
sdm:DepartureShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Departure;
    sh:property [
  sh:path sdm:uncertainty;
  sh:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
  sh:name "uncertainty";
  sh:datatype xsd:decimal
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:trip_update;
  sh:description "Property. Describes the trip information like delay, departures, etc., for a trip made by the vehicle corresponding to this observation.SameAs:'trip_update' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity).";
  sh:name "trip_update"
].
sdm:TripUpdateShape rdf:type sh:NodeShape;
    sh:targetClass sdm:TripUpdate;
    sh:property [
  sh:path sdm:stop_time_update;
  sh:description "Property. Additional information on the vehicle that is serving this trip.";
  sh:name "stop_time_update"
].
sdm:StopTimeUpdateShape rdf:type sh:NodeShape;
    sh:targetClass sdm:StopTimeUpdate;
    sh:property [
  sh:path sdm:stop_id;
  sh:description "Property. Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.";
  sh:name "stop_id";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_sequence;
  sh:description "Property. Must be the same as in stop_times.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for.";
  sh:name "stop_sequence";
  sh:datatype xsd:decimal
], [
  sh:path sdm:schedule_relationship;
  sh:description "Property. Enum:'SCHEDULED, SKIPPED, NO_DATA'. SCHEDULED means that the vehicle is proceeding in accordance with its static schedule of stops, although not necessarily according to the times of the schedule. This is the default behavior. At least one of arrival and departure must be provided. SKIPPED means that The stop is skipped, i.e., the vehicle will not stop at this stop. The arrival and departure fields are optional. NO_DATA means that no data is given for this stop. It indicates that there is no realtime information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime information. When NO_DATA is set neither arrival nor departure should be supplied.";
  sh:name "schedule_relationship";
  sh:in (sdm:SCHEDULED sdm:SKIPPED sdm:NO_DATA)
], [
  sh:path sdm:arrival;
  sh:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
  sh:name "arrival"
].
sdm:ArrivalShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Arrival;
    sh:property [
  sh:path sdm:uncertainty;
  sh:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
  sh:name "uncertainty";
  sh:datatype xsd:decimal
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:departure;
  sh:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
  sh:name "departure"
].
sdm:DepartureShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Departure;
    sh:property [
  sh:path sdm:uncertainty;
  sh:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
  sh:name "uncertainty";
  sh:datatype xsd:decimal
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:timestamp;
  sh:description "Property. Last reported time of observation from the vehicle. SameAs: 'timestamp' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
  sh:name "timestamp";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:vehicleDesc;
  sh:description "Property. Describes the additional information of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)/(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
  sh:name "vehicleDesc"
].
sdm:VehicleDescShape rdf:type sh:NodeShape;
    sh:targetClass sdm:VehicleDesc;
    sh:property [
  sh:path sdm:vehicle_id;
  sh:description "Property. Unique ID assigned to the vehicle corresponding to this observation,used in internal system identification.SameAs: 'id' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "vehicle_id";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicle_label;
  sh:description "Property. User visible label,i.e.,something that must be shown to the passenger to help identify the correct vehicle.SameAs: 'label' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "vehicle_label";
  sh:datatype xsd:string
], [
  sh:path sdm:license_plate;
  sh:description "Property. Gives the License Plate number of the vehice.SameAs: 'license_plate' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "license_plate";
  sh:datatype xsd:string
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:trip;
  sh:description "Property. Describes the trip the vehicle corresponding to this observation is making. SameAs:'trip' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
  sh:name "trip"
].
sdm:TripShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Trip;
    sh:property [
  sh:path sdm:direction_id;
  sh:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "direction_id";
  sh:datatype xsd:decimal
], [
  sh:path sdm:schedule_relationship;
  sh:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2).";
  sh:name "schedule_relationship";
  sh:datatype xsd:string
], [
  sh:path sdm:route_id;
  sh:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "route_id";
  sh:datatype xsd:string
], [
  sh:path sdm:start_date;
  sh:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "start_date";
  sh:datatype xsd:string
], [
  sh:path sdm:start_time;
  sh:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "start_time";
  sh:datatype xsd:string
], [
  sh:path sdm:trip_id;
  sh:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "trip_id";
  sh:datatype xsd:string
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:vehicle_id;
  sh:description "Property. Unique ID assigned to the vehicle corresponding to this observation, used in internal system identification. SameAs: 'id' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)";
  sh:name "vehicle_id";
  sh:datatype xsd:string
], [
  sh:path sdm:agency_fare_url;
  sh:description "Property. URL of a web page that contains the details of the fares and also could allow to purchase tickets for that agency online. SameAs: 'agency_fare_url' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
  sh:name "agency_fare_url";
  sh:datatype xsd:string
], [
  sh:path sdm:actual_trip_end_time;
  sh:description "Property. This field specifies the time at which service or trip corresponding to this observation is scheduled to end.";
  sh:name "actual_trip_end_time";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:last_tracked_time;
  sh:description "Property. Gives the time at which the vehicle was last tracked.";
  sh:name "last_tracked_time";
  sh:datatype xsd:time
], [
  sh:path sdm:standing_capacity;
  sh:description "Property. Describes the passenger standing capacity of the vehicle corresponding to this observation.";
  sh:name "standing_capacity";
  sh:datatype xsd:decimal
], [
  sh:path sdm:last_stop_arrival_time;
  sh:description "Property. Specifies the arrival time at the previous stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (H:MM:SS is also accepted, if the hour begins with 0). \nNote: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. This is SameAs: absolute 'time'(StopTimeEvent) in the 'arrival' field of the stop_time_update (StopTimeUpdate) message of the GTFS Realtime message-TripUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
  sh:name "last_stop_arrival_time";
  sh:datatype xsd:time
], [
  sh:path sdm:agency_id;
  sh:description "Property. ID that uniquely identifies a transit agency. A transit feed may represent data from more than one agency. The agency_id is dataset unique. This field is optional for transit feeds that only contain data for a single agency. SameAs: 'agency_id' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
  sh:name "agency_id";
  sh:datatype xsd:string
], [
  sh:path sdm:arrival;
  sh:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate. SameAs: 'arrival' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate)";
  sh:name "arrival"
].
sdm:ArrivalShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Arrival;
    sh:property [
  sh:path sdm:uncertainty;
  sh:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
  sh:name "uncertainty";
  sh:datatype xsd:decimal
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:current_status;
  sh:description "Property. Describes the status of the vehicle w.r.t the stop corresponding to this observation ENUM: [INCOMING_AT, STOPPED_AT, IN_TRANSIT_TO]. SameAs:'current_status' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
  sh:name "current_status";
  sh:datatype xsd:string
], [
  sh:path sdm:route_type;
  sh:description "Property. Number indicating the type of transport-1 - Subway, Metro. Any underground rail system within a metropolitan area.2 - Rail. Used for intercity or long-distance travel.3 - Bus. Used for short- and long-distance bus routes. SameAs: 'route_type' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
  sh:name "route_type";
  sh:datatype xsd:string
], [
  sh:path sdm:speed;
  sh:description "Property. Gives the Speed  of the vehicle. SameAs 'speed' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)";
  sh:name "speed";
  sh:datatype xsd:decimal
], [
  sh:path sdm:route_id;
  sh:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
  sh:name "route_id";
  sh:datatype xsd:string
], [
  sh:path sdm:seating_capacity;
  sh:description "Property. Describes the passenger seating capacity of the vehicle corresponding to this observation.";
  sh:name "seating_capacity";
  sh:datatype xsd:decimal
], [
  sh:path sdm:stop_headsign;
  sh:description "Property. This field contains the text that appears on a sign that identifies the tripâs destination to passengers. SameAs: 'stop_headsign' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
  sh:name "stop_headsign";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicle_label;
  sh:description "Property. User visible label, i.e., something that must be shown to the passenger to help identify the correct vehicle. SameAs: 'label' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)";
  sh:name "vehicle_label";
  sh:datatype xsd:string
], [
  sh:path sdm:entity_id;
  sh:description "Property. Feed unique ID for the entity corressponding to this observation.SameAs:'entity_id' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity)";
  sh:name "entity_id";
  sh:datatype xsd:string
], [
  sh:path sdm:timestamp;
  sh:description "Property. Last reported time of observation from the vehicle. SameAs: 'timestamp' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
  sh:name "timestamp";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:arrival_time;
  sh:description "Property. Specifies the arrival time at a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). Note: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'arrival_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
  sh:name "arrival_time";
  sh:datatype xsd:time
], [
  sh:path sdm:stop_desc;
  sh:description "Property. This field contains a description of a stop. SameAs: 'stop_desc' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
  sh:name "stop_desc";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicleDesc;
  sh:description "Property. Describes the additional information of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)/(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
  sh:name "vehicleDesc"
].
sdm:VehicleDescShape rdf:type sh:NodeShape;
    sh:targetClass sdm:VehicleDesc;
    sh:property [
  sh:path sdm:vehicle_id;
  sh:description "Property. Unique ID assigned to the vehicle corresponding to this observation,used in internal system identification.SameAs: 'id' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "vehicle_id";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicle_label;
  sh:description "Property. User visible label,i.e.,something that must be shown to the passenger to help identify the correct vehicle.SameAs: 'label' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "vehicle_label";
  sh:datatype xsd:string
], [
  sh:path sdm:license_plate;
  sh:description "Property. Gives the License Plate number of the vehice.SameAs: 'license_plate' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "license_plate";
  sh:datatype xsd:string
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:route_long_name;
  sh:description "Property. Full name of a route. This name is more descriptive than the routeShortName and often includes the route's destination or stop. This mostly includes the to and from destination names of the route. SameAs: 'route_long_name' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
  sh:name "route_long_name";
  sh:datatype xsd:string
], [
  sh:path sdm:agency_timezone;
  sh:description "Property. Timezone field contains the timezone where the transit agency is located. SameAs: 'agency_timezone' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
  sh:name "agency_timezone";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_code;
  sh:description "Property. This field contains short text or a number that uniquely identifies the stop for passengers. Can be same as stop_id if it is for public. SameAs: 'stop_code' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
  sh:name "stop_code";
  sh:datatype xsd:string
], [
  sh:path sdm:tripDetails;
  sh:description "Property. A descriptor of realtime update on the schedule of a vehicle along a trip.";
  sh:name "tripDetails"
].
sdm:TripDetailShape rdf:type sh:NodeShape;
    sh:targetClass sdm:TripDetail;
    sh:property [
  sh:path sdm:stop_headsign;
  sh:description "Property. This field contains the text that appears on a sign that identifies the tripâs destination to passengers. SameAs: 'stop_headsign' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
  sh:name "stop_headsign";
  sh:datatype xsd:string
], [
  sh:path sdm:arrival_time;
  sh:description "Property.  Specifies the arrival time at a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). Note: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'arrival_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt).";
  sh:name "arrival_time";
  sh:datatype xsd:time
], [
  sh:path sdm:stop_id;
  sh:description "Property. Stop ID/Stop name of the bus stops corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
  sh:name "stop_id";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_sequence;
  sh:description "Property. Indicates the stop sequence of the vehicle corresponding to this observation, can be referenced from the GTFS static feed stop_times.txt. SameAs: 'stop_sequence' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate).";
  sh:name "stop_sequence";
  sh:datatype xsd:decimal
], [
  sh:path sdm:departure_time;
  sh:description "Property. Specifies the departure time from a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). Note: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'departure_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt).";
  sh:name "departure_time";
  sh:datatype xsd:time
].
sdm:StopTimeUpdateShape sh:property [
  sh:path sdm:agency_name;
  sh:description "Property. The agency_name field contains the full name of the transit agency. SameAs: 'agency_name' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
  sh:name "agency_name";
  sh:datatype xsd:string
], [
  sh:path sdm:route_desc;
  sh:description "Property. Description of the route. This can include the entire route details including to and from destination and timing information in a text description form. SameAs: 'route_desc' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
  sh:name "route_desc";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicle_position;
  sh:description "Property. Describes the realtime position of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity)";
  sh:name "vehicle_position"
].
sdm:VehiclePositionShape rdf:type sh:NodeShape;
    sh:targetClass sdm:VehiclePosition;
    sh:property [
  sh:path sdm:position;
  sh:description "Property. Describes the current position of the vehicle corresponding to this observation. SameAs: 'position' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
  sh:name "position"
].
sdm:PositionShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Position.
sdm:VehiclePositionShape sh:property [
  sh:path sdm:current_status;
  sh:description "Property. Describes the status of the vehicle w.r.t the stop corresponding to this observation ENUM: [INCOMING_AT, STOPPED_AT, IN_TRANSIT_TO]. SameAs:'current_status' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
  sh:name "current_status";
  sh:datatype xsd:string
], [
  sh:path sdm:timestamp;
  sh:description "Property. Last reported time of observation from the vehicle. SameAs:  'timestamp' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
  sh:name "timestamp";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:vehicleDesc;
  sh:description "Property. Describes the additional information of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)/(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
  sh:name "vehicleDesc"
].
sdm:VehicleDescShape rdf:type sh:NodeShape;
    sh:targetClass sdm:VehicleDesc;
    sh:property [
  sh:path sdm:vehicle_id;
  sh:description "Property. Unique ID assigned to the vehicle corresponding to this observation,used in internal system identification.SameAs: 'id' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "vehicle_id";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicle_label;
  sh:description "Property. User visible label,i.e.,something that must be shown to the passenger to help identify the correct vehicle.SameAs: 'label' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "vehicle_label";
  sh:datatype xsd:string
], [
  sh:path sdm:license_plate;
  sh:description "Property. Gives the License Plate number of the vehice.SameAs: 'license_plate' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
  sh:name "license_plate";
  sh:datatype xsd:string
].
sdm:VehiclePositionShape sh:property [
  sh:path sdm:stop_id;
  sh:description "Property. Stop ID/Stop name of the bus stops corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
  sh:name "stop_id";
  sh:datatype xsd:string
], [
  sh:path sdm:current_stop_sequence;
  sh:description "Property. Gives the stop sequence index of the current stop. This is determined by considering current_status, if current_status is missing IN_TRANSIT_TO is assumed. SameAs:'current_stop_sequence' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
  sh:name "current_stop_sequence";
  sh:datatype xsd:decimal
], [
  sh:path sdm:trip;
  sh:description "Property. Describes the trip the vehicle corresponding to this observation is making. SameAs:'trip' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
  sh:name "trip"
].
sdm:TripShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Trip;
    sh:property [
  sh:path sdm:direction_id;
  sh:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "direction_id";
  sh:datatype xsd:decimal
], [
  sh:path sdm:schedule_relationship;
  sh:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2).";
  sh:name "schedule_relationship";
  sh:datatype xsd:string
], [
  sh:path sdm:route_id;
  sh:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "route_id";
  sh:datatype xsd:string
], [
  sh:path sdm:start_date;
  sh:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "start_date";
  sh:datatype xsd:string
], [
  sh:path sdm:start_time;
  sh:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "start_time";
  sh:datatype xsd:string
], [
  sh:path sdm:trip_id;
  sh:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "trip_id";
  sh:datatype xsd:string
].
sdm:VehiclePositionShape sh:property [
  sh:path sdm:license_plate;
  sh:description "Property. Gives the License Plate number of the vehicle. SameAs: 'license_plate' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)";
  sh:name "license_plate";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_id;
  sh:description "Property. Stop ID/Stop name of the bus stops corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
  sh:name "stop_id";
  sh:datatype xsd:string
], [
  sh:path sdm:uncertainty;
  sh:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent)";
  sh:name "uncertainty";
  sh:datatype xsd:decimal
], [
  sh:path sdm:route_color;
  sh:description "Property. If assigned, this field defines a color that corresponds to a route. The color must be provided as a six-character hexadecimal number, for example, 00FFFF. If no color is specified, the default route color is white (FFFFFF). SameAs: 'route_color' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
  sh:name "route_color";
  sh:datatype xsd:string
], [
  sh:path sdm:travelDistance;
  sh:description "Property. The distance between the origin bus stop and the destination bus stop or the total distance travelled corresponding to this observation.";
  sh:name "travelDistance";
  sh:datatype xsd:decimal
], [
  sh:path sdm:actual_trip_start_time;
  sh:description "Property. This field specifies the time at which service actually began.  This is SameAs: absolute 'time'(StopTimeEvent) in the 'arrival' field of the stop_time_update (StopTimeUpdate) message of the GTFS Realtime message-TripUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
  sh:name "actual_trip_start_time";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:bearing;
  sh:description "Property. Gives the vehicle GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)";
  sh:name "bearing";
  sh:datatype xsd:decimal
], [
  sh:path sdm:stop_sequence;
  sh:description "Property. Indicates the stop sequence of the vehicle corresponding to this observation, can be referenced from the GTFS static feed stop_times.txt. SameAs: 'stop_sequence' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate)";
  sh:name "stop_sequence";
  sh:datatype xsd:decimal
], [
  sh:path sdm:start_date;
  sh:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
  sh:name "start_date";
  sh:datatype xsd:string
], [
  sh:path sdm:current_stop_sequence;
  sh:description "Property. Gives the stop sequence index of the current stop. This is determined by considering current_status, if current_status is missing IN_TRANSIT_TO is assumed. SameAs:'current_stop_sequence' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
  sh:name "current_stop_sequence";
  sh:datatype xsd:decimal
], [
  sh:path sdm:start_time;
  sh:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
  sh:name "start_time";
  sh:datatype xsd:time
], [
  sh:path sdm:trip_id;
  sh:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
  sh:name "trip_id";
  sh:datatype xsd:string
], [
  sh:path sdm:route_text_color;
  sh:description "Property. This field can be used to specify a legible color to use for text drawn against a background of route_color. The color must be provided as a six-character hexadecimal number, for example, FFD700. If no color is specified, the default text color is black (000000). SameAs: 'route_text_color' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
  sh:name "route_text_color";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_url;
  sh:description "Property. This field contains the URL of a web page about a particular stop and is different from the agency_url and the route_url fields. SameAs: 'stop_url' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
  sh:name "stop_url";
  sh:datatype xsd:string
], [
  sh:path sdm:departure;
  sh:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate. SameAs: 'departure' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate)";
  sh:name "departure"
].
sdm:DepartureShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Departure;
    sh:property [
  sh:path sdm:uncertainty;
  sh:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
  sh:name "uncertainty";
  sh:datatype xsd:decimal
].
sdm:VehiclePositionShape sh:property [
  sh:path sdm:ac_available;
  sh:description "Property. Describes the presence of air conditioning option in the vehicle corresponding to this observation.";
  sh:name "ac_available";
  sh:datatype xsd:string
], [
  sh:path sdm:tripDirection;
  sh:description "Property. Gives the direction in which the vehicle is travelling in ENUM[UP,DN]";
  sh:name "tripDirection";
  sh:datatype xsd:string
], [
  sh:path sdm:agency_url;
  sh:description "Property. The agency_url field contains the URL of the transit agency. SameAs: 'agency_url' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
  sh:name "agency_url";
  sh:datatype xsd:string
], [
  sh:path sdm:routeStopSequence;
  sh:name "routeStopSequence";
  sh:datatype xsd:string
], [
  sh:path sdm:trip_direction;
  sh:description "Property. Gives the direction in which the vehicle is travelling. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor but is represented in the form of an ENUM[UP,DN] in place of [0,1] as seen in 'direction_id' (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "trip_direction";
  sh:datatype xsd:string
], [
  sh:path sdm:departure_time;
  sh:description "Property. Specifies the departure time from a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). \nNote: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'departure_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
  sh:name "departure_time";
  sh:datatype xsd:time
], [
  sh:path sdm:trip;
  sh:description "Property. Describes the trip the vehicle corresponding to this observation is making. SameAs:'trip' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
  sh:name "trip"
].
sdm:TripShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Trip;
    sh:property [
  sh:path sdm:direction_id;
  sh:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "direction_id";
  sh:datatype xsd:decimal
], [
  sh:path sdm:schedule_relationship;
  sh:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2).";
  sh:name "schedule_relationship";
  sh:datatype xsd:string
], [
  sh:path sdm:route_id;
  sh:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "route_id";
  sh:datatype xsd:string
], [
  sh:path sdm:start_date;
  sh:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "start_date";
  sh:datatype xsd:string
], [
  sh:path sdm:start_time;
  sh:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "start_time";
  sh:datatype xsd:string
], [
  sh:path sdm:trip_id;
  sh:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
  sh:name "trip_id";
  sh:datatype xsd:string
].
sdm:VehiclePositionShape sh:property [
  sh:path sdm:last_stop_id;
  sh:description "Property. Stop ID/Stop name of the previous bus stop corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-VehiclePosition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
  sh:name "last_stop_id";
  sh:datatype xsd:string
], [
  sh:path sdm:route_short_name;
  sh:description "Property. Short name of a route. This will often be the transit vehicle's board name like '402D',  or 'Green' that riders use to identify a route. SameAs: 'route_short_name' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
  sh:name "route_short_name";
  sh:datatype xsd:string
], [
  sh:path sdm:stop_name;
  sh:description "Property. Describes the name of the Bus Stop. SameAs: 'stop_name' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
  sh:name "stop_name";
  sh:datatype xsd:string
], [
  sh:path sdm:depot_id;
  sh:description "Property. Describes the unique id of the bus depot corresponding to this observation.";
  sh:name "depot_id";
  sh:datatype xsd:string
], [
  sh:path sdm:deviceInfo;
  sh:description "Property. Model:'https://schema.org/Text. Information about the device associated with the observations.";
  sh:name "deviceInfo"
].
sdm:DeviceInfoShape rdf:type sh:NodeShape;
    sh:targetClass sdm:DeviceInfo;
    sh:property [
  sh:path sdm:rfID;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the ID of the RFID reader.";
  sh:name "rfID";
  sh:datatype xsd:string
], [
  sh:path sdm:deviceBatteryStatus;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the Battery charging status of the reporting device(Connected, Disconnected).";
  sh:name "deviceBatteryStatus";
  sh:datatype xsd:string
], [
  sh:path sdm:deviceName;
  sh:description "Property. Model:'https://schema.org/Text'. Device Name or Station name of the sensor device/station corresponding to this observation.";
  sh:name "deviceName";
  sh:datatype xsd:string
], [
  sh:path sdm:deviceID;
  sh:description "Property. Model:'https://schema.org/Text'. Device ID of the physical sensor/ measurement station corresponding to this observation.";
  sh:name "deviceID";
  sh:datatype xsd:string
], [
  sh:path sdm:measurand;
  sh:description "Property. Model:'https://schema.org/Text'. Property/properties sensed/observed/measured by the device.";
  sh:name "measurand";
  sh:datatype xsd:string
], [
  sh:path sdm:deviceSimNumber;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the sim number of the device in the waste management vehicle.";
  sh:name "deviceSimNumber";
  sh:datatype xsd:string
], [
  sh:path sdm:deviceModel;
  sh:description "Property. Model:'https://schema.org/Text'. Describes the information of the device, sensor or system in consideration.";
  sh:name "deviceModel"
].
sdm:DeviceModelShape rdf:type sh:NodeShape;
    sh:targetClass sdm:DeviceModel;
    sh:property [
  sh:path sdm:brandName;
  sh:description "Property. Model:'https://schema.org/Text'. Name of the brand associated with an entity, e.g., sensor, device etc.";
  sh:name "brandName";
  sh:datatype xsd:string
], [
  sh:path sdm:manufacturerName;
  sh:description "Property. Model:'https://schema.org/Text'. Name of the manufacturer associated with an entity, e.g., sensor, device etc.";
  sh:name "manufacturerName";
  sh:datatype xsd:string
], [
  sh:path sdm:modelName;
  sh:description "Property. Model:'https://schema.org/Text'. Name of a specific model associated with an entity, e.g., sensor, device etc.";
  sh:name "modelName";
  sh:datatype xsd:string
], [
  sh:path sdm:modelURL;
  sh:description "Property. Model:'https://schema.org/Text'. URL providing further information of a specific model associated with an entity, e.g., sensor, device etc.";
  sh:name "modelURL";
  sh:datatype xsd:string
], [
  sh:path sdm:trip_update;
  sh:description "Property. Describes the trip information like delay, departures, etc., for a trip made by the vehicle corresponding to this observation.SameAs:'trip_update' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity)";
  sh:name "trip_update"
].
sdm:TripUpdateShape rdf:type sh:NodeShape;
    sh:targetClass sdm:TripUpdate;
    sh:property [
  sh:path sdm:trip;
  sh:description "Property. Following the conventions of GTFS trip. Model:'https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor'. ";
  sh:name "trip"
].
sdm:TripShape rdf:type sh:NodeShape;
    sh:targetClass sdm:Trip;
    sh:property [
  sh:path sdm:trip_id;
  sh:name "trip_id";
  sh:datatype xsd:string
], [
  sh:path sdm:route_id;
  sh:name "route_id";
  sh:datatype xsd:string
], [
  sh:path sdm:direction_id;
  sh:name "direction_id";
  sh:datatype xsd:decimal
], [
  sh:path sdm:start_time;
  sh:name "start_time";
  sh:datatype xsd:string
], [
  sh:path sdm:start_date;
  sh:name "start_date";
  sh:datatype xsd:string
], [
  sh:path sdm:schedule_relationship;
  sh:name "schedule_relationship";
  sh:in (sdm:SCHEDULED sdm:ADDED sdm:UNSCHEDULED sdm:CANCELED)
].
sdm:TripUpdateShape sh:property [
  sh:path sdm:observationDateTime;
  sh:description "Property. Last reported time of observation.";
  sh:name "observationDateTime";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:observationDateTime;
  sh:description "Property. Last reported time of observation.";
  sh:name "observationDateTime";
  sh:datatype xsd:dateTime
].
