@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json> dcterms:title "Smart Data Models - TransitManagement data Model";
    dcterms:description "A public transit system Data Model".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be TransitManagement";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:TransitManagement)
].
sdm:TransitManagement rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "TransitManagement".
sdm:dataDescriptor dcterms:description "Relationship. URI pointing to the data-descriptor entity";
    rdf:type rdf:Property;
    rdfs:label "dataDescriptor";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:anyURI.
sdm:vehicleType dcterms:description "Property. Describes the type of vehicle corresponding to this observation, could be hopper, compactor, tipper, dumper in case of solid waste management vehicles, BRT mini bus, BRT bus, city bus in case of ITMS vehicles, Ambulance, Fire tender, Police van etc, in case of emergency vehicles and Moped/Scooter, Motor Cycle,  Autorickshaw, Private car/ Jeep car, Tempo, Bus, E-Moped/E-Scooter/E-Motor Cycle, Public motor in case of vehicle registration.";
    rdf:type rdf:Property;
    rdfs:label "vehicleType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>.
sdm:VehicleType rdf:type skos:ConceptScheme.
sdm:vehicleType rdfs:range [
  owl:oneOf (sdm:agriculturalVehicle sdm:ambulance sdm:anyVehicle sdm:articulatedVehicle sdm:autorickshaw sdm:bicycle sdm:binTrolley sdm:BRT mini bus· sdm:BRT bus sdm:bus sdm:car sdm:caravan sdm:carOrLightVehicle sdm:carWithCaravan sdm:carWithTrailer sdm:cleaningTrolley sdm:compactor sdm:constructionOrMaintenanceVehicle sdm:dumper sdm:e-moped sdm:e-scooter sdm:e-motorcycle sdm:fireTender sdm:fourWheelDrive sdm:highSidedVehicle sdm:hopper sdm:lorry sdm:minibus sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:policeVan sdm:publicMotor sdm:sweepingMachine sdm:tanker sdm:tempo sdm:threeWheeledVehicle sdm:tipper sdm:trailer sdm:tram sdm:trolley sdm:twoWheeledVehicle sdm:van sdm:vehicleWithoutCatalyticConverter sdm:vehicleWithCaravan sdm:vehicleWithTrailer sdm:withEvenNumberedRegistrationPlates sdm:withOddNumberedRegistrationPlates sdm:other)
].
sdm:agriculturalVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "agriculturalVehicle".
sdm:ambulance rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "ambulance".
sdm:anyVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "anyVehicle".
sdm:articulatedVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "articulatedVehicle".
sdm:autorickshaw rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "autorickshaw".
sdm:bicycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bicycle".
sdm:binTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "binTrolley".
sdm:BRT mini bus· rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "BRT mini bus·".
sdm:BRT bus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "BRT bus".
sdm:bus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bus".
sdm:car rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "car".
sdm:caravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "caravan".
sdm:carOrLightVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carOrLightVehicle".
sdm:carWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithCaravan".
sdm:carWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithTrailer".
sdm:cleaningTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "cleaningTrolley".
sdm:compactor rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "compactor".
sdm:constructionOrMaintenanceVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "constructionOrMaintenanceVehicle".
sdm:dumper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "dumper".
sdm:e-moped rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-moped".
sdm:e-scooter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-scooter".
sdm:e-motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-motorcycle".
sdm:fireTender rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "fireTender".
sdm:fourWheelDrive rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "fourWheelDrive".
sdm:highSidedVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "highSidedVehicle".
sdm:hopper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "hopper".
sdm:lorry rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "lorry".
sdm:minibus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "minibus".
sdm:moped rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "moped".
sdm:motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycle".
sdm:motorcycleWithSideCar rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycleWithSideCar".
sdm:motorscooter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorscooter".
sdm:policeVan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "policeVan".
sdm:publicMotor rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "publicMotor".
sdm:sweepingMachine rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "sweepingMachine".
sdm:tanker rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tanker".
sdm:tempo rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tempo".
sdm:threeWheeledVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "threeWheeledVehicle".
sdm:tipper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tipper".
sdm:trailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trailer".
sdm:tram rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tram".
sdm:trolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trolley".
sdm:twoWheeledVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "twoWheeledVehicle".
sdm:van rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "van".
sdm:vehicleWithoutCatalyticConverter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "vehicleWithoutCatalyticConverter".
sdm:vehicleWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "vehicleWithCaravan".
sdm:vehicleWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "vehicleWithTrailer".
sdm:withEvenNumberedRegistrationPlates rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "withEvenNumberedRegistrationPlates".
sdm:withOddNumberedRegistrationPlates rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "withOddNumberedRegistrationPlates".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "other".
sdm:trip_details dcterms:description "Property. A descriptor of realtime update on the schedule of a vehicle along a trip.";
    rdf:type rdf:Property;
    rdfs:label "trip_details";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range sdm:TripDetail.
sdm:TripDetail rdf:type rdfs:Class;
    rdfs:label "TripDetail".
sdm:bearing dcterms:description "Property. Bearing, in degrees, clockwise from True North, i.e., 0 is North and 90 is East. This can be the compass bearing, or the direction towards the next stop or intermediate location. This should not be deduced from the sequence of previous positions, which clients can compute from previous data";
    rdf:type rdf:Property;
    rdfs:label "bearing";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:decimal.
sdm:odometer dcterms:description "Property. Odometer value, in meters. Units:'meters'";
    rdf:type rdf:Property;
    rdfs:label "odometer";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:decimal.
sdm:speed dcterms:description "Property. Momentary speed measured by the vehicle, in meters per second. Units:'meters per second'";
    rdf:type rdf:Property;
    rdfs:label "speed";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:decimal.
sdm:position dcterms:description "Property. Describes the current position of the vehicle corresponding to this observation. SameAs: position field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition). Model:'https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition'";
    rdf:type rdf:Property;
    rdfs:label "position";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range sdm:Position.
sdm:Position rdf:type rdfs:Class;
    rdfs:label "Position".
sdm:latitude dcterms:description "Property. Degrees North, in the WGS-84 coordinate system.";
    rdf:type rdf:Property;
    rdfs:label "latitude";
    rdfs:domain sdm:Position;
    rdfs:range xsd:decimal.
sdm:longitude dcterms:description "Property. Degrees East, in the WGS-84 coordinate system.";
    rdf:type rdf:Property;
    rdfs:label "longitude";
    rdfs:domain sdm:Position;
    rdfs:range xsd:decimal.
sdm:bearing dcterms:description "Property. Bearing, in degrees, clockwise from True North, i.e., 0 is North and 90 is East. This can be the compass bearing, or the direction towards the next stop or intermediate location. This should not be deduced from the sequence of previous positions, which clients can compute from previous data";
    rdf:type rdf:Property;
    rdfs:label "bearing";
    rdfs:domain sdm:Position;
    rdfs:range xsd:decimal.
sdm:odometer dcterms:description "Property. Odometer value, in meters. Units:'meters'";
    rdf:type rdf:Property;
    rdfs:label "odometer";
    rdfs:domain sdm:Position;
    rdfs:range xsd:decimal.
sdm:speed dcterms:description "Property. Momentary speed measured by the vehicle, in meters per second. Units:'meters per second'";
    rdf:type rdf:Property;
    rdfs:label "speed";
    rdfs:domain sdm:Position;
    rdfs:range xsd:decimal.
sdm:trip_delay dcterms:description "Property. This can be positive and negative in seconds and shows how much the vehicle deviates from the planned one. SameAs: 'delay' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent)";
    rdf:type rdf:Property;
    rdfs:label "trip_delay";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:decimal.
sdm:route_url dcterms:description "Property. Contains the URL of a web page about that particular route and is different from the agency_url. SameAs: 'route_url' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
    rdf:type rdf:Property;
    rdfs:label "route_url";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:string.
sdm:agency_lang dcterms:description "Property. Contains a two-letter ISO 639-1 code for the primary language used by this transit agency. The language code is case-insensitive (both en and EN are accepted). SameAs: 'agency_lang' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
    rdf:type rdf:Property;
    rdfs:label "agency_lang";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:string.
sdm:depot_name dcterms:description "Property. Describes the depot name of the bus depot corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "depot_name";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:string.
sdm:travelTime dcterms:description "Property. The time taken to travel between the origin bus stop and the destination bus stop corresponding to this observation in HH:MM:SS format(HH:MM:SS is also accepted, if the hour begins with 0).";
    rdf:type rdf:Property;
    rdfs:label "travelTime";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:time.
sdm:direction_id dcterms:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
    rdf:type rdf:Property;
    rdfs:label "direction_id";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:decimal.
sdm:schedule_relationship dcterms:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2)";
    rdf:type rdf:Property;
    rdfs:label "schedule_relationship";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range xsd:string.
sdm:stop_sequence_detail dcterms:description "Property. Describes the stop sequence for a trip in the designated route made by the public transit vehicle.SameAs: 'stop_sequence' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
    rdf:type rdf:Property;
    rdfs:label "stop_sequence_detail";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range sdm:StopSequenceDetail.
sdm:StopSequenceDetail rdf:type rdfs:Class;
    rdfs:label "StopSequenceDetail".
sdm:stop_sequence dcterms:description "Property. Must be the same as in stop_times.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for.";
    rdf:type rdf:Property;
    rdfs:label "stop_sequence";
    rdfs:domain sdm:StopSequenceDetail;
    rdfs:range xsd:decimal.
sdm:stop_id dcterms:description "Property. Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.";
    rdf:type rdf:Property;
    rdfs:label "stop_id";
    rdfs:domain sdm:StopSequenceDetail;
    rdfs:range xsd:string.
sdm:stop_time_update dcterms:description "Property. Additional information on the vehicle that is serving this trip.";
    rdf:type rdf:Property;
    rdfs:label "stop_time_update";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UrbanMobility/TransitManagement/schema.json>;
    rdfs:range sdm:StopTimeUpdate.
sdm:StopTimeUpdate rdf:type rdfs:Class;
    rdfs:label "StopTimeUpdate".
sdm:stop_id dcterms:description "Property. Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.";
    rdf:type rdf:Property;
    rdfs:label "stop_id";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:stop_sequence dcterms:description "Property. Must be the same as in stop_times.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for.";
    rdf:type rdf:Property;
    rdfs:label "stop_sequence";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:decimal.
sdm:schedule_relationship dcterms:description "Property. Enum:'SCHEDULED, SKIPPED, NO_DATA'. SCHEDULED means that the vehicle is proceeding in accordance with its static schedule of stops, although not necessarily according to the times of the schedule. This is the default behavior. At least one of arrival and departure must be provided. SKIPPED means that The stop is skipped, i.e., the vehicle will not stop at this stop. The arrival and departure fields are optional. NO_DATA means that no data is given for this stop. It indicates that there is no realtime information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime information. When NO_DATA is set neither arrival nor departure should be supplied.";
    rdf:type rdf:Property;
    rdfs:label "schedule_relationship";
    rdfs:domain sdm:StopTimeUpdate.
sdm:Schedule_relationship rdf:type skos:ConceptScheme.
sdm:schedule_relationship rdfs:range [
  owl:oneOf (sdm:SCHEDULED sdm:SKIPPED sdm:NO_DATA)
].
sdm:SCHEDULED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "SCHEDULED".
sdm:SKIPPED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "SKIPPED".
sdm:NO_DATA rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "NO_DATA".
sdm:arrival dcterms:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
    rdf:type rdf:Property;
    rdfs:label "arrival";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:Arrival.
sdm:Arrival rdf:type rdfs:Class;
    rdfs:label "Arrival".
sdm:uncertainty dcterms:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
    rdf:type rdf:Property;
    rdfs:label "uncertainty";
    rdfs:domain sdm:Arrival;
    rdfs:range xsd:decimal.
sdm:departure dcterms:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
    rdf:type rdf:Property;
    rdfs:label "departure";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:Departure.
sdm:Departure rdf:type rdfs:Class;
    rdfs:label "Departure".
sdm:uncertainty dcterms:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
    rdf:type rdf:Property;
    rdfs:label "uncertainty";
    rdfs:domain sdm:Departure;
    rdfs:range xsd:decimal.
sdm:trip_update dcterms:description "Property. Describes the trip information like delay, departures, etc., for a trip made by the vehicle corresponding to this observation.SameAs:'trip_update' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity).";
    rdf:type rdf:Property;
    rdfs:label "trip_update";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:TripUpdate.
sdm:TripUpdate rdf:type rdfs:Class;
    rdfs:label "TripUpdate".
sdm:stop_time_update dcterms:description "Property. Additional information on the vehicle that is serving this trip.";
    rdf:type rdf:Property;
    rdfs:label "stop_time_update";
    rdfs:domain sdm:TripUpdate;
    rdfs:range sdm:StopTimeUpdate.
sdm:StopTimeUpdate rdf:type rdfs:Class;
    rdfs:label "StopTimeUpdate".
sdm:stop_id dcterms:description "Property. Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.";
    rdf:type rdf:Property;
    rdfs:label "stop_id";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:stop_sequence dcterms:description "Property. Must be the same as in stop_times.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for.";
    rdf:type rdf:Property;
    rdfs:label "stop_sequence";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:decimal.
sdm:schedule_relationship dcterms:description "Property. Enum:'SCHEDULED, SKIPPED, NO_DATA'. SCHEDULED means that the vehicle is proceeding in accordance with its static schedule of stops, although not necessarily according to the times of the schedule. This is the default behavior. At least one of arrival and departure must be provided. SKIPPED means that The stop is skipped, i.e., the vehicle will not stop at this stop. The arrival and departure fields are optional. NO_DATA means that no data is given for this stop. It indicates that there is no realtime information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime information. When NO_DATA is set neither arrival nor departure should be supplied.";
    rdf:type rdf:Property;
    rdfs:label "schedule_relationship";
    rdfs:domain sdm:StopTimeUpdate.
sdm:Schedule_relationship rdf:type skos:ConceptScheme.
sdm:schedule_relationship rdfs:range [
  owl:oneOf (sdm:SCHEDULED sdm:SKIPPED sdm:NO_DATA)
].
sdm:SCHEDULED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "SCHEDULED".
sdm:SKIPPED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "SKIPPED".
sdm:NO_DATA rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "NO_DATA".
sdm:arrival dcterms:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
    rdf:type rdf:Property;
    rdfs:label "arrival";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:Arrival.
sdm:Arrival rdf:type rdfs:Class;
    rdfs:label "Arrival".
sdm:uncertainty dcterms:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
    rdf:type rdf:Property;
    rdfs:label "uncertainty";
    rdfs:domain sdm:Arrival;
    rdfs:range xsd:decimal.
sdm:departure dcterms:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. If schedule_relationship is NO_DATA, arrival and departure must be empty.";
    rdf:type rdf:Property;
    rdfs:label "departure";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:Departure.
sdm:Departure rdf:type rdfs:Class;
    rdfs:label "Departure".
sdm:uncertainty dcterms:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
    rdf:type rdf:Property;
    rdfs:label "uncertainty";
    rdfs:domain sdm:Departure;
    rdfs:range xsd:decimal.
sdm:timestamp dcterms:description "Property. Last reported time of observation from the vehicle. SameAs: 'timestamp' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
    rdf:type rdf:Property;
    rdfs:label "timestamp";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:dateTime.
sdm:vehicleDesc dcterms:description "Property. Describes the additional information of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)/(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
    rdf:type rdf:Property;
    rdfs:label "vehicleDesc";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:VehicleDesc.
sdm:VehicleDesc rdf:type rdfs:Class;
    rdfs:label "VehicleDesc".
sdm:vehicle_id dcterms:description "Property. Unique ID assigned to the vehicle corresponding to this observation,used in internal system identification.SameAs: 'id' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "vehicle_id";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:vehicle_label dcterms:description "Property. User visible label,i.e.,something that must be shown to the passenger to help identify the correct vehicle.SameAs: 'label' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "vehicle_label";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:license_plate dcterms:description "Property. Gives the License Plate number of the vehice.SameAs: 'license_plate' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "license_plate";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:trip dcterms:description "Property. Describes the trip the vehicle corresponding to this observation is making. SameAs:'trip' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
    rdf:type rdf:Property;
    rdfs:label "trip";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:Trip.
sdm:Trip rdf:type rdfs:Class;
    rdfs:label "Trip".
sdm:direction_id dcterms:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "direction_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:decimal.
sdm:schedule_relationship dcterms:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2).";
    rdf:type rdf:Property;
    rdfs:label "schedule_relationship";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:route_id dcterms:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "route_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:start_date dcterms:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "start_date";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:start_time dcterms:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "start_time";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:trip_id dcterms:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "trip_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:vehicle_id dcterms:description "Property. Unique ID assigned to the vehicle corresponding to this observation, used in internal system identification. SameAs: 'id' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)";
    rdf:type rdf:Property;
    rdfs:label "vehicle_id";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:agency_fare_url dcterms:description "Property. URL of a web page that contains the details of the fares and also could allow to purchase tickets for that agency online. SameAs: 'agency_fare_url' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
    rdf:type rdf:Property;
    rdfs:label "agency_fare_url";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:actual_trip_end_time dcterms:description "Property. This field specifies the time at which service or trip corresponding to this observation is scheduled to end.";
    rdf:type rdf:Property;
    rdfs:label "actual_trip_end_time";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:dateTime.
sdm:last_tracked_time dcterms:description "Property. Gives the time at which the vehicle was last tracked.";
    rdf:type rdf:Property;
    rdfs:label "last_tracked_time";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:time.
sdm:standing_capacity dcterms:description "Property. Describes the passenger standing capacity of the vehicle corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "standing_capacity";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:decimal.
sdm:last_stop_arrival_time dcterms:description "Property. Specifies the arrival time at the previous stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (H:MM:SS is also accepted, if the hour begins with 0). \nNote: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. This is SameAs: absolute 'time'(StopTimeEvent) in the 'arrival' field of the stop_time_update (StopTimeUpdate) message of the GTFS Realtime message-TripUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
    rdf:type rdf:Property;
    rdfs:label "last_stop_arrival_time";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:time.
sdm:agency_id dcterms:description "Property. ID that uniquely identifies a transit agency. A transit feed may represent data from more than one agency. The agency_id is dataset unique. This field is optional for transit feeds that only contain data for a single agency. SameAs: 'agency_id' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
    rdf:type rdf:Property;
    rdfs:label "agency_id";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:arrival dcterms:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate. SameAs: 'arrival' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate)";
    rdf:type rdf:Property;
    rdfs:label "arrival";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:Arrival.
sdm:Arrival rdf:type rdfs:Class;
    rdfs:label "Arrival".
sdm:uncertainty dcterms:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
    rdf:type rdf:Property;
    rdfs:label "uncertainty";
    rdfs:domain sdm:Arrival;
    rdfs:range xsd:decimal.
sdm:current_status dcterms:description "Property. Describes the status of the vehicle w.r.t the stop corresponding to this observation ENUM: [INCOMING_AT, STOPPED_AT, IN_TRANSIT_TO]. SameAs:'current_status' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
    rdf:type rdf:Property;
    rdfs:label "current_status";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:route_type dcterms:description "Property. Number indicating the type of transport-1 - Subway, Metro. Any underground rail system within a metropolitan area.2 - Rail. Used for intercity or long-distance travel.3 - Bus. Used for short- and long-distance bus routes. SameAs: 'route_type' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
    rdf:type rdf:Property;
    rdfs:label "route_type";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:speed dcterms:description "Property. Gives the Speed  of the vehicle. SameAs 'speed' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)";
    rdf:type rdf:Property;
    rdfs:label "speed";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:decimal.
sdm:route_id dcterms:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
    rdf:type rdf:Property;
    rdfs:label "route_id";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:seating_capacity dcterms:description "Property. Describes the passenger seating capacity of the vehicle corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "seating_capacity";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:decimal.
sdm:stop_headsign dcterms:description "Property. This field contains the text that appears on a sign that identifies the trip’s destination to passengers. SameAs: 'stop_headsign' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
    rdf:type rdf:Property;
    rdfs:label "stop_headsign";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:vehicle_label dcterms:description "Property. User visible label, i.e., something that must be shown to the passenger to help identify the correct vehicle. SameAs: 'label' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)";
    rdf:type rdf:Property;
    rdfs:label "vehicle_label";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:entity_id dcterms:description "Property. Feed unique ID for the entity corressponding to this observation.SameAs:'entity_id' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity)";
    rdf:type rdf:Property;
    rdfs:label "entity_id";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:timestamp dcterms:description "Property. Last reported time of observation from the vehicle. SameAs: 'timestamp' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
    rdf:type rdf:Property;
    rdfs:label "timestamp";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:dateTime.
sdm:arrival_time dcterms:description "Property. Specifies the arrival time at a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). Note: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'arrival_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
    rdf:type rdf:Property;
    rdfs:label "arrival_time";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:time.
sdm:stop_desc dcterms:description "Property. This field contains a description of a stop. SameAs: 'stop_desc' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
    rdf:type rdf:Property;
    rdfs:label "stop_desc";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:vehicleDesc dcterms:description "Property. Describes the additional information of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)/(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
    rdf:type rdf:Property;
    rdfs:label "vehicleDesc";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:VehicleDesc.
sdm:VehicleDesc rdf:type rdfs:Class;
    rdfs:label "VehicleDesc".
sdm:vehicle_id dcterms:description "Property. Unique ID assigned to the vehicle corresponding to this observation,used in internal system identification.SameAs: 'id' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "vehicle_id";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:vehicle_label dcterms:description "Property. User visible label,i.e.,something that must be shown to the passenger to help identify the correct vehicle.SameAs: 'label' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "vehicle_label";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:license_plate dcterms:description "Property. Gives the License Plate number of the vehice.SameAs: 'license_plate' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "license_plate";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:route_long_name dcterms:description "Property. Full name of a route. This name is more descriptive than the routeShortName and often includes the route's destination or stop. This mostly includes the to and from destination names of the route. SameAs: 'route_long_name' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
    rdf:type rdf:Property;
    rdfs:label "route_long_name";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:agency_timezone dcterms:description "Property. Timezone field contains the timezone where the transit agency is located. SameAs: 'agency_timezone' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
    rdf:type rdf:Property;
    rdfs:label "agency_timezone";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:stop_code dcterms:description "Property. This field contains short text or a number that uniquely identifies the stop for passengers. Can be same as stop_id if it is for public. SameAs: 'stop_code' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
    rdf:type rdf:Property;
    rdfs:label "stop_code";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:tripDetails dcterms:description "Property. A descriptor of realtime update on the schedule of a vehicle along a trip.";
    rdf:type rdf:Property;
    rdfs:label "tripDetails";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:TripDetail.
sdm:TripDetail rdf:type rdfs:Class;
    rdfs:label "TripDetail".
sdm:stop_headsign dcterms:description "Property. This field contains the text that appears on a sign that identifies the trip’s destination to passengers. SameAs: 'stop_headsign' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
    rdf:type rdf:Property;
    rdfs:label "stop_headsign";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:string.
sdm:arrival_time dcterms:description "Property.  Specifies the arrival time at a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). Note: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'arrival_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt).";
    rdf:type rdf:Property;
    rdfs:label "arrival_time";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:time.
sdm:stop_id dcterms:description "Property. Stop ID/Stop name of the bus stops corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
    rdf:type rdf:Property;
    rdfs:label "stop_id";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:string.
sdm:stop_sequence dcterms:description "Property. Indicates the stop sequence of the vehicle corresponding to this observation, can be referenced from the GTFS static feed stop_times.txt. SameAs: 'stop_sequence' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate).";
    rdf:type rdf:Property;
    rdfs:label "stop_sequence";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:decimal.
sdm:departure_time dcterms:description "Property. Specifies the departure time from a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). Note: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'departure_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt).";
    rdf:type rdf:Property;
    rdfs:label "departure_time";
    rdfs:domain sdm:TripDetail;
    rdfs:range xsd:time.
sdm:agency_name dcterms:description "Property. The agency_name field contains the full name of the transit agency. SameAs: 'agency_name' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
    rdf:type rdf:Property;
    rdfs:label "agency_name";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:route_desc dcterms:description "Property. Description of the route. This can include the entire route details including to and from destination and timing information in a text description form. SameAs: 'route_desc' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
    rdf:type rdf:Property;
    rdfs:label "route_desc";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range xsd:string.
sdm:vehicle_position dcterms:description "Property. Describes the realtime position of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity)";
    rdf:type rdf:Property;
    rdfs:label "vehicle_position";
    rdfs:domain sdm:StopTimeUpdate;
    rdfs:range sdm:VehiclePosition.
sdm:VehiclePosition rdf:type rdfs:Class;
    rdfs:label "VehiclePosition".
sdm:position dcterms:description "Property. Describes the current position of the vehicle corresponding to this observation. SameAs: 'position' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
    rdf:type rdf:Property;
    rdfs:label "position";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range sdm:Position.
sdm:Position rdf:type rdfs:Class;
    rdfs:label "Position".
sdm:current_status dcterms:description "Property. Describes the status of the vehicle w.r.t the stop corresponding to this observation ENUM: [INCOMING_AT, STOPPED_AT, IN_TRANSIT_TO]. SameAs:'current_status' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
    rdf:type rdf:Property;
    rdfs:label "current_status";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:timestamp dcterms:description "Property. Last reported time of observation from the vehicle. SameAs:  'timestamp' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
    rdf:type rdf:Property;
    rdfs:label "timestamp";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:dateTime.
sdm:vehicleDesc dcterms:description "Property. Describes the additional information of the vehicle corresponding to this observation. SameAs:'vehicle' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)/(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
    rdf:type rdf:Property;
    rdfs:label "vehicleDesc";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range sdm:VehicleDesc.
sdm:VehicleDesc rdf:type rdfs:Class;
    rdfs:label "VehicleDesc".
sdm:vehicle_id dcterms:description "Property. Unique ID assigned to the vehicle corresponding to this observation,used in internal system identification.SameAs: 'id' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "vehicle_id";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:vehicle_label dcterms:description "Property. User visible label,i.e.,something that must be shown to the passenger to help identify the correct vehicle.SameAs: 'label' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "vehicle_label";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:license_plate dcterms:description "Property. Gives the License Plate number of the vehice.SameAs: 'license_plate' field from GTFS Realtime message - VehicleDescriptor(https: //developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor).";
    rdf:type rdf:Property;
    rdfs:label "license_plate";
    rdfs:domain sdm:VehicleDesc;
    rdfs:range xsd:string.
sdm:stop_id dcterms:description "Property. Stop ID/Stop name of the bus stops corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
    rdf:type rdf:Property;
    rdfs:label "stop_id";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:current_stop_sequence dcterms:description "Property. Gives the stop sequence index of the current stop. This is determined by considering current_status, if current_status is missing IN_TRANSIT_TO is assumed. SameAs:'current_stop_sequence' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition).";
    rdf:type rdf:Property;
    rdfs:label "current_stop_sequence";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:decimal.
sdm:trip dcterms:description "Property. Describes the trip the vehicle corresponding to this observation is making. SameAs:'trip' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate).";
    rdf:type rdf:Property;
    rdfs:label "trip";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range sdm:Trip.
sdm:Trip rdf:type rdfs:Class;
    rdfs:label "Trip".
sdm:direction_id dcterms:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "direction_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:decimal.
sdm:schedule_relationship dcterms:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2).";
    rdf:type rdf:Property;
    rdfs:label "schedule_relationship";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:route_id dcterms:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "route_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:start_date dcterms:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "start_date";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:start_time dcterms:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "start_time";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:trip_id dcterms:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "trip_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:license_plate dcterms:description "Property. Gives the License Plate number of the vehicle. SameAs: 'license_plate' field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)";
    rdf:type rdf:Property;
    rdfs:label "license_plate";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:stop_id dcterms:description "Property. Stop ID/Stop name of the bus stops corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-Vehicleposition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
    rdf:type rdf:Property;
    rdfs:label "stop_id";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:uncertainty dcterms:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent)";
    rdf:type rdf:Property;
    rdfs:label "uncertainty";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:decimal.
sdm:route_color dcterms:description "Property. If assigned, this field defines a color that corresponds to a route. The color must be provided as a six-character hexadecimal number, for example, 00FFFF. If no color is specified, the default route color is white (FFFFFF). SameAs: 'route_color' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
    rdf:type rdf:Property;
    rdfs:label "route_color";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:travelDistance dcterms:description "Property. The distance between the origin bus stop and the destination bus stop or the total distance travelled corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "travelDistance";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:decimal.
sdm:actual_trip_start_time dcterms:description "Property. This field specifies the time at which service actually began.  This is SameAs: absolute 'time'(StopTimeEvent) in the 'arrival' field of the stop_time_update (StopTimeUpdate) message of the GTFS Realtime message-TripUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
    rdf:type rdf:Property;
    rdfs:label "actual_trip_start_time";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:dateTime.
sdm:bearing dcterms:description "Property. Gives the vehicle GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)";
    rdf:type rdf:Property;
    rdfs:label "bearing";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:decimal.
sdm:stop_sequence dcterms:description "Property. Indicates the stop sequence of the vehicle corresponding to this observation, can be referenced from the GTFS static feed stop_times.txt. SameAs: 'stop_sequence' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate)";
    rdf:type rdf:Property;
    rdfs:label "stop_sequence";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:decimal.
sdm:start_date dcterms:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
    rdf:type rdf:Property;
    rdfs:label "start_date";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:current_stop_sequence dcterms:description "Property. Gives the stop sequence index of the current stop. This is determined by considering current_status, if current_status is missing IN_TRANSIT_TO is assumed. SameAs:'current_stop_sequence' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
    rdf:type rdf:Property;
    rdfs:label "current_stop_sequence";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:decimal.
sdm:start_time dcterms:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
    rdf:type rdf:Property;
    rdfs:label "start_time";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:time.
sdm:trip_id dcterms:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor)";
    rdf:type rdf:Property;
    rdfs:label "trip_id";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:route_text_color dcterms:description "Property. This field can be used to specify a legible color to use for text drawn against a background of route_color. The color must be provided as a six-character hexadecimal number, for example, FFD700. If no color is specified, the default text color is black (000000). SameAs: 'route_text_color' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
    rdf:type rdf:Property;
    rdfs:label "route_text_color";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:stop_url dcterms:description "Property. This field contains the URL of a web page about a particular stop and is different from the agency_url and the route_url fields. SameAs: 'stop_url' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
    rdf:type rdf:Property;
    rdfs:label "stop_url";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:departure dcterms:description "Property. If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate. SameAs: 'departure' field from GTFS Realtime message-StopTimeUpdate (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate)";
    rdf:type rdf:Property;
    rdfs:label "departure";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range sdm:Departure.
sdm:Departure rdf:type rdfs:Class;
    rdfs:label "Departure".
sdm:uncertainty dcterms:description "Property. If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.SameAs: 'uncertainty' field from GTFS Realtime message-StopTimeEvent (https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).";
    rdf:type rdf:Property;
    rdfs:label "uncertainty";
    rdfs:domain sdm:Departure;
    rdfs:range xsd:decimal.
sdm:ac_available dcterms:description "Property. Describes the presence of air conditioning option in the vehicle corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "ac_available";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:tripDirection dcterms:description "Property. Gives the direction in which the vehicle is travelling in ENUM[UP,DN]";
    rdf:type rdf:Property;
    rdfs:label "tripDirection";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:agency_url dcterms:description "Property. The agency_url field contains the URL of the transit agency. SameAs: 'agency_url' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
    rdf:type rdf:Property;
    rdfs:label "agency_url";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:routeStopSequence rdf:type rdf:Property;
    rdfs:label "routeStopSequence";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:trip_direction dcterms:description "Property. Gives the direction in which the vehicle is travelling. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor but is represented in the form of an ENUM[UP,DN] in place of [0,1] as seen in 'direction_id' (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "trip_direction";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:departure_time dcterms:description "Property. Specifies the departure time from a specific stop for a specific trip on a route. Times must be eight digits in HH:MM:SS format (HH:MM:SS is also accepted, if the hour begins with 0). \nNote: Trips that span multiple dates will have stop times greater than 24:00:00. For example, if a trip begins at 10:30:00 p.m. and ends at 2:15:00 a.m. on the following day, the stop times would be 22:30:00 and 26:15:00. Entering those stop times as 22:30:00 and 02:15:00 would not produce the desired results. SameAs: 'departure_time' field from GTFS Static Field definitions-stop_times.txt (https://developers.google.com/transit/gtfs/reference#stop_timestxt)";
    rdf:type rdf:Property;
    rdfs:label "departure_time";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:time.
sdm:trip dcterms:description "Property. Describes the trip the vehicle corresponding to this observation is making. SameAs:'trip' field from GTFS Realtime message-VehiclePosition(https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)(https://developers.google.com/transit/gtfs-realtime/reference#message-tripupdate)";
    rdf:type rdf:Property;
    rdfs:label "trip";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range sdm:Trip.
sdm:Trip rdf:type rdfs:Class;
    rdfs:label "Trip".
sdm:direction_id dcterms:description "Property. Indicates the direction of travel of the vehicle corresponding to this observation, can be referenced from the GTFS static feed trips.txt. SameAs: 'direction_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "direction_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:decimal.
sdm:schedule_relationship dcterms:description "Property. Describes if the Route/Trip has been scheduled. SameAs: 'schedule_relationship' field from enumScheduleRelationship (https://developers.google.com/transit/gtfs-realtime/reference#enum-schedulerelationship-2).";
    rdf:type rdf:Property;
    rdfs:label "schedule_relationship";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:route_id dcterms:description "Property. Route ID assigned to the route on which the bus/vehicle corresponding to the bus in this observation is currently plying on. SameAs: 'route_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "route_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:start_date dcterms:description "Property. Describes the initial scheduled date of the trip corresponding to the vehicle this observation. An example format for this field - YYYYMMDD. SameAs: 'start_date' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "start_date";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:start_time dcterms:description "Property. Describes the initial scheduled start time of the trip corresponding to the vehicle this observation. An example format for this field - 11:15:35 or 25:15:35. SameAs: 'start_time' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "start_time";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:trip_id dcterms:description "Property. Trip ID/Trip name allotted to the bus corresponding to this observation, in consideration to the time of the day and the direction of the trip on the given routeId. SameAs: 'trip_id' field from GTFS Realtime message-TripDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor).";
    rdf:type rdf:Property;
    rdfs:label "trip_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:last_stop_id dcterms:description "Property. Stop ID/Stop name of the previous bus stop corresponding to the bus in this observation. SameAs: 'stop_id' field from GTFS Realtime message-VehiclePosition (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicleposition)";
    rdf:type rdf:Property;
    rdfs:label "last_stop_id";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:route_short_name dcterms:description "Property. Short name of a route. This will often be the transit vehicle's board name like '402D',  or 'Green' that riders use to identify a route. SameAs: 'route_short_name' field from GTFS Static Field definitions-routes.txt (https://developers.google.com/transit/gtfs/reference#routestxt)";
    rdf:type rdf:Property;
    rdfs:label "route_short_name";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:stop_name dcterms:description "Property. Describes the name of the Bus Stop. SameAs: 'stop_name' field from GTFS Static Field definitions-stops.txt (https://developers.google.com/transit/gtfs/reference#stopstxt)";
    rdf:type rdf:Property;
    rdfs:label "stop_name";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:depot_id dcterms:description "Property. Describes the unique id of the bus depot corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "depot_id";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range xsd:string.
sdm:deviceInfo dcterms:description "Property. Model:'https://schema.org/Text. Information about the device associated with the observations.";
    rdf:type rdf:Property;
    rdfs:label "deviceInfo";
    rdfs:domain sdm:VehiclePosition;
    rdfs:range sdm:DeviceInfo.
sdm:DeviceInfo rdf:type rdfs:Class;
    rdfs:label "DeviceInfo".
sdm:rfID dcterms:description "Property. Model:'https://schema.org/Text'. Gives the ID of the RFID reader.";
    rdf:type rdf:Property;
    rdfs:label "rfID";
    rdfs:domain sdm:DeviceInfo;
    rdfs:range xsd:string.
sdm:deviceBatteryStatus dcterms:description "Property. Model:'https://schema.org/Text'. Gives the Battery charging status of the reporting device(Connected, Disconnected).";
    rdf:type rdf:Property;
    rdfs:label "deviceBatteryStatus";
    rdfs:domain sdm:DeviceInfo;
    rdfs:range xsd:string.
sdm:deviceName dcterms:description "Property. Model:'https://schema.org/Text'. Device Name or Station name of the sensor device/station corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "deviceName";
    rdfs:domain sdm:DeviceInfo;
    rdfs:range xsd:string.
sdm:deviceID dcterms:description "Property. Model:'https://schema.org/Text'. Device ID of the physical sensor/ measurement station corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "deviceID";
    rdfs:domain sdm:DeviceInfo;
    rdfs:range xsd:string.
sdm:measurand dcterms:description "Property. Model:'https://schema.org/Text'. Property/properties sensed/observed/measured by the device.";
    rdf:type rdf:Property;
    rdfs:label "measurand";
    rdfs:domain sdm:DeviceInfo;
    rdfs:range xsd:string.
sdm:deviceSimNumber dcterms:description "Property. Model:'https://schema.org/Text'. Gives the sim number of the device in the waste management vehicle.";
    rdf:type rdf:Property;
    rdfs:label "deviceSimNumber";
    rdfs:domain sdm:DeviceInfo;
    rdfs:range xsd:string.
sdm:deviceModel dcterms:description "Property. Model:'https://schema.org/Text'. Describes the information of the device, sensor or system in consideration.";
    rdf:type rdf:Property;
    rdfs:label "deviceModel";
    rdfs:domain sdm:DeviceInfo;
    rdfs:range sdm:DeviceModel.
sdm:DeviceModel rdf:type rdfs:Class;
    rdfs:label "DeviceModel".
sdm:brandName dcterms:description "Property. Model:'https://schema.org/Text'. Name of the brand associated with an entity, e.g., sensor, device etc.";
    rdf:type rdf:Property;
    rdfs:label "brandName";
    rdfs:domain sdm:DeviceModel;
    rdfs:range xsd:string.
sdm:manufacturerName dcterms:description "Property. Model:'https://schema.org/Text'. Name of the manufacturer associated with an entity, e.g., sensor, device etc.";
    rdf:type rdf:Property;
    rdfs:label "manufacturerName";
    rdfs:domain sdm:DeviceModel;
    rdfs:range xsd:string.
sdm:modelName dcterms:description "Property. Model:'https://schema.org/Text'. Name of a specific model associated with an entity, e.g., sensor, device etc.";
    rdf:type rdf:Property;
    rdfs:label "modelName";
    rdfs:domain sdm:DeviceModel;
    rdfs:range xsd:string.
sdm:modelURL dcterms:description "Property. Model:'https://schema.org/Text'. URL providing further information of a specific model associated with an entity, e.g., sensor, device etc.";
    rdf:type rdf:Property;
    rdfs:label "modelURL";
    rdfs:domain sdm:DeviceModel;
    rdfs:range xsd:string.
sdm:trip_update dcterms:description "Property. Describes the trip information like delay, departures, etc., for a trip made by the vehicle corresponding to this observation.SameAs:'trip_update' field from GTFS Realtime message-FeedEntity(https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity)";
    rdf:type rdf:Property;
    rdfs:label "trip_update";
    rdfs:domain sdm:DeviceModel;
    rdfs:range sdm:TripUpdate.
sdm:TripUpdate rdf:type rdfs:Class;
    rdfs:label "TripUpdate".
sdm:trip dcterms:description "Property. Following the conventions of GTFS trip. Model:'https://developers.google.com/transit/gtfs-realtime/reference#message-tripdescriptor'. ";
    rdf:type rdf:Property;
    rdfs:label "trip";
    rdfs:domain sdm:TripUpdate;
    rdfs:range sdm:Trip.
sdm:Trip rdf:type rdfs:Class;
    rdfs:label "Trip".
sdm:trip_id rdf:type rdf:Property;
    rdfs:label "trip_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:route_id rdf:type rdf:Property;
    rdfs:label "route_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:direction_id rdf:type rdf:Property;
    rdfs:label "direction_id";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:decimal.
sdm:start_time rdf:type rdf:Property;
    rdfs:label "start_time";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:start_date rdf:type rdf:Property;
    rdfs:label "start_date";
    rdfs:domain sdm:Trip;
    rdfs:range xsd:string.
sdm:schedule_relationship rdf:type rdf:Property;
    rdfs:label "schedule_relationship";
    rdfs:domain sdm:Trip.
sdm:Schedule_relationship rdf:type skos:ConceptScheme.
sdm:schedule_relationship rdfs:range [
  owl:oneOf (sdm:SCHEDULED sdm:ADDED sdm:UNSCHEDULED sdm:CANCELED)
].
sdm:SCHEDULED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "SCHEDULED".
sdm:ADDED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "ADDED".
sdm:UNSCHEDULED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "UNSCHEDULED".
sdm:CANCELED rdf:type skos:Concept;
    skos:inScheme sdm:Schedule_relationship;
    rdfs:label "CANCELED".
sdm:observationDateTime dcterms:description "Property. Last reported time of observation.";
    rdf:type rdf:Property;
    rdfs:label "observationDateTime";
    rdfs:domain sdm:TripUpdate;
    rdfs:range xsd:dateTime;
    dcterms:description "Property. Last reported time of observation.";
    rdf:type rdf:Property;
    rdfs:label "observationDateTime";
    rdfs:domain sdm:TripUpdate;
    rdfs:range xsd:dateTime.
