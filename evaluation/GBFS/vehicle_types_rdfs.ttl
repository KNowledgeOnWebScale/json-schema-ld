@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix gbfs: <https://w3id.org/gbfs#>.

<https://github.com/NABSA/gbfs/blob/v2.3/gbfs.md#vehicle_typesjson-added-in-v21-rc> dcterms:description "Describes the types of vehicles that System operator has available for rent (added in v2.1-RC).".
gbfs:last_updated dcterms:description "Last time the data in the feed was updated in POSIX time.";
    rdf:type rdf:Property;
    rdfs:label "last_updated";
    rdfs:domain <https://github.com/NABSA/gbfs/blob/v2.3/gbfs.md#vehicle_typesjson-added-in-v21-rc>;
    rdfs:range xsd:integer.
gbfs:ttl dcterms:description "Number of seconds before the data in the feed will be updated again (0 if the data should always be refreshed).";
    rdf:type rdf:Property;
    rdfs:label "ttl";
    rdfs:domain <https://github.com/NABSA/gbfs/blob/v2.3/gbfs.md#vehicle_typesjson-added-in-v21-rc>;
    rdfs:range xsd:integer.
gbfs:version dcterms:description "GBFS version number to which the feed conforms, according to the versioning framework.";
    rdf:type rdf:Property;
    rdfs:label "version";
    rdfs:domain <https://github.com/NABSA/gbfs/blob/v2.3/gbfs.md#vehicle_typesjson-added-in-v21-rc>;
    rdfs:range xsd:string.
gbfs:data dcterms:description "Response data in the form of name:value pairs.";
    rdf:type rdf:Property;
    rdfs:label "data";
    rdfs:domain <https://github.com/NABSA/gbfs/blob/v2.3/gbfs.md#vehicle_typesjson-added-in-v21-rc>;
    rdfs:range gbfs:Datum.
gbfs:Datum rdf:type rdfs:Class;
    rdfs:label "Datum".
gbfs:vehicle_types dcterms:description "Array that contains one object per vehicle type in the system as defined below.";
    rdf:type rdf:Property;
    rdfs:label "vehicle_types";
    rdfs:domain gbfs:Datum;
    rdfs:range gbfs:VehicleType.
gbfs:VehicleType rdf:type rdfs:Class;
    rdfs:label "VehicleType".
gbfs:vehicle_type_id dcterms:description "Unique identifier of a vehicle type.";
    rdf:type rdf:Property;
    rdfs:label "vehicle_type_id";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:string.
gbfs:form_factor dcterms:description "The vehicle's general form factor.";
    rdf:type rdf:Property;
    rdfs:label "form_factor";
    rdfs:domain gbfs:VehicleType.
gbfs:Form_factor rdf:type skos:ConceptScheme.
gbfs:form_factor rdfs:range [
  owl:oneOf (gbfs:bicycle gbfs:cargo_bicycle gbfs:car gbfs:moped gbfs:scooter_standing gbfs:scooter_seated gbfs:other gbfs:scooter)
].
gbfs:bicycle rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "bicycle".
gbfs:cargo_bicycle rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "cargo_bicycle".
gbfs:car rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "car".
gbfs:moped rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "moped".
gbfs:scooter_standing rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "scooter_standing".
gbfs:scooter_seated rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "scooter_seated".
gbfs:other rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "other".
gbfs:scooter rdf:type skos:Concept;
    skos:inScheme gbfs:Form_factor;
    rdfs:label "scooter".
gbfs:rider_capacity dcterms:description "The number of riders (driver included) the vehicle can legally accommodate";
    rdf:type rdf:Property;
    rdfs:label "rider_capacity";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:cargo_volume_capacity dcterms:description "Cargo volume available in the vehicle, expressed in liters.";
    rdf:type rdf:Property;
    rdfs:label "cargo_volume_capacity";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:cargo_load_capacity dcterms:description "The capacity of the vehicle cargo space (excluding passengers), expressed in kilograms.";
    rdf:type rdf:Property;
    rdfs:label "cargo_load_capacity";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:propulsion_type dcterms:description "The primary propulsion type of the vehicle. Updated in v2.3 to represent car-sharing";
    rdf:type rdf:Property;
    rdfs:label "propulsion_type";
    rdfs:domain gbfs:VehicleType.
gbfs:Propulsion_type rdf:type skos:ConceptScheme.
gbfs:propulsion_type rdfs:range [
  owl:oneOf (gbfs:human gbfs:electric_assist gbfs:electric gbfs:combustion gbfs:combustion_diesel gbfs:hybrid gbfs:plug_in_hybrid gbfs:hydrogen_fuel_cell)
].
gbfs:human rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "human".
gbfs:electric_assist rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "electric_assist".
gbfs:electric rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "electric".
gbfs:combustion rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "combustion".
gbfs:combustion_diesel rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "combustion_diesel".
gbfs:hybrid rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "hybrid".
gbfs:plug_in_hybrid rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "plug_in_hybrid".
gbfs:hydrogen_fuel_cell rdf:type skos:Concept;
    skos:inScheme gbfs:Propulsion_type;
    rdfs:label "hydrogen_fuel_cell".
gbfs:eco_label dcterms:description "Vehicle air quality certificate. added in v2.3.";
    rdf:type rdf:Property;
    rdfs:label "eco_label";
    rdfs:domain gbfs:VehicleType;
    rdfs:range gbfs:EcoLabel.
gbfs:EcoLabel rdf:type rdfs:Class;
    rdfs:label "EcoLabel".
gbfs:country_code dcterms:description " Country code following the ISO 3166-1 alpha-2 notation. Added in v2.3.";
    rdf:type rdf:Property;
    rdfs:label "country_code";
    rdfs:domain gbfs:EcoLabel;
    rdfs:range xsd:string.
gbfs:eco_sticker dcterms:description " Name of the eco label. Added in v2.3.";
    rdf:type rdf:Property;
    rdfs:label "eco_sticker";
    rdfs:domain gbfs:EcoLabel;
    rdfs:range xsd:string.
gbfs:max_range_meters dcterms:description "The furthest distance in meters that the vehicle can travel without recharging or refueling when it has the maximum amount of energy potential.";
    rdf:type rdf:Property;
    rdfs:label "max_range_meters";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:decimal.
gbfs:name dcterms:description "The public name of this vehicle type.";
    rdf:type rdf:Property;
    rdfs:label "name";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:string.
gbfs:g_CO2_km dcterms:description "Maximum quantity of CO2, in grams, emitted per kilometer, according to the WLTP. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "g_CO2_km";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:vehicle_image dcterms:description "URL to an image that would assist the user in identifying the vehicle. JPEG or PNG. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "vehicle_image";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:anyURI.
gbfs:make dcterms:description "The name of the vehicle manufacturer. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "make";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:string.
gbfs:model dcterms:description "The name of the vehicle model. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "model";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:string.
gbfs:color dcterms:description "The color of the vehicle. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "color";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:string.
gbfs:wheel_count dcterms:description "Number of wheels this vehicle type has. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "wheel_count";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:max_permitted_speed dcterms:description "The maximum speed in kilometers per hour this vehicle is permitted to reach in accordance with local permit and regulations. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "max_permitted_speed";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:rated_power dcterms:description "The rated power of the motor for this vehicle type in watts. Added in v2.3";
    rdf:type rdf:Property;
    rdfs:label "rated_power";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:default_reserve_time dcterms:description "Maximum time in minutes that a vehicle can be reserved before a rental begins added in v2.3-RC.";
    rdf:type rdf:Property;
    rdfs:label "default_reserve_time";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:integer.
gbfs:return_constraint dcterms:description "The conditions for returning the vehicle at the end of the trip. Added in v2.3-RC as return_type, and updated to return_constraint in v2.3.";
    rdf:type rdf:Property;
    rdfs:label "return_constraint";
    rdfs:domain gbfs:VehicleType.
gbfs:Return_constraint rdf:type skos:ConceptScheme.
gbfs:return_constraint rdfs:range [
  owl:oneOf (gbfs:free_floating gbfs:roundtrip_station gbfs:any_station gbfs:hybrid)
].
gbfs:free_floating rdf:type skos:Concept;
    skos:inScheme gbfs:Return_constraint;
    rdfs:label "free_floating".
gbfs:roundtrip_station rdf:type skos:Concept;
    skos:inScheme gbfs:Return_constraint;
    rdfs:label "roundtrip_station".
gbfs:any_station rdf:type skos:Concept;
    skos:inScheme gbfs:Return_constraint;
    rdfs:label "any_station".
gbfs:hybrid rdf:type skos:Concept;
    skos:inScheme gbfs:Return_constraint;
    rdfs:label "hybrid".
gbfs:vehicle_assets dcterms:description "An object where each key defines one of the items listed below added in v2.3-RC.";
    rdf:type rdf:Property;
    rdfs:label "vehicle_assets";
    rdfs:domain gbfs:VehicleType;
    rdfs:range gbfs:VehicleAsset.
gbfs:VehicleAsset rdf:type rdfs:Class;
    rdfs:label "VehicleAsset".
gbfs:icon_url dcterms:description "A fully qualified URL pointing to the location of a graphic icon file that MAY be used to represent this vehicle type on maps and in other applications added in v2.3-RC.";
    rdf:type rdf:Property;
    rdfs:label "icon_url";
    rdfs:domain gbfs:VehicleAsset;
    rdfs:range xsd:anyURI.
gbfs:icon_url_dark dcterms:description "A fully qualified URL pointing to the location of a graphic icon file to be used to represent this vehicle type when in dark mode added in v2.3-RC.";
    rdf:type rdf:Property;
    rdfs:label "icon_url_dark";
    rdfs:domain gbfs:VehicleAsset;
    rdfs:range xsd:anyURI.
gbfs:icon_last_modified dcterms:description "Date that indicates the last time any included vehicle icon images were modified or updated added in v2.3-RC.";
    rdf:type rdf:Property;
    rdfs:label "icon_last_modified";
    rdfs:domain gbfs:VehicleAsset;
    rdfs:range xsd:date.
gbfs:default_pricing_plan_id dcterms:description "A plan_id as defined in system_pricing_plans.json added in v2.3-RC.";
    rdf:type rdf:Property;
    rdfs:label "default_pricing_plan_id";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:string.
gbfs:pricing_plan_ids rdf:type rdf:Property;
    rdfs:label "pricing_plan_ids";
    rdfs:domain gbfs:VehicleType;
    rdfs:range xsd:string.
