@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json> dcterms:title "Smart Data Models - Transportation / Road Segment";
    dcterms:description "This entity contains a harmonised geographic and contextual description of a road segment. A collection of road segments are used to describe a Road.".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be RoadSegment";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:RoadSegment)
].
sdm:RoadSegment rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "RoadSegment".
sdm:refRoad dcterms:description "Relationship. Road to which this road segment belongs to.";
    rdf:type rdf:Property;
    rdfs:label "refRoad";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:startKilometer dcterms:description "Property. The kilometer number (measured from the road's start point) where this road segment starts. Model:'https://schema.org/Number'. ";
    rdf:type rdf:Property;
    rdfs:label "startKilometer";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:endKilometer dcterms:description "Property. The kilometer number (measured from the road's start point) where this road segment ends. Model:'https://schema.org/Number'. ";
    rdf:type rdf:Property;
    rdfs:label "endKilometer";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:allowedVehicleType rdf:type rdf:Property;
    rdfs:label "allowedVehicleType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:AllowedVehicleType rdf:type skos:ConceptScheme.
sdm:allowedVehicleType rdfs:range [
  owl:oneOf (sdm:agriculturalVehicle sdm:bicycle sdm:bus sdm:car sdm:caravan sdm:carWithCaravan sdm:carWithTrailer sdm:constructionOrMaintenanceVehicle sdm:lorry sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:tanker sdm:trailer sdm:van sdm:anyVehicle)
].
sdm:agriculturalVehicle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "agriculturalVehicle".
sdm:bicycle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "bicycle".
sdm:bus rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "bus".
sdm:car rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "car".
sdm:caravan rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "caravan".
sdm:carWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "carWithCaravan".
sdm:carWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "carWithTrailer".
sdm:constructionOrMaintenanceVehicle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "constructionOrMaintenanceVehicle".
sdm:lorry rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "lorry".
sdm:moped rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "moped".
sdm:motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorcycle".
sdm:motorcycleWithSideCar rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorcycleWithSideCar".
sdm:motorscooter rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorscooter".
sdm:tanker rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "tanker".
sdm:trailer rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "trailer".
sdm:van rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "van".
sdm:anyVehicle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "anyVehicle".
sdm:totalLaneNumber dcterms:description "Property. Total number of lanes offered by this road segment. Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "totalLaneNumber";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:length dcterms:description "Property. Total length of this road segment in kilometers. Model:'https://schema.org/length'. Units:'Kilometer (Km)'";
    rdf:type rdf:Property;
    rdfs:label "length";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:maximumAllowedSpeed dcterms:description "Property. Maximum allowed speed plying the road segment. More restrictive limits might be applied to specific vehicle types (trucks, caravans, etc.). Model:'https://schema.org/Number'. Units:'Kilometer per hour (Km/h)'";
    rdf:type rdf:Property;
    rdfs:label "maximumAllowedSpeed";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:minimumAllowedSpeed dcterms:description "Property. Minimum allowed speed while transiting this road segment. Model:'https://schema.org/Number'. Units:'Kilometer per hour (Km/h)'";
    rdf:type rdf:Property;
    rdfs:label "minimumAllowedSpeed";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:maximumAllowedHeight dcterms:description "Property. Maximum allowed height for vehicles transiting this road segment. Model:'https://schema.org/Number'. Units:'Meter (m)'. Model:'https://schema.org/height'";
    rdf:type rdf:Property;
    rdfs:label "maximumAllowedHeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:maximumAllowedWeight dcterms:description "Property. Maximum allowed weight for vehicles transiting this road segment. Model:'https://schema.org/Number'. Units:'Kilogram (Kg)'. Model:'https://schema.org/weight'";
    rdf:type rdf:Property;
    rdfs:label "maximumAllowedWeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:width dcterms:description "Property. Road's segment width.. Model:'https://schema.org/Number'. Units:'Meter (m)'";
    rdf:type rdf:Property;
    rdfs:label "width";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:laneUsage rdf:type rdf:Property;
    rdfs:label "laneUsage";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:LaneUsage rdf:type skos:ConceptScheme.
sdm:laneUsage rdfs:range [
  owl:oneOf (sdm:forward sdm:backward)
].
sdm:forward rdf:type skos:Concept;
    skos:inScheme sdm:LaneUsage;
    rdfs:label "forward".
sdm:backward rdf:type skos:Concept;
    skos:inScheme sdm:LaneUsage;
    rdfs:label "backward".
sdm:category rdf:type rdf:Property;
    rdfs:label "category";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:Category rdf:type skos:ConceptScheme.
sdm:category rdfs:range [
  owl:oneOf (sdm:oneway sdm:toll sdm:link)
].
sdm:oneway rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "oneway".
sdm:toll rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "toll".
sdm:link rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "link".
sdm:status dcterms:description "Property. Specific driving conditions on the roadsegment. Use statusDescription for additional information. Enum: ‘open, closed, limited’.  `open`: the roadsegment can be used in full intended capacity, `closed`: no traffic is possible, e.g. due to roadworks, an open bridge or lock, or any other event preventing traffic. `limited`: traffic is possible, but not in the full capacity.";
    rdf:type rdf:Property;
    rdfs:label "status";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:statusDescription dcterms:description "Property. Additional information to the status attribute.";
    rdf:type rdf:Property;
    rdfs:label "statusDescription";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:dataDescriptor dcterms:description "Relationship. URI pointing to the data-descriptor entity";
    rdf:type rdf:Property;
    rdfs:label "dataDescriptor";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:cyclePathMaterial dcterms:description "Property. Construction material used for laying the cycle path on the sides of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "cyclePathMaterial";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:carriagewayLength dcterms:description "Property. Total length of the carriage way of the road segment corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "carriagewayLength";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:bridgeCount dcterms:description "Property. Number of bridges in the road segment corresponding to this observation. Takes 0 (zero) as the value when the road segment has no bridges.";
    rdf:type rdf:Property;
    rdfs:label "bridgeCount";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:pedestrianPathLeftHeight dcterms:description "Property. Height of the walkway placed on the left edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "pedestrianPathLeftHeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:totalPedestrianPathLength dcterms:description "Property. Total length of the walkway present in the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "totalPedestrianPathLength";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:totalPedestrianPathWidth dcterms:description "Property. Total width of the walkway present in the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "totalPedestrianPathWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:culvertCount dcterms:description "Property. Number of culverts prevalent in the trace of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "culvertCount";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:roadName dcterms:description "Property. The name of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "roadName";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:roadClass dcterms:description "Property. The type of road corresponding to this observation. Enum: [OTHER_PUBLIC_ROAD, PRIVATE_ROAD, MINOR_CITY_ROAD, MAJOR_DISTRICT_ROAD, MAJOR_CITY_ROAD, NATIONAL_HIGHWAY, SERVICE_ROAD, STATE_HIGHWAY, OTHER_DISTRICT_ROAD, PORT_ROAD].";
    rdf:type rdf:Property;
    rdfs:label "roadClass";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:RoadClass rdf:type skos:ConceptScheme.
sdm:roadClass rdfs:range [
  owl:oneOf (sdm:MAJOR_DISTRICT_ROAD sdm:MAJOR_CITY_ROAD sdm:MINOR_CITY_ROAD sdm:NATIONAL_HIGHWAY sdm:OTHER_DISTRICT_ROAD sdm:OTHER_PUBLIC_ROAD sdm:PORT_ROAD sdm:PRIVATE_ROAD sdm:SERVICE_ROAD sdm:STATE_HIGHWAY)
].
sdm:MAJOR_DISTRICT_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "MAJOR_DISTRICT_ROAD".
sdm:MAJOR_CITY_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "MAJOR_CITY_ROAD".
sdm:MINOR_CITY_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "MINOR_CITY_ROAD".
sdm:NATIONAL_HIGHWAY rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "NATIONAL_HIGHWAY".
sdm:OTHER_DISTRICT_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "OTHER_DISTRICT_ROAD".
sdm:OTHER_PUBLIC_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "OTHER_PUBLIC_ROAD".
sdm:PORT_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "PORT_ROAD".
sdm:PRIVATE_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "PRIVATE_ROAD".
sdm:SERVICE_ROAD rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "SERVICE_ROAD".
sdm:STATE_HIGHWAY rdf:type skos:Concept;
    skos:inScheme sdm:RoadClass;
    rdfs:label "STATE_HIGHWAY".
sdm:medianHeight dcterms:description "Property. Height of the median or central reservation in the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "medianHeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:roadWork dcterms:description "Property. Reasons for the road work in case of urgent intervention. A combination of these values. Enum:'COLLAPSE, DERAILMENT, FIRE, FLOOD, GASLEAK, LANDSLIDE, OTHER, POWERCUT, ROCKFALL, SAGGING, WATERLEAK'.";
    rdf:type rdf:Property;
    rdfs:label "roadWork";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:RoadWork rdf:type skos:ConceptScheme.
sdm:roadWork rdfs:range [
  owl:oneOf (sdm:COLLAPSE sdm:DERAILMENT sdm:FIRE sdm:FLOOD sdm:GASLEAK sdm:LANDSLIDE sdm:OTHER sdm:POWERCUT sdm:ROCKFALL sdm:SAGGING sdm:WATERLEAK)
].
sdm:COLLAPSE rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "COLLAPSE".
sdm:DERAILMENT rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "DERAILMENT".
sdm:FIRE rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "FIRE".
sdm:FLOOD rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "FLOOD".
sdm:GASLEAK rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "GASLEAK".
sdm:LANDSLIDE rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "LANDSLIDE".
sdm:OTHER rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "OTHER".
sdm:POWERCUT rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "POWERCUT".
sdm:ROCKFALL rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "ROCKFALL".
sdm:SAGGING rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "SAGGING".
sdm:WATERLEAK rdf:type skos:Concept;
    skos:inScheme sdm:RoadWork;
    rdfs:label "WATERLEAK".
sdm:roadId dcterms:description "Property. Unique internal representation of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "roadId";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:cyclePathRightWidth dcterms:description "Property. Width of the cycle track on the right edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "cyclePathRightWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:roadMaterial dcterms:description "Property. The construction material used for laying the carriageway corresponding to this observation. For eg. concrete, earthen, tar etc.";
    rdf:type rdf:Property;
    rdfs:label "roadMaterial";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:medianWidth dcterms:description "Property. Width of the median or central reservation in the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "medianWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:carriagewayWidth dcterms:description "Property. Total width of the carriage way of the road segment corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "carriagewayWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:cyclePathRightHeight dcterms:description "Property. Height of the cycle track on the right edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "cyclePathRightHeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:roadDirection dcterms:description "Property. Represents the direction the road is heading to. Enum:' ['N, S, E, W'. The values N,S,E,W represent North,South,East,West respectively.";
    rdf:type rdf:Property;
    rdfs:label "roadDirection";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:medianLength dcterms:description "Property. Length of the median or central reservation in the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "medianLength";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:pedestrianPathMaterial dcterms:description "Property. Construction material used for laying the walkway / footpath on the sides of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "pedestrianPathMaterial";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:cyclePathLeftWidth dcterms:description "Property. Width of the cycle track on the left edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "cyclePathLeftWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:maximumAllowedWidth dcterms:description "Property. Maximum allowed width for vehicles using the entity corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "maximumAllowedWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:rightOfWayWidth dcterms:description "Property. Right of Way (RoW) is the total land area available for the roadway. Its width accommodates for carriages way + other necessities + future extension, along the road's alignment.";
    rdf:type rdf:Property;
    rdfs:label "rightOfWayWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:cyclePathLeftHeight dcterms:description "Property. Height of the cycle track on the left edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "cyclePathLeftHeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:pedestrianPathRightWidth dcterms:description "Property. Width of the walkway placed on the right edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "pedestrianPathRightWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:pedestrianPathLeftWidth dcterms:description "Property. Width of the walkway placed on the left edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "pedestrianPathLeftWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:laneInfo dcterms:description "Property. Describes the aspects of lanes of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "laneInfo";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range sdm:LaneInfo.
sdm:LaneInfo rdf:type rdfs:Class;
    rdfs:label "LaneInfo".
sdm:laneId dcterms:description "Property. Unique identification number of the lane corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "laneId";
    rdfs:domain sdm:LaneInfo;
    rdfs:range xsd:decimal.
sdm:laneDirection dcterms:description "Property. Describes the direction in which vehicles are plying on the lane corresponding to this observation. Enum:'FORWARD, BACKWARD, INBOUND, OUTBOUND, RIGHT, LEFT'";
    rdf:type rdf:Property;
    rdfs:label "laneDirection";
    rdfs:domain sdm:LaneInfo.
sdm:LaneDirection rdf:type skos:ConceptScheme.
sdm:laneDirection rdfs:range [
  owl:oneOf (sdm:BACKWARD sdm:FORWARD sdm:INBOUND sdm:LEFT sdm:OUTBOUND sdm:RIGHT)
].
sdm:BACKWARD rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "BACKWARD".
sdm:FORWARD rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "FORWARD".
sdm:INBOUND rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "INBOUND".
sdm:LEFT rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "LEFT".
sdm:OUTBOUND rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "OUTBOUND".
sdm:RIGHT rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "RIGHT".
sdm:pedestrianPathPlacement dcterms:description "Property. Describes the presence and placement of pedestrian along the road segment corresponding to this observation. Enum:'RIGHT, LEFT, BOTH, NOT_AVAILABLE'";
    rdf:type rdf:Property;
    rdfs:label "pedestrianPathPlacement";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:pedestrianPathRightHeight dcterms:description "Property. Height of the walkway placed on the right edge of the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "pedestrianPathRightHeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:cyclePathPlacement dcterms:description "Property. Describes the placement of cycle track along the road segment corresponding to this observation. Enum:' ['RIGHT, LEFT, BOTH, NOT_AVAILABLE'";
    rdf:type rdf:Property;
    rdfs:label "cyclePathPlacement";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>.
sdm:CyclePathPlacement rdf:type skos:ConceptScheme.
sdm:cyclePathPlacement rdfs:range [
  owl:oneOf (sdm:BOTH sdm:LEFT sdm:NOT_AVAILABLE sdm:RIGHT)
].
sdm:BOTH rdf:type skos:Concept;
    skos:inScheme sdm:CyclePathPlacement;
    rdfs:label "BOTH".
sdm:LEFT rdf:type skos:Concept;
    skos:inScheme sdm:CyclePathPlacement;
    rdfs:label "LEFT".
sdm:NOT_AVAILABLE rdf:type skos:Concept;
    skos:inScheme sdm:CyclePathPlacement;
    rdfs:label "NOT_AVAILABLE".
sdm:RIGHT rdf:type skos:Concept;
    skos:inScheme sdm:CyclePathPlacement;
    rdfs:label "RIGHT".
sdm:totalCyclePathWidth dcterms:description "Property. Total width of the cycle track present in the road corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "totalCyclePathWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:decimal.
sdm:agency_name dcterms:description "Property. The agency_name field contains the full name of the agency or organisation responsible for maintenance of the entity under consideration. SameAs: 'agency_name' field from GTFS Static Field Definition - agency.txt (https://developers.google.com/transit/gtfs/reference#agencytxt)";
    rdf:type rdf:Property;
    rdfs:label "agency_name";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range xsd:string.
sdm:municipalityInfo dcterms:description "Property. Model:'https://schema.org/Text. Municipality information corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "municipalityInfo";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/RoadSegment/schema.json>;
    rdfs:range sdm:MunicipalityInfo.
sdm:MunicipalityInfo rdf:type rdfs:Class;
    rdfs:label "MunicipalityInfo".
sdm:district dcterms:description "Property. Model:'https://schema.org/Text'. District name corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "district";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:ulbName dcterms:description "Property. Model:'https://schema.org/Text'. Name of the Urban Local Body corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "ulbName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:cityId dcterms:description "Property. Model:'https://schema.org/Text'. City ID corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "cityId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:wardId dcterms:description "Property. Model:'https://schema.org/Text'. Ward ID corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "wardId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:stateName dcterms:description "Property. Model:'https://schema.org/Text'. Name of the state corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "stateName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:cityName dcterms:description "Property. Model:'https://schema.org/Text'. City name corresponding to this observation";
    rdf:type rdf:Property;
    rdfs:label "cityName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:zoneName dcterms:description "Property. Model:'https://schema.org/Text'. Zone name corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "zoneName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:zoneId dcterms:description "Property. Model:'https://schema.org/Text'. Zone ID corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "zoneId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:wardName dcterms:description "Property. Model:'https://schema.org/Text'. Ward name corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "wardName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:wardNum dcterms:description "Property. Model:'https://schema.org/Number'. Ward number corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "wardNum";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:decimal.
