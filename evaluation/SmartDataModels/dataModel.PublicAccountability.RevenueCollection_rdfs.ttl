@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json> dcterms:title " - PublicAccountability / RevenueCollection";
    dcterms:description "A Data Model for city revenue collection operations.".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be RevenueCollection";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:RevenueCollection)
].
sdm:RevenueCollection rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "RevenueCollection".
sdm:year dcterms:description "Property. Year corresponding to this observation and is described in YYYY format, for eg. '2020'.";
    rdf:type rdf:Property;
    rdfs:label "year";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:string.
sdm:month dcterms:description "Property. Month corresponding to this observation and is described in MM format, for eg. '05' for the month of May.";
    rdf:type rdf:Property;
    rdfs:label "month";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:string.
sdm:dateObserved dcterms:description "Property. The date and time of this observation in ISO8601 UTC format";
    rdf:type rdf:Property;
    rdfs:label "dateObserved";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:dateTime.
sdm:totalCount dcterms:description "Property. Count of the revenue collection service corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "totalCount";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:decimal.
sdm:registrationCertificateRecoveryAmount dcterms:description "Property. Amount collected towards Registration Certificate on monthly basis from the establishment per employee.";
    rdf:type rdf:Property;
    rdfs:label "registrationCertificateRecoveryAmount";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:decimal.
sdm:revenueCollectionType dcterms:description "Property. Type of source from which the city administration collects the revenue, could be property tax, vehicle registration, party hall booking, community hall booking, auditorium booking etc.";
    rdf:type rdf:Property;
    rdfs:label "revenueCollectionType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:string.
sdm:enrollmentCertificateRecoveryAmount dcterms:description "Property. Amount collected towards Enrollment Certificate from the establishment on annual basis.";
    rdf:type rdf:Property;
    rdfs:label "enrollmentCertificateRecoveryAmount";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:decimal.
sdm:vehicleTypeCode dcterms:description "Property. The code for vehicleType corresponding to this observation. For eg.- '1' - MOPED/SCOOTER, '2' - MOTOR CYCLE, '4' - PRIVATE MOTOR CAR/JEEP CAR, '21' - TEMPO, '26' - BUS, etc.";
    rdf:type rdf:Property;
    rdfs:label "vehicleTypeCode";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:string.
sdm:vehicleType dcterms:description "Property. Type of vehicle from the point of view of its structural characteristics. This is different than the vehicle category . The following values defined by _VehicleTypeEnum_ and _VehicleTypeEnum2_, [DATEX 2 version 2.3](http://d2docs.ndwcloud.nu/_static/umlmodel/v2.3/index.htm)";
    rdf:type rdf:Property;
    rdfs:label "vehicleType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>.
sdm:VehicleType rdf:type skos:ConceptScheme.
sdm:vehicleType rdfs:range [
  owl:oneOf (sdm:agriculturalVehicle sdm:anyVehicle sdm:articulatedVehicle sdm:autorickshaw sdm:bicycle sdm:binTrolley sdm:BRT mini bus· sdm:BRT bus sdm:bus sdm:car sdm:caravan sdm:carOrLightVehicle sdm:carWithCaravan sdm:carWithTrailer sdm:cleaningTrolley sdm:compactor sdm:constructionOrMaintenanceVehicle sdm:dumper sdm:e-moped sdm:e-scooter sdm:e-motorcycle sdm:fourWheelDrive sdm:highSidedVehicle sdm:hopper sdm:lorry sdm:minibus sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:sweepingMachine sdm:tanker sdm:tempo sdm:threeWheeledVehicle sdm:tipper sdm:trailer sdm:tram sdm:trolley sdm:twoWheeledVehicle sdm:van sdm:vehicleWithoutCatalyticConverter sdm:vehicleWithCaravan sdm:vehicleWithTrailer sdm:withEvenNumberedRegistrationPlates sdm:withOddNumberedRegistrationPlates sdm:other)
].
sdm:agriculturalVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "agriculturalVehicle".
sdm:anyVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "anyVehicle".
sdm:articulatedVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "articulatedVehicle".
sdm:autorickshaw rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "autorickshaw".
sdm:bicycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bicycle".
sdm:binTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "binTrolley".
sdm:BRT mini bus· rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "BRT mini bus·".
sdm:BRT bus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "BRT bus".
sdm:bus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bus".
sdm:car rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "car".
sdm:caravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "caravan".
sdm:carOrLightVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carOrLightVehicle".
sdm:carWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithCaravan".
sdm:carWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithTrailer".
sdm:cleaningTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "cleaningTrolley".
sdm:compactor rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "compactor".
sdm:constructionOrMaintenanceVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "constructionOrMaintenanceVehicle".
sdm:dumper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "dumper".
sdm:e-moped rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-moped".
sdm:e-scooter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-scooter".
sdm:e-motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "e-motorcycle".
sdm:fourWheelDrive rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "fourWheelDrive".
sdm:highSidedVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "highSidedVehicle".
sdm:hopper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "hopper".
sdm:lorry rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "lorry".
sdm:minibus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "minibus".
sdm:moped rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "moped".
sdm:motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycle".
sdm:motorcycleWithSideCar rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycleWithSideCar".
sdm:motorscooter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorscooter".
sdm:sweepingMachine rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "sweepingMachine".
sdm:tanker rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tanker".
sdm:tempo rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tempo".
sdm:threeWheeledVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "threeWheeledVehicle".
sdm:tipper rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tipper".
sdm:trailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trailer".
sdm:tram rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tram".
sdm:trolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trolley".
sdm:twoWheeledVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "twoWheeledVehicle".
sdm:van rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "van".
sdm:vehicleWithoutCatalyticConverter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "vehicleWithoutCatalyticConverter".
sdm:vehicleWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "vehicleWithCaravan".
sdm:vehicleWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "vehicleWithTrailer".
sdm:withEvenNumberedRegistrationPlates rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "withEvenNumberedRegistrationPlates".
sdm:withOddNumberedRegistrationPlates rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "withOddNumberedRegistrationPlates".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "other".
sdm:amountCollected dcterms:description "Property. Amount collected towards the service corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "amountCollected";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range xsd:decimal.
sdm:municipalityInfo dcterms:description "Property. Municipality information corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "municipalityInfo";
    rdfs:domain <https://smart-data-models.github.io/dataModel.PublicAccountability/RevenueCollection/schema.json>;
    rdfs:range sdm:MunicipalityInfo.
sdm:MunicipalityInfo rdf:type rdfs:Class;
    rdfs:label "MunicipalityInfo".
sdm:district rdf:type rdf:Property;
    rdfs:label "district";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:ulbName rdf:type rdf:Property;
    rdfs:label "ulbName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:cityId rdf:type rdf:Property;
    rdfs:label "cityId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:addressRegion rdf:type rdf:Property;
    rdfs:label "addressRegion";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:addressLocality rdf:type rdf:Property;
    rdfs:label "addressLocality";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:zoneId rdf:type rdf:Property;
    rdfs:label "zoneId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:wardNum rdf:type rdf:Property;
    rdfs:label "wardNum";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:decimal.
