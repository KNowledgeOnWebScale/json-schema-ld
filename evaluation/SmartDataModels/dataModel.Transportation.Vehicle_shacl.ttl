@prefix dash: <http://datashapes.org/dash#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix schema: <https://schema.org/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix gbfs: <https://w3id.org/gbfs#>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix sdm: <https://w3id.org/sdm#>.
@prefix sdmshape: <https://w3id.org/sdm/shapes/schema.json#>.

<https://w3id.org/sdm/shapes/schema.json#schema.jsonShape> rdf:type sh:NodeShape;
    sh:targetClass <https://smart-data-models.github.io/dataModel.Transportation/Vehicle/schema.json>;
    sh:property [
  sh:path sdm:type;
  sh:description "Property. NGSI Entity type. It has to be Vehicle";
  sh:name "type";
  sh:in (sdm:Vehicle);
  sh:minCount 1;
  sh:maxCount 1
], [
  sh:path sdm:vehicleType;
  sh:description "Property. Type of vehicle from the point of view of its structural characteristics. This is different than the vehicle category . Model:'https://schema.org/Text'. Enum:'agriculturalVehicle, anyVehicle, articulatedVehicle, bicycle, binTrolley, bus, car, caravan, carOrLightVehicle, carWithCaravan, carWithTrailer, cleaningTrolley, constructionOrMaintenanceVehicle, fourWheelDrive, highSidedVehicle, lorry, minibus, moped, motorcycle, motorcycleWithSideCar, motorscooter, sweepingMachine, tanker, threeWheeledVehicle, trailer, tram, twoWheeledVehicle, trolley, van, vehicleWithoutCatalyticConverter, vehicleWithCaravan, vehicleWithTrailer, withEvenNumberedRegistrationPlates, withOddNumberedRegistrationPlates, other'. The following values defined by _VehicleTypeEnum_ and _VehicleTypeEnum2_, [DATEX 2 version 2.3](http://d2docs.ndwcloud.nu/_static/umlmodel/v2.3/index.htm) and extended for other uses";
  sh:name "vehicleType";
  sh:in (sdm:agriculturalVehicle sdm:ambulance sdm:anyVehicle sdm:articulatedVehicle sdm:autorickshaw sdm:bicycle sdm:binTrolley sdm:BRT mini busÂ· sdm:BRT bus sdm:bus sdm:car sdm:caravan sdm:carOrLightVehicle sdm:carWithCaravan sdm:carWithTrailer sdm:cleaningTrolley sdm:compactor sdm:constructionOrMaintenanceVehicle sdm:dumper sdm:e-moped sdm:e-scooter sdm:e-motorcycle sdm:fireTender sdm:fourWheelDrive sdm:highSidedVehicle sdm:hopper sdm:lorry sdm:minibus sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:policeVan sdm:publicMotor sdm:sweepingMachine sdm:tanker sdm:tempo sdm:threeWheeledVehicle sdm:tipper sdm:trailer sdm:tram sdm:trolley sdm:twoWheeledVehicle sdm:van sdm:vehicleWithoutCatalyticConverter sdm:vehicleWithCaravan sdm:vehicleWithTrailer sdm:withEvenNumberedRegistrationPlates sdm:withOddNumberedRegistrationPlates sdm:other);
  sh:minCount 1;
  sh:maxCount 1
], [
  sh:path sdm:category;
  sh:name "category";
  sh:in (sdm:municipalServices sdm:nonTracked sdm:private sdm:public sdm:specialUsage sdm:tracked)
], [
  sh:path sdm:speed;
  sh:xone ([
  sh:minInclusive 0;
  sh:datatype xsd:decimal
] [
  sh:minInclusive -1;
  sh:maxInclusive -1;
  sh:datatype xsd:decimal
])
], [
  sh:path sdm:heading;
  sh:xone ([
  sh:minInclusive 0;
  sh:maxInclusive 360;
  sh:maxExclusive true;
  sh:datatype xsd:decimal
] [
  sh:in (sdm:-1);
  sh:datatype xsd:decimal
])
], [
  sh:path sdm:cargoWeight;
  sh:description "Property. Current weight of the vehicle's cargo. Model:'https://schema.org/Number'. Units:'Kilograms'";
  sh:name "cargoWeight";
  sh:minInclusive 0;
  sh:minExclusive true;
  sh:datatype xsd:decimal
], [
  sh:path sdm:vehicleIdentificationNumber;
  sh:description "Property. The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles. Model:'https://schema.org/vehicleIdentificationNumber'.";
  sh:name "vehicleIdentificationNumber";
  sh:datatype xsd:string
], [
  sh:path sdm:vehiclePlateIdentifier;
  sh:description "Property.  An identifier or code displayed on a vehicle registration plate attached to the vehicle used for official identification purposes. The registration identifier is numeric or alphanumeric and is unique within the issuing authority's region. Model:'https://schema.org/Text'. Normative References: DATEXII `vehicleRegistrationPlateIdentifier`";
  sh:name "vehiclePlateIdentifier";
  sh:datatype xsd:string
], [
  sh:path sdm:fleetVehicleId;
  sh:description "Property. The identifier of the vehicle in the context of the fleet of vehicles to which it belongs. Model:'https://schema.org/Text'.";
  sh:name "fleetVehicleId";
  sh:datatype xsd:string
], [
  sh:path sdm:dateVehicleFirstRegistered;
  sh:description "Property. The date of the first registration of the vehicle with the respective public authorities. Model:'https://schema.org/dateVehicleFirstRegistered'.";
  sh:name "dateVehicleFirstRegistered";
  sh:datatype xsd:date
], [
  sh:path sdm:dateFirstUsed;
  sh:description "Property. Timestamp which denotes when the vehicle was first used. Model:'https://schema.org/DateTime'.";
  sh:name "dateFirstUsed";
  sh:datatype xsd:date
], [
  sh:path sdm:purchaseDate;
  sh:description "Property. The date the item e.g. vehicle was purchased by the current owner. Model:'https://schema.org/purchaseDate'.";
  sh:name "purchaseDate";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:mileageFromOdometer;
  sh:description "Property. The total distance travelled by the particular vehicle since its initial production, as read from its odometer. Model:'https://schema.org/mileageFromOdometer'.";
  sh:name "mileageFromOdometer";
  sh:datatype xsd:decimal
], [
  sh:path sdm:vehicleConfiguration;
  sh:description "Property. A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'. Model:'https://schema.org/vehicleConfiguration'.";
  sh:name "vehicleConfiguration";
  sh:datatype xsd:string
], [
  sh:path sdm:feature;
  sh:name "feature";
  sh:in (sdm:abs sdm:airbag sdm:alarm sdm:backCamera sdm:disabledRamp sdm:gps sdm:internetConnection sdm:overspeed sdm:proximitySensor sdm:wifi)
], [
  sh:path sdm:serviceProvided;
  sh:name "serviceProvided";
  sh:in (sdm:auxiliaryServices sdm:cargoTransport sdm:construction sdm:fairground sdm:garbageCollection sdm:goodsSelling sdm:maintenance sdm:parksAndGardens sdm:roadSignalling sdm:specialTransport sdm:streetCleaning sdm:streetLighting sdm:urbanTransit sdm:wasteContainerCleaning)
], [
  sh:path sdm:vehicleSpecialUsage;
  sh:description "Property. Indicates whether the vehicle is been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale. Model:'https://schema.org/vehicleSpecialUsage'. Enum:'ambulance, fireBrigade, military, police, schoolTransportation, taxi, trashManagement'";
  sh:name "vehicleSpecialUsage";
  sh:in (sdm:ambulance sdm:fireBrigade sdm:military sdm:police sdm:schoolTransportation sdm:taxi sdm:trashManagement)
], [
  sh:path sdm:refVehicleModel;
  sh:or ([
  sh:minLength 1;
  sh:maxLength 256;
  sh:pattern "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$";
  sh:datatype xsd:string;
  sh:description "Property. Identifier format of any NGSI entity"
] [
  sh:datatype xsd:anyURI;
  sh:description "Property. Identifier format of any NGSI entity"
])
], [
  sh:path sdm:serviceStatus;
  sh:description "Property. Vehicle status (from the point of view of the service provided, so it could not apply to private vehicles). Model:'https://schema.org/DateTime'. `parked` : Vehicle is parked and not providing any service at the moment. `onRoute` : Vehicle is performing a mission. A comma-separated modifier(s) can be added to indicate what mission is currently delivering the vehicle. For instance `onRoute,garbageCollection` can be used to denote that the vehicle is on route and in a garbage collection mission. 'broken' : Vehicle is suffering a temporary breakdown. `outOfService` : Vehicle is on the road but not performing any mission, probably going to its parking area. Enum:'broken, onRoute, outOfService, parked'";
  sh:name "serviceStatus";
  sh:in (sdm:broken sdm:onRoute sdm:outOfService sdm:parked)
], [
  sh:path sdm:bearing;
  sh:description "Property. Model:'https://schema.org/Number'. Gives the vehicle GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)";
  sh:name "bearing";
  sh:datatype xsd:decimal
], [
  sh:path sdm:wardId;
  sh:description "Property. Model:'https://schema.org/Text'. Ward ID of the entity corresponding to this observation.";
  sh:name "wardId";
  sh:datatype xsd:string
], [
  sh:path sdm:tripNetWeightCollected;
  sh:description "Property. Model:'https://schema.org/Number'. The net weight collected by the vehicle corresponding to this observation at the end of the trip.";
  sh:name "tripNetWeightCollected";
  sh:datatype xsd:decimal
], [
  sh:path sdm:license_plate;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the License Plate number of the vehicle. SameAs: license_plate field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)'";
  sh:name "license_plate";
  sh:datatype xsd:string
], [
  sh:path sdm:deviceBatteryStatus;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the Battery charging status of the reporting device. Enum:'connected, disconnected'.";
  sh:name "deviceBatteryStatus";
  sh:in (sdm:connected sdm:disconnected)
], [
  sh:path sdm:ignitionStatus;
  sh:description "Property. Model:'https://schema.org/Boolean'. Gives the ignition status of the vehicle. True means ignited";
  sh:name "ignitionStatus";
  sh:datatype xsd:boolean
], [
  sh:path sdm:vehicleRunningStatus;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the Battery charging status of the reporting device. Enum:'running, waiting, stopped'.";
  sh:name "vehicleRunningStatus";
  sh:in (sdm:running sdm:stopped sdm:waiting)
], [
  sh:path sdm:currentTripCount;
  sh:description "Property. Model:'https://schema.org/Number'. The current count of trips made by the vehicle corresponding to this observation on the given day of operation.";
  sh:name "currentTripCount";
  sh:datatype xsd:decimal
], [
  sh:path sdm:zoneName;
  sh:description "Property. Model:'https://schema.org/Text'. Zone name of the entity corresponding to this observation";
  sh:name "zoneName";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicleAltitude;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the current altitude of the vehicle using GPS";
  sh:name "vehicleAltitude";
  sh:datatype xsd:string
], [
  sh:path sdm:observationDateTime;
  sh:description "Property. Model:'https://schema.org/DateTime'. Last reported time of observation";
  sh:name "observationDateTime";
  sh:datatype xsd:dateTime
], [
  sh:path sdm:deviceSimNumber;
  sh:description "Property. Model:'https://schema.org/Text'. Gives the SIM number of the device in the vehicle.";
  sh:name "deviceSimNumber";
  sh:datatype xsd:string
], [
  sh:path sdm:wardName;
  sh:description "Property. Model:'https://schema.org/Text'. Ward name of the entity corresponding to this observation.";
  sh:name "wardName";
  sh:datatype xsd:string
], [
  sh:path sdm:reportId;
  sh:description "Property. Model:'https://schema.org/Text'. Unique Id assigned for the issue or report or feedback or transaction corresponding to this observation.";
  sh:name "reportId";
  sh:datatype xsd:string
], [
  sh:path sdm:vehicleTrackerDevice;
  sh:description "Property. Model:'https://schema.org/Text'. Installation status of the GPS device or the tracking device fitted to the vehicle corresponding to this observation.";
  sh:name "vehicleTrackerDevice";
  sh:datatype xsd:string
], [
  sh:path sdm:fuelFilled;
  sh:description "Property. Model:'https://schema.org/Number'. Amount of fuel filled in liters to the vehicle corresponding to this observation.";
  sh:name "fuelFilled";
  sh:datatype xsd:decimal
], [
  sh:path sdm:fuelEfficiency;
  sh:description "Property. Model:'https://schema.org/Number'. The distance traveled per unit of fuel used, commonly in kilometers per liter (km/L).";
  sh:name "fuelEfficiency";
  sh:datatype xsd:decimal
], [
  sh:path sdm:fuelType;
  sh:description "Property. Model:'https://schema.org/Text'. The type of fuel suitable for the engine or engines of the vehicle corresponding to this observation.";
  sh:name "fuelType";
  sh:datatype xsd:string
], [
  sh:path sdm:serviceOnDuty;
  sh:description "Property. Model:'https://schema.org/Boolean'. Nature of service provided by emergency vehicle corresponding to this observation. True indicates the emergency vehicle corresponding to this observation is attending to/ servicing to an emergency call of duty and is False otherwise.";
  sh:name "serviceOnDuty";
  sh:datatype xsd:string
], [
  sh:path sdm:emergencyVehicleType;
  sh:description "Property. Model:'https://schema.org/Text'. Type of emergency vehicle corresponding to this observation. Enum:'policeCar, policeMotorcycle, policeVan, policeSWAT, fireEngine, waterTender, airAmbulance, ambulance, motorcycleAmbulance, rescueVehicle, hazardousMaterialsApparatus, towTruck";
  sh:name "emergencyVehicleType";
  sh:in (sdm:policeCar sdm:policeMotorcycle sdm:policeVan sdm:policeSWAT sdm:fireEngine sdm:waterTender sdm:airAmbulance sdm:ambulance sdm:motorcycleAmbulance sdm:rescueVehicle sdm:hazardousMaterialsApparatus sdm:towTruck)
], [
  sh:path sdm:municipalityInfo;
  sh:description "Property. Model:'https://schema.org/Text. Municipality information corresponding to this observation.";
  sh:name "municipalityInfo"
].
sdm:MunicipalityInfoShape rdf:type sh:NodeShape;
    sh:targetClass sdm:MunicipalityInfo;
    sh:property [
  sh:path sdm:district;
  sh:description "Property. Model:'https://schema.org/Text'. District name corresponding to this observation.";
  sh:name "district";
  sh:datatype xsd:string
], [
  sh:path sdm:ulbName;
  sh:description "Property. Model:'https://schema.org/Text'. Name of the Urban Local Body corresponding to this observation.";
  sh:name "ulbName";
  sh:datatype xsd:string
], [
  sh:path sdm:cityId;
  sh:description "Property. Model:'https://schema.org/Text'. City ID corresponding to this observation.";
  sh:name "cityId";
  sh:datatype xsd:string
], [
  sh:path sdm:wardId;
  sh:description "Property. Model:'https://schema.org/Text'. Ward ID corresponding to this observation.";
  sh:name "wardId";
  sh:datatype xsd:string
], [
  sh:path sdm:stateName;
  sh:description "Property. Model:'https://schema.org/Text'. Name of the state corresponding to this observation.";
  sh:name "stateName";
  sh:datatype xsd:string
], [
  sh:path sdm:cityName;
  sh:description "Property. Model:'https://schema.org/Text'. City name corresponding to this observation";
  sh:name "cityName";
  sh:datatype xsd:string
], [
  sh:path sdm:zoneName;
  sh:description "Property. Model:'https://schema.org/Text'. Zone name corresponding to this observation.";
  sh:name "zoneName";
  sh:datatype xsd:string
], [
  sh:path sdm:zoneId;
  sh:description "Property. Model:'https://schema.org/Text'. Zone ID corresponding to this observation.";
  sh:name "zoneId";
  sh:datatype xsd:string
], [
  sh:path sdm:wardName;
  sh:description "Property. Model:'https://schema.org/Text'. Ward name corresponding to this observation.";
  sh:name "wardName";
  sh:datatype xsd:string
], [
  sh:path sdm:wardNum;
  sh:description "Property. Model:'https://schema.org/Number'. Ward number corresponding to this observation.";
  sh:name "wardNum";
  sh:datatype xsd:decimal
].
