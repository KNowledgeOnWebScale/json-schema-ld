@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json> dcterms:title " - Weather Forecast schema";
    dcterms:description "A harmonised description of a Weather Forecast".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be WeatherForecast";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:WeatherForecast)
].
sdm:WeatherForecast rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "WeatherForecast".
sdm:dateRetrieved dcterms:description "Property. Model:'https://schema.org/DateTime'. The date and time the forecast was retrieved in ISO8601 UTC format.";
    rdf:type rdf:Property;
    rdfs:label "dateRetrieved";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range xsd:dateTime.
sdm:dateIssued dcterms:description "Property. Model:'https://schema.org/DateTime'. The date and time the forecast was issued by the meteorological bureau in ISO8601 UTC format.";
    rdf:type rdf:Property;
    rdfs:label "dateIssued";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range xsd:dateTime.
sdm:validity dcterms:description "Property. Model:'https://schema.org/Text'. Includes the validity period for this forecast as a ISO8601 time interval. As a workaround for the lack of support of Orion Context Broker for datetime intervals, it can be used two separate attributes: `validFrom`, `validTo`.";
    rdf:type rdf:Property;
    rdfs:label "validity";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range xsd:string.
sdm:validFrom dcterms:description "Property. Model:'https://schema.org/Text'. Validity period start date and time.";
    rdf:type rdf:Property;
    rdfs:label "validFrom";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range xsd:dateTime.
sdm:validTo dcterms:description "Property. Model:'https://schema.org/Text'. Validity period end date and time.";
    rdf:type rdf:Property;
    rdfs:label "validTo";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range xsd:dateTime.
sdm:dayMaximum dcterms:description "Property. Model:'https://schema.org/StructuredValue'. Maximum values for the reported period. Subattributes:- `temperature` : Maximum temperature. See `WeatherForecast.temperature` for description and units. - `feelLikesTemperature`. Maximum feels like temperature. Same semantics and units as `WeatherForecast.feelsLikeTemperature`.-   `relativeHumidity`. Maximum relative humidity. Same semantics and units as `WeatherForecast.relativeHumidity`.";
    rdf:type rdf:Property;
    rdfs:label "dayMaximum";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range sdm:DayMaximum.
sdm:DayMaximum rdf:type rdfs:Class;
    rdfs:label "DayMaximum".
sdm:dayMinimum dcterms:description "Property. Model:'https://schema.org/Text'. Minimum values forecasted for the reported period.  Minimum values for the reported period. Subattributes:- `temperature` : Minimum temperature. See `WeatherForecast.temperature` for description and units. - `feelLikesTemperature`. Minimum feels like temperature. Same semantics and units as `WeatherForecast.feelsLikeTemperature`.- `relativeHumidity`. Minimum relative humidity. Same semantics and units as `WeatherForecast.relativeHumidity`";
    rdf:type rdf:Property;
    rdfs:label "dayMinimum";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range sdm:DayMinimum.
sdm:DayMinimum rdf:type rdfs:Class;
    rdfs:label "DayMinimum".
sdm:uVIndexMax dcterms:description "Property. Model:'https://schema.org/Number'. The maximum UV index for the period, based on the World Health Organization's UV Index measure. Normative references: [http://www.who.int/uv/intersunprogramme/activities/uv_index/en/](http://www.who.int/uv/intersunprogramme/activities/uv_index/en/)";
    rdf:type rdf:Property;
    rdfs:label "uVIndexMax";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range xsd:decimal.
sdm:precipitation dcterms:description "Property. Model:'https://schema.org/Number'. Amount of water rain expected. Units:'Liters per square meter'.";
    rdf:type rdf:Property;
    rdfs:label "precipitation";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Weather/WeatherForecast/schema.json>;
    rdfs:range xsd:decimal.
