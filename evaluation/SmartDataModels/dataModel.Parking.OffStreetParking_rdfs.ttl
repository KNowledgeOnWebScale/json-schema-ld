@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json> dcterms:title "Smart Data Models - Parking / Off Street Parking";
    dcterms:description "Off street parking".
sdm:type dcterms:description "Property. It has to be OffStreetParking";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:OffStreetParking)
].
sdm:OffStreetParking rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "OffStreetParking".
sdm:category rdf:type rdf:Property;
    rdfs:label "category";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:Category rdf:type skos:ConceptScheme.
sdm:category rdfs:range [
  owl:oneOf (sdm:barrierAccess sdm:feeCharged sdm:forCustomers sdm:forDisabled sdm:forElectricalCharging sdm:forEmployees sdm:forMembers sdm:forResidents sdm:forStudents sdm:forVisitors sdm:free sdm:freeAccess sdm:gateAccess sdm:guarded sdm:ground sdm:longTerm sdm:mediumTerm sdm:onlyResidents sdm:onlyWithPermit sdm:parkingGarage sdm:parkingLot sdm:private sdm:public sdm:publicPrivate sdm:shortTerm sdm:staffed sdm:underground sdm:urbanDeterrentParking sdm:other)
].
sdm:barrierAccess rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "barrierAccess".
sdm:feeCharged rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "feeCharged".
sdm:forCustomers rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forCustomers".
sdm:forDisabled rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forDisabled".
sdm:forElectricalCharging rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forElectricalCharging".
sdm:forEmployees rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forEmployees".
sdm:forMembers rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forMembers".
sdm:forResidents rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forResidents".
sdm:forStudents rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forStudents".
sdm:forVisitors rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "forVisitors".
sdm:free rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "free".
sdm:freeAccess rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "freeAccess".
sdm:gateAccess rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "gateAccess".
sdm:guarded rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "guarded".
sdm:ground rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "ground".
sdm:longTerm rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "longTerm".
sdm:mediumTerm rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "mediumTerm".
sdm:onlyResidents rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "onlyResidents".
sdm:onlyWithPermit rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "onlyWithPermit".
sdm:parkingGarage rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "parkingGarage".
sdm:parkingLot rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "parkingLot".
sdm:private rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "private".
sdm:public rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "public".
sdm:publicPrivate rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "publicPrivate".
sdm:shortTerm rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "shortTerm".
sdm:staffed rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "staffed".
sdm:underground rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "underground".
sdm:urbanDeterrentParking rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "urbanDeterrentParking".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:Category;
    rdfs:label "other".
sdm:extCategory rdf:type rdf:Property;
    rdfs:label "extCategory";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:string.
sdm:allowedVehicleType rdf:type rdf:Property;
    rdfs:label "allowedVehicleType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:AllowedVehicleType rdf:type skos:ConceptScheme.
sdm:allowedVehicleType rdfs:range [
  owl:oneOf (sdm:agriculturalVehicle sdm:anyVehicle sdm:bicycle sdm:bus sdm:car sdm:caravan sdm:carWithCaravan sdm:carWithTrailer sdm:constructionOrMaintenanceVehicle sdm:lorry sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:tanker sdm:trailer sdm:van)
].
sdm:agriculturalVehicle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "agriculturalVehicle".
sdm:anyVehicle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "anyVehicle".
sdm:bicycle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "bicycle".
sdm:bus rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "bus".
sdm:car rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "car".
sdm:caravan rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "caravan".
sdm:carWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "carWithCaravan".
sdm:carWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "carWithTrailer".
sdm:constructionOrMaintenanceVehicle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "constructionOrMaintenanceVehicle".
sdm:lorry rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "lorry".
sdm:moped rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "moped".
sdm:motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorcycle".
sdm:motorcycleWithSideCar rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorcycleWithSideCar".
sdm:motorscooter rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "motorscooter".
sdm:tanker rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "tanker".
sdm:trailer rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "trailer".
sdm:van rdf:type skos:Concept;
    skos:inScheme sdm:AllowedVehicleType;
    rdfs:label "van".
sdm:chargeType rdf:type rdf:Property;
    rdfs:label "chargeType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:ChargeType rdf:type skos:ConceptScheme.
sdm:chargeType rdfs:range [
  owl:oneOf (sdm:additionalIntervalPrice sdm:annualPayment sdm:firstIntervalPrice sdm:flat sdm:free sdm:minimum sdm:maximum sdm:monthlyPayment sdm:other sdm:seasonTicket sdm:temporaryPrice)
].
sdm:additionalIntervalPrice rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "additionalIntervalPrice".
sdm:annualPayment rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "annualPayment".
sdm:firstIntervalPrice rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "firstIntervalPrice".
sdm:flat rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "flat".
sdm:free rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "free".
sdm:minimum rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "minimum".
sdm:maximum rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "maximum".
sdm:monthlyPayment rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "monthlyPayment".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "other".
sdm:seasonTicket rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "seasonTicket".
sdm:temporaryPrice rdf:type skos:Concept;
    skos:inScheme sdm:ChargeType;
    rdfs:label "temporaryPrice".
sdm:requiredPermit rdf:type rdf:Property;
    rdfs:label "requiredPermit";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:RequiredPermit rdf:type skos:ConceptScheme.
sdm:requiredPermit rdfs:range [
  owl:oneOf (sdm:employeePermit sdm:fairPermit sdm:governmentPermit sdm:noPermitNeeded sdm:residentPermit sdm:specificIdentifiedVehiclePermit sdm:studentPermit sdm:visitorPermit)
].
sdm:employeePermit rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "employeePermit".
sdm:fairPermit rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "fairPermit".
sdm:governmentPermit rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "governmentPermit".
sdm:noPermitNeeded rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "noPermitNeeded".
sdm:residentPermit rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "residentPermit".
sdm:specificIdentifiedVehiclePermit rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "specificIdentifiedVehiclePermit".
sdm:studentPermit rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "studentPermit".
sdm:visitorPermit rdf:type skos:Concept;
    skos:inScheme sdm:RequiredPermit;
    rdfs:label "visitorPermit".
sdm:occupancyDetectionType rdf:type rdf:Property;
    rdfs:label "occupancyDetectionType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:OccupancyDetectionType rdf:type skos:ConceptScheme.
sdm:occupancyDetectionType rdfs:range [
  owl:oneOf (sdm:balancing sdm:manual sdm:modelBased sdm:none sdm:singleSpaceDetection)
].
sdm:balancing rdf:type skos:Concept;
    skos:inScheme sdm:OccupancyDetectionType;
    rdfs:label "balancing".
sdm:manual rdf:type skos:Concept;
    skos:inScheme sdm:OccupancyDetectionType;
    rdfs:label "manual".
sdm:modelBased rdf:type skos:Concept;
    skos:inScheme sdm:OccupancyDetectionType;
    rdfs:label "modelBased".
sdm:none rdf:type skos:Concept;
    skos:inScheme sdm:OccupancyDetectionType;
    rdfs:label "none".
sdm:singleSpaceDetection rdf:type skos:Concept;
    skos:inScheme sdm:OccupancyDetectionType;
    rdfs:label "singleSpaceDetection".
sdm:occupiedSpotNumber dcterms:description "Property. Model:'http://schema.org/Number'. Number of total parking spots occupied in the smart parking site corresponding to this observation. This must a positive number lower than or equal to the totalSpotNumber";
    rdf:type rdf:Property;
    rdfs:label "occupiedSpotNumber";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:integer.
sdm:occupancyModified dcterms:description "Property. Model:'http://schema.org/Number'. Relative value of occupied spots out of the total spots. Allowed values: 0 - 1";
    rdf:type rdf:Property;
    rdfs:label "occupancyModified";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:dateTime.
sdm:occupancy dcterms:description "Property. Model:'http://schema.org/Number'. Relative value of occupied spots out of the total spots.";
    rdf:type rdf:Property;
    rdfs:label "occupancy";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:acceptedPaymentMethod rdf:type rdf:Property;
    rdfs:label "acceptedPaymentMethod";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:AcceptedPaymentMethod rdf:type skos:ConceptScheme.
sdm:acceptedPaymentMethod rdfs:range [
  owl:oneOf (sdm:ByBankTransferInAdvance sdm:ByInvoice sdm:Cash sdm:CheckInAdvance sdm:COD sdm:DirectDebit sdm:GoogleCheckout sdm:PayPal sdm:PaySwarm)
].
sdm:ByBankTransferInAdvance rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "ByBankTransferInAdvance".
sdm:ByInvoice rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "ByInvoice".
sdm:Cash rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "Cash".
sdm:CheckInAdvance rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "CheckInAdvance".
sdm:COD rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "COD".
sdm:DirectDebit rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "DirectDebit".
sdm:GoogleCheckout rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "GoogleCheckout".
sdm:PayPal rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "PayPal".
sdm:PaySwarm rdf:type skos:Concept;
    skos:inScheme sdm:AcceptedPaymentMethod;
    rdfs:label "PaySwarm".
sdm:priceRatePerMinute dcterms:description "Property. Model: 'https://schema.org/Number'. Price rate per minute.";
    rdf:type rdf:Property;
    rdfs:label "priceRatePerMinute";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:priceCurrency dcterms:description "Property. Model:'https://schema.org/priceCurrency'. Price currency of price rate per minute";
    rdf:type rdf:Property;
    rdfs:label "priceCurrency";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:string.
sdm:layout rdf:type rdf:Property;
    rdfs:label "layout";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:Layout rdf:type skos:ConceptScheme.
sdm:layout rdfs:range [
  owl:oneOf (sdm:automatedParkingGarage sdm:carports sdm:covered sdm:field sdm:garageBoxes sdm:multiLevel sdm:multiStorey sdm:nested sdm:openSpace sdm:rooftop sdm:sheds sdm:singleLevel sdm:surface sdm:other)
].
sdm:automatedParkingGarage rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "automatedParkingGarage".
sdm:carports rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "carports".
sdm:covered rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "covered".
sdm:field rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "field".
sdm:garageBoxes rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "garageBoxes".
sdm:multiLevel rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "multiLevel".
sdm:multiStorey rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "multiStorey".
sdm:nested rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "nested".
sdm:openSpace rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "openSpace".
sdm:rooftop rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "rooftop".
sdm:sheds rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "sheds".
sdm:singleLevel rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "singleLevel".
sdm:surface rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "surface".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:Layout;
    rdfs:label "other".
sdm:usageScenario rdf:type rdf:Property;
    rdfs:label "usageScenario";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:UsageScenario rdf:type skos:ConceptScheme.
sdm:usageScenario rdfs:range [
  owl:oneOf (sdm:automaticParkingGuidance sdm:carSharing sdm:dropOffWithValet sdm:dropOffMechanical sdm:dropOff sdm:eventParking sdm:kissAndRide sdm:liftShare sdm:loadingBay sdm:overnightParking sdm:parkAndCycle sdm:parkAndRide sdm:parkAndWalk sdm:restArea sdm:serviceArea sdm:staffGuidesToSpace sdm:truckParking sdm:vehicleLift sdm:other)
].
sdm:automaticParkingGuidance rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "automaticParkingGuidance".
sdm:carSharing rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "carSharing".
sdm:dropOffWithValet rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "dropOffWithValet".
sdm:dropOffMechanical rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "dropOffMechanical".
sdm:dropOff rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "dropOff".
sdm:eventParking rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "eventParking".
sdm:kissAndRide rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "kissAndRide".
sdm:liftShare rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "liftShare".
sdm:loadingBay rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "loadingBay".
sdm:overnightParking rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "overnightParking".
sdm:parkAndCycle rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "parkAndCycle".
sdm:parkAndRide rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "parkAndRide".
sdm:parkAndWalk rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "parkAndWalk".
sdm:restArea rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "restArea".
sdm:serviceArea rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "serviceArea".
sdm:staffGuidesToSpace rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "staffGuidesToSpace".
sdm:truckParking rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "truckParking".
sdm:vehicleLift rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "vehicleLift".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:UsageScenario;
    rdfs:label "other".
sdm:parkingMode rdf:type rdf:Property;
    rdfs:label "parkingMode";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:ParkingMode rdf:type skos:ConceptScheme.
sdm:parkingMode rdfs:range [
  owl:oneOf (sdm:echelonParking sdm:parallelParking sdm:perpendicularParking)
].
sdm:echelonParking rdf:type skos:Concept;
    skos:inScheme sdm:ParkingMode;
    rdfs:label "echelonParking".
sdm:parallelParking rdf:type skos:Concept;
    skos:inScheme sdm:ParkingMode;
    rdfs:label "parallelParking".
sdm:perpendicularParking rdf:type skos:Concept;
    skos:inScheme sdm:ParkingMode;
    rdfs:label "perpendicularParking".
sdm:facilities rdf:type rdf:Property;
    rdfs:label "facilities";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:Facilities rdf:type skos:ConceptScheme.
sdm:facilities rdfs:range [
  owl:oneOf (sdm:bikeParking sdm:cashMachine sdm:copyMachineOrService sdm:defibrillator sdm:dumpingStation sdm:electricChargingStation sdm:elevator sdm:faxMachineOrService sdm:fireHose sdm:fireExtinguisher sdm:fireHydrant sdm:firstAidEquipment sdm:freshWater sdm:iceFreeScaffold sdm:informationPoint sdm:internetWireless sdm:luggageLocker sdm:payDesk sdm:paymentMachine sdm:playground sdm:publicPhone sdm:refuseBin sdm:safeDeposit sdm:shower sdm:toilet sdm:tollTerminal sdm:vendingMachine sdm:wasteDisposal)
].
sdm:bikeParking rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "bikeParking".
sdm:cashMachine rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "cashMachine".
sdm:copyMachineOrService rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "copyMachineOrService".
sdm:defibrillator rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "defibrillator".
sdm:dumpingStation rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "dumpingStation".
sdm:electricChargingStation rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "electricChargingStation".
sdm:elevator rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "elevator".
sdm:faxMachineOrService rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "faxMachineOrService".
sdm:fireHose rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "fireHose".
sdm:fireExtinguisher rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "fireExtinguisher".
sdm:fireHydrant rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "fireHydrant".
sdm:firstAidEquipment rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "firstAidEquipment".
sdm:freshWater rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "freshWater".
sdm:iceFreeScaffold rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "iceFreeScaffold".
sdm:informationPoint rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "informationPoint".
sdm:internetWireless rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "internetWireless".
sdm:luggageLocker rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "luggageLocker".
sdm:payDesk rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "payDesk".
sdm:paymentMachine rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "paymentMachine".
sdm:playground rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "playground".
sdm:publicPhone rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "publicPhone".
sdm:refuseBin rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "refuseBin".
sdm:safeDeposit rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "safeDeposit".
sdm:shower rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "shower".
sdm:toilet rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "toilet".
sdm:tollTerminal rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "tollTerminal".
sdm:vendingMachine rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "vendingMachine".
sdm:wasteDisposal rdf:type skos:Concept;
    skos:inScheme sdm:Facilities;
    rdfs:label "wasteDisposal".
sdm:security rdf:type rdf:Property;
    rdfs:label "security";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:Security rdf:type skos:ConceptScheme.
sdm:security rdfs:range [
  owl:oneOf (sdm:areaSeparatedFromSurroundings sdm:cctv sdm:dog sdm:externalSecurity sdm:fences sdm:floodLight sdm:guard24hours sdm:lighting sdm:patrolled sdm:securityStaff)
].
sdm:areaSeparatedFromSurroundings rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "areaSeparatedFromSurroundings".
sdm:cctv rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "cctv".
sdm:dog rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "dog".
sdm:externalSecurity rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "externalSecurity".
sdm:fences rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "fences".
sdm:floodLight rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "floodLight".
sdm:guard24hours rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "guard24hours".
sdm:lighting rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "lighting".
sdm:patrolled rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "patrolled".
sdm:securityStaff rdf:type skos:Concept;
    skos:inScheme sdm:Security;
    rdfs:label "securityStaff".
sdm:highestFloor dcterms:description "Property. Model:'http://schema.org/Number'. For parking sites with multiple floor levels, highest floor. An integer number. 0 is ground level. Upper floors are positive numbers. Lower floors are negative ones.";
    rdf:type rdf:Property;
    rdfs:label "highestFloor";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:integer.
sdm:lowestFloor dcterms:description "Property. Model:'http://schema.org/Number'. For parking sites with multiple floor levels, lowest floor. Allowed values: An integer number.";
    rdf:type rdf:Property;
    rdfs:label "lowestFloor";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:integer.
sdm:maximumParkingDuration dcterms:description "Property. Model:'http://schema.org/Text'. Maximum allowed stay at site, on a general basis, encoded as a ISO8601 duration or with any other string relevant for parking.  An empty value or when non present indicates an indefinite duration";
    rdf:type rdf:Property;
    rdfs:label "maximumParkingDuration";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:string.
sdm:totalSpotNumber dcterms:description "Property. Model:'http://schema.org/Number'. The total number of spots offered by this parking site.  This number can be difficult to be obtained for those parking locations on which spots are not clearly marked by lines. Allowed values: Any positive integer number or 0. Normative references: DATEX 2 version 2.3 attribute _parkingNumberOfSpaces_ of the _ParkingRecord_ class.";
    rdf:type rdf:Property;
    rdfs:label "totalSpotNumber";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:integer.
sdm:availableSpotNumber dcterms:description "Property. Model:'http://schema.org/Number'. The number of spots available (_including_ all  vehicle types or reserved spaces, such as those for disabled people, long term parkers and so on). This might be harder to estimate at those parking locations on which spots borders are not clearly marked by lines. Allowed values: A positive integer number, including 0. It must lower or equal than `totalSpotNumber`.";
    rdf:type rdf:Property;
    rdfs:label "availableSpotNumber";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:integer.
sdm:extraSpotNumber dcterms:description "Property. Model:'http://schema.org/Number'. The number of extra spots _available_, i.e. free. This value must aggregate free spots from all groups mentioned below: A/ Those reserved for special purposes and usually require a permit. Permit details will be found at parking group level (entity of type `ParkingGroup`). B/ Those reserved for other vehicle types different than the principal allowed vehicle type. C/ Any other group of parking spots not subject to the general condition rules conveyed by this entity.";
    rdf:type rdf:Property;
    rdfs:label "extraSpotNumber";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:integer.
sdm:openingHours dcterms:description "Property. Model:'http://schema.org/openingHours'. Opening hours of the parking site.";
    rdf:type rdf:Property;
    rdfs:label "openingHours";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:string.
sdm:firstAvailableFloor dcterms:description "Property. Model:'http://schema.org/Number'. Number of the floor closest to the ground which currently has available parking spots. Allowed values: Stories are numbered between -n and n, being 0 ground floor.";
    rdf:type rdf:Property;
    rdfs:label "firstAvailableFloor";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:integer.
sdm:specialLocation rdf:type rdf:Property;
    rdfs:label "specialLocation";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:SpecialLocation rdf:type skos:ConceptScheme.
sdm:specialLocation rdfs:range [
  owl:oneOf (sdm:airportTerminal sdm:cableCarStation sdm:campground sdm:cinema sdm:coachStation sdm:conventionCentre sdm:exhibitionCentre sdm:ferryTerminal sdm:hotel sdm:market sdm:publicTransportStation sdm:religiousCentre sdm:shoppingCentre sdm:skilift sdm:specificFacility sdm:themePark sdm:trainStation sdm:vehicleOnRailTerminal sdm:other)
].
sdm:airportTerminal rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "airportTerminal".
sdm:cableCarStation rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "cableCarStation".
sdm:campground rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "campground".
sdm:cinema rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "cinema".
sdm:coachStation rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "coachStation".
sdm:conventionCentre rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "conventionCentre".
sdm:exhibitionCentre rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "exhibitionCentre".
sdm:ferryTerminal rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "ferryTerminal".
sdm:hotel rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "hotel".
sdm:market rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "market".
sdm:publicTransportStation rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "publicTransportStation".
sdm:religiousCentre rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "religiousCentre".
sdm:shoppingCentre rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "shoppingCentre".
sdm:skilift rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "skilift".
sdm:specificFacility rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "specificFacility".
sdm:themePark rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "themePark".
sdm:trainStation rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "trainStation".
sdm:vehicleOnRailTerminal rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "vehicleOnRailTerminal".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:SpecialLocation;
    rdfs:label "other".
sdm:status rdf:type rdf:Property;
    rdfs:label "status";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:Status rdf:type skos:ConceptScheme.
sdm:status rdfs:range [
  owl:oneOf (sdm:almostFull sdm:closed sdm:closedAbnormal sdm:full sdm:fullAtEntrance sdm:open sdm:openingTimesInForce sdm:spacesAvailable)
].
sdm:almostFull rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "almostFull".
sdm:closed rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "closed".
sdm:closedAbnormal rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "closedAbnormal".
sdm:full rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "full".
sdm:fullAtEntrance rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "fullAtEntrance".
sdm:open rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "open".
sdm:openingTimesInForce rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "openingTimesInForce".
sdm:spacesAvailable rdf:type skos:Concept;
    skos:inScheme sdm:Status;
    rdfs:label "spacesAvailable".
sdm:reservationType rdf:type rdf:Property;
    rdfs:label "reservationType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:ReservationType rdf:type skos:ConceptScheme.
sdm:reservationType rdfs:range [
  owl:oneOf (sdm:mandatory sdm:notAvailable sdm:optional sdm:partly)
].
sdm:mandatory rdf:type skos:Concept;
    skos:inScheme sdm:ReservationType;
    rdfs:label "mandatory".
sdm:notAvailable rdf:type skos:Concept;
    skos:inScheme sdm:ReservationType;
    rdfs:label "notAvailable".
sdm:optional rdf:type skos:Concept;
    skos:inScheme sdm:ReservationType;
    rdfs:label "optional".
sdm:partly rdf:type skos:Concept;
    skos:inScheme sdm:ReservationType;
    rdfs:label "partly".
sdm:provider dcterms:description "Property. Parking site service provider. Model:'https://schema.org/provider'";
    rdf:type rdf:Property;
    rdfs:label "provider";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range sdm:Provider.
sdm:Provider rdf:type rdfs:Class;
    rdfs:label "Provider".
sdm:measuresPeriod dcterms:description "Property. Model:'http://schema.org/Number'. The measures period related to availableSpotNumber and priceRatePerMinute.";
    rdf:type rdf:Property;
    rdfs:label "measuresPeriod";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:measuresPeriodUnit dcterms:description "Property. Model:'http://schema.org/unitText'. The measures period unit related to availableSpotNumber and PriceRatePerMinute.";
    rdf:type rdf:Property;
    rdfs:label "measuresPeriodUnit";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:string.
sdm:contactPoint dcterms:description "Property. Model:'https://schema.org/contactPoint'. Parking site contact point.";
    rdf:type rdf:Property;
    rdfs:label "contactPoint";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range sdm:ContactPoint.
sdm:ContactPoint rdf:type rdfs:Class;
    rdfs:label "ContactPoint".
sdm:averageSpotWidth dcterms:description "Property. Model:'http://schema.org/width'. Units:'meters'. The average width of parking spots.";
    rdf:type rdf:Property;
    rdfs:label "averageSpotWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:averageSpotLength dcterms:description "Property. Model:'http://schema.org/length'. Units:'meters'. The average length of parking spots.";
    rdf:type rdf:Property;
    rdfs:label "averageSpotLength";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:maximumAllowedHeight dcterms:description "Property. Model:'http://schema.org/heigth'. Units:'meters'. Maximum allowed height for vehicles. If there are multiple zones, it will be the minimum height of all the zones.";
    rdf:type rdf:Property;
    rdfs:label "maximumAllowedHeight";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:maximumAllowedWidth dcterms:description "Property. Model:'http://schema.org/width'. Units:'Meters'. Maximum allowed width for vehicles. If there are multiple zones, it will be the minimum width of all the zones.";
    rdf:type rdf:Property;
    rdfs:label "maximumAllowedWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:refParkingAccess dcterms:description "Relationship. Model:'http://schema.org/URL'. Parking site's access point(s).";
    rdf:type rdf:Property;
    rdfs:label "refParkingAccess";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:refParkingGroup dcterms:description "Relationship. Model:'http://schema.org/URL'. Parking site identified group(s). A group can correspond to a zone, a complete storey, a group of spots, etc.";
    rdf:type rdf:Property;
    rdfs:label "refParkingGroup";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:refParkingSpot dcterms:description "Relationship. Individual parking spots belonging to this offStreet parking site.";
    rdf:type rdf:Property;
    rdfs:label "refParkingSpot";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>.
sdm:aggregateRating dcterms:description "Property. Model:'https://schema.org/aggregateRating'. Aggregated rating for this parking site.";
    rdf:type rdf:Property;
    rdfs:label "aggregateRating";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range sdm:AggregateRating.
sdm:AggregateRating rdf:type rdfs:Class;
    rdfs:label "AggregateRating".
sdm:vehicleEntranceCount dcterms:description "Property. Model:'http://schema.org/Number'. Aggregated number of vehicle that enter the parking site in a period of time.";
    rdf:type rdf:Property;
    rdfs:label "vehicleEntranceCount";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:vehicleExitCount dcterms:description "Property. Model:'http://schema.org/Number'. Aggregated number of vehicle that leave the parking site in a period of time.";
    rdf:type rdf:Property;
    rdfs:label "vehicleExitCount";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:accessModified dcterms:description "Property. Model:'https://schema.org/DateTime'. Timestamp when `vehicleEntranceCount` and `vehicleExitCount` was updated. Allowed values: ISO8601";
    rdf:type rdf:Property;
    rdfs:label "accessModified";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:string.
sdm:images rdf:type rdf:Property;
    rdfs:label "images";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:anyURI.
sdm:outOfServiceSlotNumber dcterms:description "Property. Model:'https://schema.org/Number'. The number of bike racks/bike-docking slots or parking slots that are out of order and cannot be used to hire or park a bike in the bike docking station or parking site corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "outOfServiceSlotNumber";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:decimal.
sdm:parkingSiteId dcterms:description "Property. Model:'https://schema.org/Text'. The unique ID of the parking site or parking lot corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "parkingSiteId";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:string.
sdm:observationDateTime dcterms:description "Property. Model:'https://schema.org/Text'. Last reported time of observation.";
    rdf:type rdf:Property;
    rdfs:label "observationDateTime";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range xsd:dateTime.
sdm:fourWheelerSlots dcterms:description "Property. Model:'https://schema.org/Text. Four wheeler parking spot availability status in parking site corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "fourWheelerSlots";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range sdm:FourWheelerSlot.
sdm:FourWheelerSlot rdf:type rdfs:Class;
    rdfs:label "FourWheelerSlot".
sdm:availableSlotNumber dcterms:description "Property. Model:'https://schema.org/Number'. Number of parking spots available for use in the smart parking site corresponding to this observation. This must a positive number lower than or equal to the totalSpotNumber.";
    rdf:type rdf:Property;
    rdfs:label "availableSlotNumber";
    rdfs:domain sdm:FourWheelerSlot;
    rdfs:range xsd:decimal.
sdm:totalSlotNumber dcterms:description "Property. Model:'https://schema.org/Number'. The total number of spots offered by the parking site corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "totalSlotNumber";
    rdfs:domain sdm:FourWheelerSlot;
    rdfs:range xsd:decimal.
sdm:occupiedSlotNumber dcterms:description "Property. Model:'https://schema.org/Number'. Number of parking spots occupied in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.";
    rdf:type rdf:Property;
    rdfs:label "occupiedSlotNumber";
    rdfs:domain sdm:FourWheelerSlot;
    rdfs:range xsd:decimal.
sdm:unclassifiedSlots dcterms:description "Property. Model:'https://schema.org/Text. Unclassified vehicles or other vehicles parking spot availability status in parking site corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "unclassifiedSlots";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range sdm:UnclassifiedSlot.
sdm:UnclassifiedSlot rdf:type rdfs:Class;
    rdfs:label "UnclassifiedSlot".
sdm:availableSpotNumber dcterms:description "Property. Model:'https://schema.org/Number'. Number of parking spots available for use in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.";
    rdf:type rdf:Property;
    rdfs:label "availableSpotNumber";
    rdfs:domain sdm:UnclassifiedSlot;
    rdfs:range xsd:decimal.
sdm:totalSpotNumber dcterms:description "Property. Model:'https://schema.org/Number'. The total number of spots offered by the parking site corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "totalSpotNumber";
    rdfs:domain sdm:UnclassifiedSlot;
    rdfs:range xsd:decimal.
sdm:occupiedSpotNumber dcterms:description "Property. Model:'https://schema.org/Number'. Number of parking spots occupied in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.";
    rdf:type rdf:Property;
    rdfs:label "occupiedSpotNumber";
    rdfs:domain sdm:UnclassifiedSlot;
    rdfs:range xsd:decimal.
sdm:twoWheelerSlots dcterms:description "Property. Model:'https://schema.org/Text. Two wheeler parking spot availability status in parking site corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "twoWheelerSlots";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range sdm:TwoWheelerSlot.
sdm:TwoWheelerSlot rdf:type rdfs:Class;
    rdfs:label "TwoWheelerSlot".
sdm:availableSpotNumber dcterms:description "Property. Model:'https://schema.org/Number'. Number of parking spots available for use in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.";
    rdf:type rdf:Property;
    rdfs:label "availableSpotNumber";
    rdfs:domain sdm:TwoWheelerSlot;
    rdfs:range xsd:decimal.
sdm:totalSpotNumber dcterms:description "Property. Model:'https://schema.org/Number'. The total number of spots offered by the parking site corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "totalSpotNumber";
    rdfs:domain sdm:TwoWheelerSlot;
    rdfs:range xsd:decimal.
sdm:occupiedSpotNumber dcterms:description "Property. Model:'https://schema.org/Number'. Number of parking spots occupied in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.";
    rdf:type rdf:Property;
    rdfs:label "occupiedSpotNumber";
    rdfs:domain sdm:TwoWheelerSlot;
    rdfs:range xsd:decimal.
sdm:municipalityInfo dcterms:description "Property. Model:'https://schema.org/Text. Municipality information corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "municipalityInfo";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json>;
    rdfs:range sdm:MunicipalityInfo.
sdm:MunicipalityInfo rdf:type rdfs:Class;
    rdfs:label "MunicipalityInfo".
sdm:district dcterms:description "Property. Model:'https://schema.org/Text'. District name corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "district";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:ulbName dcterms:description "Property. Model:'https://schema.org/Text'. Name of the Urban Local Body corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "ulbName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:cityId dcterms:description "Property. Model:'https://schema.org/Text'. City ID corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "cityId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:wardId dcterms:description "Property. Model:'https://schema.org/Text'. Ward ID corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "wardId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:stateName dcterms:description "Property. Model:'https://schema.org/Text'. Name of the state corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "stateName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:cityName dcterms:description "Property. Model:'https://schema.org/Text'. City name corresponding to this observation";
    rdf:type rdf:Property;
    rdfs:label "cityName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:zoneName dcterms:description "Property. Model:'https://schema.org/Text'. Zone name corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "zoneName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:zoneId dcterms:description "Property. Model:'https://schema.org/Text'. Zone ID corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "zoneId";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:wardName dcterms:description "Property. Model:'https://schema.org/Text'. Ward name corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "wardName";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:string.
sdm:wardNum dcterms:description "Property. Model:'https://schema.org/Number'. Ward number corresponding to this observation.";
    rdf:type rdf:Property;
    rdfs:label "wardNum";
    rdfs:domain sdm:MunicipalityInfo;
    rdfs:range xsd:decimal.
