@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json> dcterms:title "InverterDevice schema";
    dcterms:description "The data model is intended to describe the mechanical, electrical characteristics of an Inverter according to *DC - Direct Current Information* supplied as input and *AC - Alternating Current Information*  returned as output. *Remark*: This Data Model can be used directly as a main entity to describe the device [Inverter] or as a sub-entity of the Data Model {DEVICE] using a reference by the [refDevice] attribute.".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be InverterDevice";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:InverterDevice)
].
sdm:InverterDevice rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "InverterDevice".
sdm:refDevice dcterms:description "Relationship. Reference to the Main Entity [Device](https://github.com/smart-data-models/dataModel.Device/blob/master/Device/doc/spec.md) if used as second link.";
    rdf:type rdf:Property;
    rdfs:label "refDevice";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:refPointOfInterest dcterms:description "Relationship. Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the observation.";
    rdf:type rdf:Property;
    rdfs:label "refPointOfInterest";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:dateLastReported dcterms:description "Property. A timestamps which denotes the last time when the device successfully reported data. Date and time in an ISO8601 UTCformat. Model:'https://schema.org/DateTime'";
    rdf:type rdf:Property;
    rdfs:label "dateLastReported";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:dateTime.
sdm:brandName dcterms:description "Property. Brand Name of the item. Model:'https://schema.org/brand'";
    rdf:type rdf:Property;
    rdfs:label "brandName";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:string.
sdm:modelName dcterms:description "Property. Model name of the item. Model:'https://schema.org/model'";
    rdf:type rdf:Property;
    rdfs:label "modelName";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:string.
sdm:manufacturerName dcterms:description "Property. Manufacturer Name of the item. Model:'https://schema.org/manufacturer'";
    rdf:type rdf:Property;
    rdfs:label "manufacturerName";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:string.
sdm:serialNumber dcterms:description "Property. Serial numbers of the item. Model:'https://schema.org/brand'";
    rdf:type rdf:Property;
    rdfs:label "serialNumber";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:string.
sdm:application rdf:type rdf:Property;
    rdfs:label "application";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:Application rdf:type skos:ConceptScheme.
sdm:application rdfs:range [
  owl:oneOf (sdm:electricMobility sdm:energyStorage sdm:emergencyStorage sdm:lighting sdm:industrialStorage sdm:houseHoldStorage sdm:robotics sdm:production sdm:other)
].
sdm:electricMobility rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "electricMobility".
sdm:energyStorage rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "energyStorage".
sdm:emergencyStorage rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "emergencyStorage".
sdm:lighting rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "lighting".
sdm:industrialStorage rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "industrialStorage".
sdm:houseHoldStorage rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "houseHoldStorage".
sdm:robotics rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "robotics".
sdm:production rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "production".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:Application;
    rdfs:label "other".
sdm:typeOfUse dcterms:description "Property. Accepted use regarding its positioning in an indoor / outdoor environment.. Enum:'indoor, outdoor, mixed, other'";
    rdf:type rdf:Property;
    rdfs:label "typeOfUse";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:TypeOfUse rdf:type skos:ConceptScheme.
sdm:typeOfUse rdfs:range [
  owl:oneOf (sdm:indoor sdm:outdoor sdm:mixed sdm:other)
].
sdm:indoor rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "indoor".
sdm:outdoor rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "outdoor".
sdm:mixed rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "mixed".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:TypeOfUse;
    rdfs:label "other".
sdm:installationMode dcterms:description "Property. Positioning of the device in relation to a ground reference system. A unique value. Enum:'aerial, ground, pole, roofing, underGround, wall, other'";
    rdf:type rdf:Property;
    rdfs:label "installationMode";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:InstallationMode rdf:type skos:ConceptScheme.
sdm:installationMode rdfs:range [
  owl:oneOf (sdm:aerial sdm:ground sdm:pole sdm:roofing sdm:underGround sdm:wall sdm:other)
].
sdm:aerial rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "aerial".
sdm:ground rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "ground".
sdm:pole rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "pole".
sdm:roofing rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "roofing".
sdm:underGround rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "underGround".
sdm:wall rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "wall".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:InstallationMode;
    rdfs:label "other".
sdm:installationCondition rdf:type rdf:Property;
    rdfs:label "installationCondition";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:InstallationCondition rdf:type skos:ConceptScheme.
sdm:installationCondition rdfs:range [
  owl:oneOf (sdm:extremeHeat sdm:extremeCold sdm:extremeHumidity sdm:extremeClimate sdm:desert sdm:sand sdm:marine sdm:saline sdm:dust sdm:seismic sdm:other)
].
sdm:extremeHeat rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeHeat".
sdm:extremeCold rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeCold".
sdm:extremeHumidity rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeHumidity".
sdm:extremeClimate rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "extremeClimate".
sdm:desert rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "desert".
sdm:sand rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "sand".
sdm:marine rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "marine".
sdm:saline rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "saline".
sdm:dust rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "dust".
sdm:seismic rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "seismic".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:InstallationCondition;
    rdfs:label "other".
sdm:possibilityOfUse dcterms:description "Property. Possibility of use. Enum:'mixed, mobile, stationary, other'";
    rdf:type rdf:Property;
    rdfs:label "possibilityOfUse";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:PossibilityOfUse rdf:type skos:ConceptScheme.
sdm:possibilityOfUse rdfs:range [
  owl:oneOf (sdm:mixed sdm:mobile sdm:stationary sdm:other)
].
sdm:mixed rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "mixed".
sdm:mobile rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "mobile".
sdm:stationary rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "stationary".
sdm:other rdf:type skos:Concept;
    skos:inScheme sdm:PossibilityOfUse;
    rdfs:label "other".
sdm:documentation dcterms:description "Property. Technical Documentation (Installation / maintenance / used). Model:'https://schema.org/URL'";
    rdf:type rdf:Property;
    rdfs:label "documentation";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:anyURI.
sdm:phaseType dcterms:description "Property. Type of Phase. A unique value. Enum:'singlePhase,threePhase'";
    rdf:type rdf:Property;
    rdfs:label "phaseType";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:PhaseType rdf:type skos:ConceptScheme.
sdm:phaseType rdfs:range [
  owl:oneOf (sdm:singlePhase sdm:threePhase)
].
sdm:singlePhase rdf:type skos:Concept;
    skos:inScheme sdm:PhaseType;
    rdfs:label "singlePhase".
sdm:threePhase rdf:type skos:Concept;
    skos:inScheme sdm:PhaseType;
    rdfs:label "threePhase".
sdm:supplyPhaseNb dcterms:description "Property. Number of power supply phases. Model:'https://schema.org/Number'";
    rdf:type rdf:Property;
    rdfs:label "supplyPhaseNb";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:dimension dcterms:description "Property. External dimension of a Panel. The format is structured by a sub-property of 3 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CMT** represents Centimeter. Units:'Centimeters'";
    rdf:type rdf:Property;
    rdfs:label "dimension";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:Dimension.
sdm:Dimension rdf:type rdfs:Class;
    rdfs:label "Dimension".
sdm:length rdf:type rdf:Property;
    rdfs:label "length";
    rdfs:domain sdm:Dimension;
    rdfs:range xsd:decimal.
sdm:height rdf:type rdf:Property;
    rdfs:label "height";
    rdfs:domain sdm:Dimension;
    rdfs:range xsd:decimal.
sdm:depth rdf:type rdf:Property;
    rdfs:label "depth";
    rdfs:domain sdm:Dimension;
    rdfs:range xsd:decimal.
sdm:weight dcterms:description "Property. Weight. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **KGM** represents Kilogram. Units:'Kilograms'. Model:'https://schema.org/Number'";
    rdf:type rdf:Property;
    rdfs:label "weight";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:protectionIP dcterms:description "Property. IP '*Ingress Protection*' for the Junction Box. This is the level classifies and rates the degree of protection provided by mechanical casings and electrical enclosures against intrusion, dust, accidental contact, and water according to International Electrotechnical Commission standard (EN 60-529). - First digit: Solid particle protection (Single numeral: 0–6 or 'X'). - Second digit: Liquid ingress protection (Single numeral: 0–9 or 'X' ).- Third digit: Personal Protection  against access to dangerous parts (optional additional letter).- Fourth digit: Other protections (optional additional letter).";
    rdf:type rdf:Property;
    rdfs:label "protectionIP";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:string.
sdm:protectionIK dcterms:description "Property. IK '*Mecanic Protection*' level relating to numeric classification for the degrees of protection provided by enclosures for electrical equipment against external mechanical impacts, according to International Electro technical Commission standard (EN 62-262). - IK varies from 0 (minimum resistance) to 10 (maximum resistance) which represents an Impact Energy (Unit Joule). Model:'https://schema.org/Number'";
    rdf:type rdf:Property;
    rdfs:label "protectionIK";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:protectionClassSLK dcterms:description "Property. Protection class (SKL). - 0 : main insulation without earth connection. - 1 : main insulation and additional insulation (earth terminal). - 2 : double or reinforced insulation (equivalent to twice the main insulation) without accessible metal part. - 3 : operating in very low safety voltage (SELV) (50V maximum).";
    rdf:type rdf:Property;
    rdfs:label "protectionClassSLK";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:ProtectionClassSLK rdf:type skos:ConceptScheme.
sdm:protectionClassSLK rdfs:range [
  owl:oneOf (sdm:0 sdm:1 sdm:2 sdm:3)
].
sdm:0 rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionClassSLK;
    rdfs:label "0".
sdm:1 rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionClassSLK;
    rdfs:label "1".
sdm:2 rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionClassSLK;
    rdfs:label "2".
sdm:3 rdf:type skos:Concept;
    skos:inScheme sdm:ProtectionClassSLK;
    rdfs:label "3".
sdm:overVoltageCategory dcterms:description "Property. Over voltage category. - I : connection to circuits with transient over voltages at an appropriate low level. - II : main insulation and additional insulation (earth terminal). - III : fixed installations with reliability and availability making subject to specific specifications. - IV : materials at the origin of the electrical installation such as electric meters and main materials over current protection.";
    rdf:type rdf:Property;
    rdfs:label "overVoltageCategory";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:OverVoltageCategory rdf:type skos:ConceptScheme.
sdm:overVoltageCategory rdfs:range [
  owl:oneOf (sdm:I sdm:II sdm:III sdm:IV)
].
sdm:I rdf:type skos:Concept;
    skos:inScheme sdm:OverVoltageCategory;
    rdfs:label "I".
sdm:II rdf:type skos:Concept;
    skos:inScheme sdm:OverVoltageCategory;
    rdfs:label "II".
sdm:III rdf:type skos:Concept;
    skos:inScheme sdm:OverVoltageCategory;
    rdfs:label "III".
sdm:IV rdf:type skos:Concept;
    skos:inScheme sdm:OverVoltageCategory;
    rdfs:label "IV".
sdm:operatingTemperature dcterms:description "Property. Ambient operating temperature range. This is the minimum and maximum resistance to cold and heat. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CEL** represents Degree Celsius.";
    rdf:type rdf:Property;
    rdfs:label "operatingTemperature";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingTemperature.
sdm:OperatingTemperature rdf:type rdfs:Class;
    rdfs:label "OperatingTemperature".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingTemperature;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingTemperature;
    rdfs:range xsd:decimal.
sdm:operatingAirHumidity dcterms:description "Property. Ambient operating Air Humidity range. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent.";
    rdf:type rdf:Property;
    rdfs:label "operatingAirHumidity";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingAirHumidity.
sdm:OperatingAirHumidity rdf:type rdfs:Class;
    rdfs:label "OperatingAirHumidity".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingAirHumidity;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingAirHumidity;
    rdfs:range xsd:decimal.
sdm:nominalPowerDC dcterms:description "Property. Nominal Power or Maximum Power factor for cos phi=1. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **WTT** represents Watt. Model:'https://schema.org/Number'. Units:'Watt'";
    rdf:type rdf:Property;
    rdfs:label "nominalPowerDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nominalVoltageDC dcterms:description "Property. Nominal voltage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'";
    rdf:type rdf:Property;
    rdfs:label "nominalVoltageDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nominalAmpereDC dcterms:description "Property. Nominal Amperage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'";
    rdf:type rdf:Property;
    rdfs:label "nominalAmpereDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nominalFrequencyDC dcterms:description "Property.  Nominal Frequency. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Model:'https://schema.org/Number'. Units:'Hertz'";
    rdf:type rdf:Property;
    rdfs:label "nominalFrequencyDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:operatingVoltageDC dcterms:description "Property. Minimum and Maximum voltage allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt.. Model:'https://schema.org/Number'. Units:'Volt'";
    rdf:type rdf:Property;
    rdfs:label "operatingVoltageDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingVoltageDC.
sdm:OperatingVoltageDC rdf:type rdfs:Class;
    rdfs:label "OperatingVoltageDC".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingVoltageDC;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingVoltageDC;
    rdfs:range xsd:decimal.
sdm:operatingAmpereDC dcterms:description "Property. Minimum and Maximum Ampere allowed.. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'";
    rdf:type rdf:Property;
    rdfs:label "operatingAmpereDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingAmpereDC.
sdm:OperatingAmpereDC rdf:type rdfs:Class;
    rdfs:label "OperatingAmpereDC".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingAmpereDC;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingAmpereDC;
    rdfs:range xsd:decimal.
sdm:operatingFrequencyDC dcterms:description "Property. Minimum and Maximum Frequency allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Model:'https://schema.org/Number'. Units:'Hertz'";
    rdf:type rdf:Property;
    rdfs:label "operatingFrequencyDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingFrequencyDC.
sdm:OperatingFrequencyDC rdf:type rdfs:Class;
    rdfs:label "OperatingFrequencyDC".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingFrequencyDC;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingFrequencyDC;
    rdfs:range xsd:decimal.
sdm:mPPTPVVoltageDC dcterms:description "Property. Minimum and Maximum Photo-voltaic voltage range, MPPT allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'";
    rdf:type rdf:Property;
    rdfs:label "mPPTPVVoltageDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:MPPTPVVoltageDC.
sdm:MPPTPVVoltageDC rdf:type rdfs:Class;
    rdfs:label "MPPTPVVoltageDC".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:MPPTPVVoltageDC;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:MPPTPVVoltageDC;
    rdfs:range xsd:decimal.
sdm:startingVoltageDC dcterms:description "Property. Starting voltage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'";
    rdf:type rdf:Property;
    rdfs:label "startingVoltageDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nbMPPTrackersDC dcterms:description "Property. Number of MPP trackers. Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "nbMPPTrackersDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nbInputParallelDC dcterms:description "Property. Maximum Number of inputs (in parallel). Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "nbInputParallelDC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:string.
sdm:maxInputCurrentParallelAssembly dcterms:description "Property. Max. Current Input with an Parallel Assembly. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'";
    rdf:type rdf:Property;
    rdfs:label "maxInputCurrentParallelAssembly";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nominalPowerAC dcterms:description "Property. Nominal Power . The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **WTT** represents Watt. Model:'https://schema.org/Number'. Units:'Watt'";
    rdf:type rdf:Property;
    rdfs:label "nominalPowerAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:maxOutputPowerAC dcterms:description "Property. Maximum Power or Apparent Power. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **D46** represents Volt Ampere. Model:'https://schema.org/Number'. Units:'Volt Ampere'";
    rdf:type rdf:Property;
    rdfs:label "maxOutputPowerAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nominalVoltageAC dcterms:description "Property. Nominal battery voltage *(Code U)*. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'";
    rdf:type rdf:Property;
    rdfs:label "nominalVoltageAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nominalAmpereAC dcterms:description "Property. Nominal Amperage *(Code I)*. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'";
    rdf:type rdf:Property;
    rdfs:label "nominalAmpereAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:nominalFrequencyAC dcterms:description "Property. Nominal Frequency. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Model:'https://schema.org/Number'. Units:'Hertz'";
    rdf:type rdf:Property;
    rdfs:label "nominalFrequencyAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:operatingVoltageAC dcterms:description "Property. Minimum and Maximum voltage allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Units:'Volt'. Model:'http://schema.org/StructuredValue'";
    rdf:type rdf:Property;
    rdfs:label "operatingVoltageAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingVoltageAC.
sdm:OperatingVoltageAC rdf:type rdfs:Class;
    rdfs:label "OperatingVoltageAC".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingVoltageAC;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingVoltageAC;
    rdfs:range xsd:decimal.
sdm:operatingAmpereAC dcterms:description "Property. Minimum and Maximum Ampere allowed.. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'http://schema.org/Number'. Units:'Ampere'";
    rdf:type rdf:Property;
    rdfs:label "operatingAmpereAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingAmpereAC.
sdm:OperatingAmpereAC rdf:type rdfs:Class;
    rdfs:label "OperatingAmpereAC".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingAmpereAC;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingAmpereAC;
    rdfs:range xsd:decimal.
sdm:operatingFrequencyAC dcterms:description "Property. Minimum and Maximum Frequency allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Units:'Volt'. Model:'http://schema.org/StructuredValue'. Units:'Hertz'";
    rdf:type rdf:Property;
    rdfs:label "operatingFrequencyAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:OperatingFrequencyAC.
sdm:OperatingFrequencyAC rdf:type rdfs:Class;
    rdfs:label "OperatingFrequencyAC".
sdm:min rdf:type rdf:Property;
    rdfs:label "min";
    rdfs:domain sdm:OperatingFrequencyAC;
    rdfs:range xsd:decimal.
sdm:max rdf:type rdf:Property;
    rdfs:label "max";
    rdfs:domain sdm:OperatingFrequencyAC;
    rdfs:range xsd:decimal.
sdm:powerFactorAC dcterms:description "Property. Power factor for cos phi. A value between [0,1] Units:'Volt'. Model:'http://schema.org/Number'";
    rdf:type rdf:Property;
    rdfs:label "powerFactorAC";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:moduleYieldRate dcterms:description "Property. Yield Rate of the Device. The format is structured by a sub-property of 2 items (European Standard - Manufacturer Standard). The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent. Model:'http://schema.org/StructuredValue'";
    rdf:type rdf:Property;
    rdfs:label "moduleYieldRate";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range sdm:ModuleYieldRate.
sdm:ModuleYieldRate rdf:type rdfs:Class;
    rdfs:label "ModuleYieldRate".
sdm:euro rdf:type rdf:Property;
    rdfs:label "euro";
    rdfs:domain sdm:ModuleYieldRate;
    rdfs:range xsd:decimal.
sdm:eta rdf:type rdf:Property;
    rdfs:label "eta";
    rdfs:domain sdm:ModuleYieldRate;
    rdfs:range xsd:decimal.
sdm:noiseLevel dcterms:description "Property. Sound Power level of the Device. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **2N** represents Decibel. Units:'dB'. Model:'http://schema.org/Number'";
    rdf:type rdf:Property;
    rdfs:label "noiseLevel";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:self-consumption dcterms:description "Property. Self-consumption during nigth. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes).  For instance, **WTT** represents Watt. Units:'Watt'. Model:'http://schema.org/Number'";
    rdf:type rdf:Property;
    rdfs:label "self-consumption";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:decimal.
sdm:topology dcterms:description "Property. Description of the topology of the installation.";
    rdf:type rdf:Property;
    rdfs:label "topology";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>;
    rdfs:range xsd:string.
sdm:coolingSystem dcterms:description "Property.  Cooling System of the Device. Enum:'Convection, OptiCool, Regulated-fan, Other'";
    rdf:type rdf:Property;
    rdfs:label "coolingSystem";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:CoolingSystem rdf:type skos:ConceptScheme.
sdm:coolingSystem rdfs:range [
  owl:oneOf (sdm:Convection sdm:OptiCool sdm:Regulated-fan sdm:Other)
].
sdm:Convection rdf:type skos:Concept;
    skos:inScheme sdm:CoolingSystem;
    rdfs:label "Convection".
sdm:OptiCool rdf:type skos:Concept;
    skos:inScheme sdm:CoolingSystem;
    rdfs:label "OptiCool".
sdm:Regulated-fan rdf:type skos:Concept;
    skos:inScheme sdm:CoolingSystem;
    rdfs:label "Regulated-fan".
sdm:Other rdf:type skos:Concept;
    skos:inScheme sdm:CoolingSystem;
    rdfs:label "Other".
sdm:inverterStatus rdf:type rdf:Property;
    rdfs:label "inverterStatus";
    rdfs:domain <https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json>.
sdm:InverterStatus rdf:type skos:ConceptScheme.
sdm:inverterStatus rdfs:range [
  owl:oneOf (sdm:00-OnSector <sdm:01-PowerFailure/OnBattery> sdm:02-LossCommunication sdm:03-BatteryFault sdm:04-SystemShutDown sdm:05-TensionDip sdm:06-OverVoltage sdm:07-VoltageDrop sdm:08-VoltageIncrease sdm:09-LineNoise sdm:10-FrequencyVariation sdm:11-TransientDistortion sdm:12-HarmonicDistortion)
].
sdm:00-OnSector rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "00-OnSector".
<sdm:01-PowerFailure/OnBattery> rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "01-PowerFailure/OnBattery".
sdm:02-LossCommunication rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "02-LossCommunication".
sdm:03-BatteryFault rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "03-BatteryFault".
sdm:04-SystemShutDown rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "04-SystemShutDown".
sdm:05-TensionDip rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "05-TensionDip".
sdm:06-OverVoltage rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "06-OverVoltage".
sdm:07-VoltageDrop rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "07-VoltageDrop".
sdm:08-VoltageIncrease rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "08-VoltageIncrease".
sdm:09-LineNoise rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "09-LineNoise".
sdm:10-FrequencyVariation rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "10-FrequencyVariation".
sdm:11-TransientDistortion rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "11-TransientDistortion".
sdm:12-HarmonicDistortion rdf:type skos:Concept;
    skos:inScheme sdm:InverterStatus;
    rdfs:label "12-HarmonicDistortion".
