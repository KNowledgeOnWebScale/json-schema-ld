@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json> dcterms:title "Boat Place Pricing schema";
    dcterms:description "The purpose of the data model is to provide information on the pricing of mooring rings by category (length / Width). The information received relates only to pleasure boats and excludes commercial and passenger transport boats. The information on the Spot categories for boats is taken from the ISO 8666 standard.".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be BoatPlacePricing";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:BoatPlacesPricing)
].
sdm:BoatPlacesPricing rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "BoatPlacesPricing".
sdm:dateLastReported dcterms:description "Property. Model:'https://schema.org/DateTime'. A timestamp which denotes the last time when the device successfully reported data. The date and time of this observation in ISO8601 UTCformat";
    rdf:type rdf:Property;
    rdfs:label "dateLastReported";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range xsd:dateTime.
sdm:refSeaPort dcterms:description "Relationship. Model:'https://schema.org/URL'. Reference to the entity [Seaport](https://github.com/smart-data-models/dataModel.Port/blob/master/Seaport/doc/spec.md) to use as main link";
    rdf:type rdf:Property;
    rdfs:label "refSeaPort";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>.
sdm:refPointOfInterest dcterms:description "Relationship. Model:'https://schema.org/URL'. Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the Repository";
    rdf:type rdf:Property;
    rdfs:label "refPointOfInterest";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>.
sdm:spotCategoryRange rdf:type rdf:Property;
    rdfs:label "spotCategoryRange";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>.
sdm:SpotCategoryRange rdf:type skos:ConceptScheme.
sdm:spotCategoryRange rdfs:range [
  owl:oneOf (sdm:A sdm:B sdm:C sdm:D sdm:E sdm:F sdm:G sdm:H sdm:I sdm:J sdm:K sdm:L sdm:M sdm:N sdm:O sdm:P sdm:Q sdm:R sdm:S sdm:T1 sdm:T2 sdm:U sdm:V sdm:W sdm:X sdm:Y sdm:Z sdm:Z01 sdm:Z02 sdm:Z03 sdm:Z04 sdm:Z05 sdm:Z06 sdm:Z07 sdm:Z08 sdm:Z08 sdm:Z09 sdm:Z10 sdm:Z11 sdm:Z12 sdm:Z13 sdm:Z14 sdm:Z15 sdm:Z16 sdm:Z17)
].
sdm:A rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "A".
sdm:B rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "B".
sdm:C rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "C".
sdm:D rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "D".
sdm:E rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "E".
sdm:F rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "F".
sdm:G rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "G".
sdm:H rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "H".
sdm:I rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "I".
sdm:J rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "J".
sdm:K rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "K".
sdm:L rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "L".
sdm:M rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "M".
sdm:N rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "N".
sdm:O rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "O".
sdm:P rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "P".
sdm:Q rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Q".
sdm:R rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "R".
sdm:S rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "S".
sdm:T1 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "T1".
sdm:T2 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "T2".
sdm:U rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "U".
sdm:V rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "V".
sdm:W rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "W".
sdm:X rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "X".
sdm:Y rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Y".
sdm:Z rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z".
sdm:Z01 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z01".
sdm:Z02 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z02".
sdm:Z03 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z03".
sdm:Z04 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z04".
sdm:Z05 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z05".
sdm:Z06 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z06".
sdm:Z07 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z07".
sdm:Z08 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z08";
    rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z08".
sdm:Z09 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z09".
sdm:Z10 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z10".
sdm:Z11 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z11".
sdm:Z12 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z12".
sdm:Z13 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z13".
sdm:Z14 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z14".
sdm:Z15 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z15".
sdm:Z16 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z16".
sdm:Z17 rdf:type skos:Concept;
    skos:inScheme sdm:SpotCategoryRange;
    rdfs:label "Z17".
sdm:minLength dcterms:description "Property. Model:'https://schema.org/number'. Minimum length allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . Units:'metres'";
    rdf:type rdf:Property;
    rdfs:label "minLength";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range xsd:decimal.
sdm:maxLength dcterms:description "Property. Model:'https://schema.org/number'. Maximum length allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . Units:'metres'";
    rdf:type rdf:Property;
    rdfs:label "maxLength";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range xsd:decimal.
sdm:maxWidth dcterms:description "Property. Model:'https://schema.org/width'. Maximum width allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . Units:'metres'";
    rdf:type rdf:Property;
    rdfs:label "maxWidth";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range xsd:decimal.
sdm:maxDraft dcterms:description "Property. Model:'https://schema.org/Number'. Maximum draft allowed to access the spot. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) . Units:'metres'";
    rdf:type rdf:Property;
    rdfs:label "maxDraft";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range xsd:decimal.
sdm:validFrom dcterms:description "Property. Model:'https://schema.org/DateTime'. Start date and time of the pricing rules.";
    rdf:type rdf:Property;
    rdfs:label "validFrom";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range xsd:dateTime.
sdm:validThrough dcterms:description "Property. Model:'https://schema.org/DateTime'. End date and time of the pricing rules.";
    rdf:type rdf:Property;
    rdfs:label "validThrough";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range xsd:dateTime.
sdm:period dcterms:description "Property. Model:'https://schema.org/DateTime'. Type of period defined the date From and Through: A free text or a unique value of the different combination allowed 'season / offSeason' - 'summer / winter' - 'low / medium / high'. enum:'high, low, medium, offSeason, season, summer, winter'";
    rdf:type rdf:Property;
    rdfs:label "period";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>.
sdm:Period rdf:type skos:ConceptScheme.
sdm:period rdfs:range [
  owl:oneOf (sdm:high sdm:low sdm:medium sdm:offSeason sdm:season sdm:summer sdm:winter)
].
sdm:high rdf:type skos:Concept;
    skos:inScheme sdm:Period;
    rdfs:label "high".
sdm:low rdf:type skos:Concept;
    skos:inScheme sdm:Period;
    rdfs:label "low".
sdm:medium rdf:type skos:Concept;
    skos:inScheme sdm:Period;
    rdfs:label "medium".
sdm:offSeason rdf:type skos:Concept;
    skos:inScheme sdm:Period;
    rdfs:label "offSeason".
sdm:season rdf:type skos:Concept;
    skos:inScheme sdm:Period;
    rdfs:label "season".
sdm:summer rdf:type skos:Concept;
    skos:inScheme sdm:Period;
    rdfs:label "summer".
sdm:winter rdf:type skos:Concept;
    skos:inScheme sdm:Period;
    rdfs:label "winter".
sdm:passage dcterms:description "Property. Model:'https://schema.org/StructuredValue'. Ticket price of the place for passing boats for this category / period. A structured value with 3 subproperties where each items is a string in the format `key` : `price` in Euro €";
    rdf:type rdf:Property;
    rdfs:label "passage";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range sdm:Passage.
sdm:Passage rdf:type rdfs:Class;
    rdfs:label "Passage".
sdm:day rdf:type rdf:Property;
    rdfs:label "day";
    rdfs:domain sdm:Passage;
    rdfs:range xsd:decimal.
sdm:week rdf:type rdf:Property;
    rdfs:label "week";
    rdfs:domain sdm:Passage;
    rdfs:range xsd:decimal.
sdm:month rdf:type rdf:Property;
    rdfs:label "month";
    rdfs:domain sdm:Passage;
    rdfs:range xsd:decimal.
sdm:resident dcterms:description "Property. Model:'https://schema.org/StructuredValue'. Ticket price of the place for resident boats for this category / period. A structured value with 2 subproperties where each items is a string in the format `key` : `price` in Euro €";
    rdf:type rdf:Property;
    rdfs:label "resident";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range sdm:Resident.
sdm:Resident rdf:type rdfs:Class;
    rdfs:label "Resident".
sdm:month rdf:type rdf:Property;
    rdfs:label "month";
    rdfs:domain sdm:Resident;
    rdfs:range xsd:decimal.
sdm:annual rdf:type rdf:Property;
    rdfs:label "annual";
    rdfs:domain sdm:Resident;
    rdfs:range xsd:decimal.
sdm:wintering dcterms:description "Property. Model:'https://schema.org/StructuredValue'. Ticket price of the place for wintering boats for this category / period. A structured value with 3 subproperties where each items is a string in the format `key` : `price` in Euro €";
    rdf:type rdf:Property;
    rdfs:label "wintering";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range sdm:Wintering.
sdm:Wintering rdf:type rdfs:Class;
    rdfs:label "Wintering".
sdm:day rdf:type rdf:Property;
    rdfs:label "day";
    rdfs:domain sdm:Wintering;
    rdfs:range xsd:decimal.
sdm:week rdf:type rdf:Property;
    rdfs:label "week";
    rdfs:domain sdm:Wintering;
    rdfs:range xsd:decimal.
sdm:month rdf:type rdf:Property;
    rdfs:label "month";
    rdfs:domain sdm:Wintering;
    rdfs:range xsd:decimal.
sdm:fairing dcterms:description "Property. Model:'https://schema.org/StructuredValue'. Ticket price of the place for fairing boats for this category / period. A structured value with 3 subproperties where each items is a string in the format `key` : `price` in Euro €";
    rdf:type rdf:Property;
    rdfs:label "fairing";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Ports/BoatPlacePricing/schema.json>;
    rdfs:range sdm:Fairing.
sdm:Fairing rdf:type rdfs:Class;
    rdfs:label "Fairing".
sdm:day rdf:type rdf:Property;
    rdfs:label "day";
    rdfs:domain sdm:Fairing;
    rdfs:range xsd:decimal.
sdm:week rdf:type rdf:Property;
    rdfs:label "week";
    rdfs:domain sdm:Fairing;
    rdfs:range xsd:decimal.
sdm:month rdf:type rdf:Property;
    rdfs:label "month";
    rdfs:domain sdm:Fairing;
    rdfs:range xsd:decimal.
