@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.UnmannedAerialVehicle/UnmannedAerialVehicleTMSFlightMessageAgent/schema.json> dcterms:title "Smart Data models - Unmanned Aerial Vehicle TMS Flight Message Agent schema";
    dcterms:description "This entity contains a harmonised description of a generic UAV UTM Flight Message Agent that is designed to subscribe to the Global UTM Association protocol message according to a specific UAV entity. This entity supports the functionality of a service provider to confirm the validity of UTM Flight Message generated by UTM Flight Message Entity. The service provider can include their own Flight Control Policy to the original UTM Flight Message and forward this to a UAVTMS entity.".
sdm:type dcterms:description "Property. NGSI Entity identifier. It has to be UnmannedAerialVehicleTMSFlightMessageAgent";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UnmannedAerialVehicle/UnmannedAerialVehicleTMSFlightMessageAgent/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:UnmannedAerialVehicleTMSFlightMessageAgent)
].
sdm:UnmannedAerialVehicleTMSFlightMessageAgent rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "UnmannedAerialVehicleTMSFlightMessageAgent".
sdm:unmannedAerialVehicle dcterms:description "Relationship. Reference to the UAV entity to which this UAVUTMFlightMessageAgent relates.";
    rdf:type rdf:Property;
    rdfs:label "unmannedAerialVehicle";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UnmannedAerialVehicle/UnmannedAerialVehicleTMSFlightMessageAgent/schema.json>.
sdm:observedAt dcterms:description "Property. Indicates the date/time of the UAVUTMFlightMessageAgent record.";
    rdf:type rdf:Property;
    rdfs:label "observedAt";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UnmannedAerialVehicle/UnmannedAerialVehicleTMSFlightMessageAgent/schema.json>;
    rdfs:range xsd:dateTime.
sdm:originatedByUnmannedAerialVehicle dcterms:description "Property. A logical indicator of source of the message. True indicates it is the UAV itself, false indicates that it is a different source, a listening station software application or a different UAV.";
    rdf:type rdf:Property;
    rdfs:label "originatedByUnmannedAerialVehicle";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UnmannedAerialVehicle/UnmannedAerialVehicleTMSFlightMessageAgent/schema.json>;
    rdfs:range xsd:boolean.
sdm:originator dcterms:description "Relationship. Refers to a third party UAV instance or other entity (e.g. listening station) that reported the information in the case the message was not directly originated by the UAV.";
    rdf:type rdf:Property;
    rdfs:label "originator";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UnmannedAerialVehicle/UnmannedAerialVehicleTMSFlightMessageAgent/schema.json>.
sdm:flightMessage dcterms:description "Property. A flight message describing the current flight status encoded as a Global UTM Message encoded as a JSON object. https://bitbucket.org/global_utm/flight-declaration-protocol";
    rdf:type rdf:Property;
    rdfs:label "flightMessage";
    rdfs:domain <https://smart-data-models.github.io/dataModel.UnmannedAerialVehicle/UnmannedAerialVehicleTMSFlightMessageAgent/schema.json>;
    rdfs:range sdm:FlightMessage.
sdm:FlightMessage rdf:type rdfs:Class;
    rdfs:label "FlightMessage".
sdm:flightId rdf:type rdf:Property;
    rdfs:label "flightId";
    rdfs:domain sdm:FlightMessage;
    rdfs:range xsd:string.
sdm:sequenceNumber rdf:type rdf:Property;
    rdfs:label "sequenceNumber";
    rdfs:domain sdm:FlightMessage;
    rdfs:range xsd:decimal.
sdm:flightDeclaration rdf:type rdf:Property;
    rdfs:label "flightDeclaration";
    rdfs:domain sdm:FlightMessage;
    rdfs:range sdm:FlightDeclaration.
sdm:FlightDeclaration rdf:type rdfs:Class;
    rdfs:label "FlightDeclaration".
sdm:parts rdf:type rdf:Property;
    rdfs:label "parts";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:string.
sdm:purpose rdf:type rdf:Property;
    rdfs:label "purpose";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:string.
sdm:expectTelemetry rdf:type rdf:Property;
    rdfs:label "expectTelemetry";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:boolean.
sdm:originatingParty rdf:type rdf:Property;
    rdfs:label "originatingParty";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:string.
sdm:contactUrl rdf:type rdf:Property;
    rdfs:label "contactUrl";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:anyURI.
sdm:operationMode rdf:type rdf:Property;
    rdfs:label "operationMode";
    rdfs:domain sdm:FlightDeclaration.
sdm:OperationMode rdf:type skos:ConceptScheme.
sdm:operationMode rdfs:range [
  owl:oneOf (sdm:vlos sdm:evlos sdm:bvlos sdm:automated)
].
sdm:vlos rdf:type skos:Concept;
    skos:inScheme sdm:OperationMode;
    rdfs:label "vlos".
sdm:evlos rdf:type skos:Concept;
    skos:inScheme sdm:OperationMode;
    rdfs:label "evlos".
sdm:bvlos rdf:type skos:Concept;
    skos:inScheme sdm:OperationMode;
    rdfs:label "bvlos".
sdm:automated rdf:type skos:Concept;
    skos:inScheme sdm:OperationMode;
    rdfs:label "automated".
sdm:idents rdf:type rdf:Property;
    rdfs:label "idents";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:string.
sdm:actualTakeOffTime rdf:type rdf:Property;
    rdfs:label "actualTakeOffTime";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:dateTime.
sdm:actualLandingTime rdf:type rdf:Property;
    rdfs:label "actualLandingTime";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:dateTime.
sdm:version rdf:type rdf:Property;
    rdfs:label "version";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:string.
sdm:validationResult dcterms:description "Property. A logical indicator of validation of the message. True indicates it is the validation is confirmed, false indicates that the validation confirmation fails.";
    rdf:type rdf:Property;
    rdfs:label "validationResult";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:boolean.
sdm:flightControlPolicy dcterms:description "Property. Indicates the flight control policy generated by the service provider. This data could be included as a text value or referenced by a URI (URL/URN) to a policy defined in JSON or XML format.";
    rdf:type rdf:Property;
    rdfs:label "flightControlPolicy";
    rdfs:domain sdm:FlightDeclaration;
    rdfs:range xsd:string.
