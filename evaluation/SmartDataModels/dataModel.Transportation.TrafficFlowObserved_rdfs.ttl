@prefix schema: <https://schema.org/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix jsonsc: <https://www.w3.org/2019/wot/json-schema#>.
@prefix jsonsc-ld: <http://w3id.org/jsonsc-ld/>.
@prefix api: <http://purl.org/linked-data/api/vocab>.
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>.
@prefix mobivoc: <http://schema.mobivoc.org/#>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sdm: <https://w3id.org/sdm#>.

<https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json> dcterms:title " - Transportation / TrafficFlowObserved";
    dcterms:description "An observation of traffic flow conditions at a certain place and time.".
sdm:type dcterms:description "Property. NGSI Entity type. It has to be TrafficFlowObserved";
    rdf:type rdf:Property;
    rdfs:label "type";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>.
sdm:Type rdf:type skos:ConceptScheme.
sdm:type rdfs:range [
  owl:oneOf (sdm:TrafficFlowObserved)
].
sdm:TrafficFlowObserved rdf:type skos:Concept;
    skos:inScheme sdm:Type;
    rdfs:label "TrafficFlowObserved".
sdm:laneId dcterms:description "Property. Lane identifier. Model:'https://schema.org/Number'. Lane identification is done using the conventions defined by RoadSegment entity which are based on [OpenStreetMap](http://wiki.openstreetmap.org/wiki/Forward_%26_backward,_left_%26_right).";
    rdf:type rdf:Property;
    rdfs:label "laneId";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:integer.
sdm:refRoadSegment dcterms:description "Relationship. Concerned road segment on which the observation has been made. Model:'https://schema.org/URL'. Reference to an entity of type RoadSegment";
    rdf:type rdf:Property;
    rdfs:label "refRoadSegment";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:anyURI.
sdm:dateObserved dcterms:description "Property. The date and time of this observation in ISO8601 UTC format. It can be represented by an specific time instant or by an ISO8601 interval. As a workaround for the lack of support of Orion Context Broker for datetime intervals, it can be used two separate attributes: `dateObservedFrom`, `dateObservedTo`. [DateTime](https://schema.org/DateTime) or an ISO8601 interval represented as [Text](https://schema.org/Text). Model:'https://schema.org/DateTime'.";
    rdf:type rdf:Property;
    rdfs:label "dateObserved";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:string.
sdm:dateObservedFrom dcterms:description "Property. Observation period start date and time. See `dateObserved`. Model:'https://schema.org/Datetime'.";
    rdf:type rdf:Property;
    rdfs:label "dateObservedFrom";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:dateTime.
sdm:dateObservedTo dcterms:description "Property. Observation period end date and time. See `dateObserved`. Model:'https://schema.org/Datetime'.";
    rdf:type rdf:Property;
    rdfs:label "dateObservedTo";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:dateTime.
sdm:intensity dcterms:description "Property. Total number of vehicles detected during this observation period. Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "intensity";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:decimal.
sdm:occupancy dcterms:description "Property. Fraction of the observation time where a vehicle has been occupying the observed lane. Model:'https://schema.org/Number'.";
    rdf:type rdf:Property;
    rdfs:label "occupancy";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:decimal.
sdm:averageVehicleSpeed dcterms:description "Property. Average speed of the vehicles transiting during the observation period. Model:'https://schema.org/Number'. Units:'Kilometer per hour (Km/h)'";
    rdf:type rdf:Property;
    rdfs:label "averageVehicleSpeed";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:decimal.
sdm:averageVehicleLength dcterms:description "Property. Average length of the vehicles transiting during\n    the observation period. Model:'https://schema.org/Number'. Units:'meter (m)'";
    rdf:type rdf:Property;
    rdfs:label "averageVehicleLength";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:decimal.
sdm:averageGapDistance dcterms:description "Property. Average gap distance between consecutive vehicles. Model:'https://schema.org/Number'. Units:'meter (m)'";
    rdf:type rdf:Property;
    rdfs:label "averageGapDistance";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:decimal.
sdm:congested dcterms:description "Property.  Flags whether there was a traffic congestion during the observation period in the referred lane. The absence of this attribute means no traffic congestion. Model:'https://schema.org/Boolean'.";
    rdf:type rdf:Property;
    rdfs:label "congested";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:boolean.
sdm:averageHeadwayTime dcterms:description "Property. Average headway time. Headway time is the time ellapsed between two consecutive vehicles. Model:'https://schema.org/Number'. Units:'second (s)'";
    rdf:type rdf:Property;
    rdfs:label "averageHeadwayTime";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:decimal.
sdm:laneDirection dcterms:description "Property. Usual direction of travel in the lane referred by this observation. This attribute is useful when the observation is not referencing any road segment, allowing to know the direction of travel of the traffic flow observed. Model:'https://schema.org/Text'. Enum:forward, backward'. See RoadSegment for a description of the semantics of these values.";
    rdf:type rdf:Property;
    rdfs:label "laneDirection";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>.
sdm:LaneDirection rdf:type skos:ConceptScheme.
sdm:laneDirection rdfs:range [
  owl:oneOf (sdm:forward sdm:backward)
].
sdm:forward rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "forward".
sdm:backward rdf:type skos:Concept;
    skos:inScheme sdm:LaneDirection;
    rdfs:label "backward".
sdm:reversedLane dcterms:description "Property. Flags whether traffic in the lane was reversed during the observation period. The absence of this attribute means no lane reversion. Model:'https://schema.org/Boolean'.";
    rdf:type rdf:Property;
    rdfs:label "reversedLane";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:boolean.
sdm:vehicleType dcterms:description "Property. Type of vehicle from the point of view of its structural characteristics. Model:'https://schema.org/Text'. Enum:'agriculturalVehicle, bicycle, bus, minibus, car, caravan, tram, tanker, carWithCaravan, carWithTrailer, lorry, moped, motorcycle, motorcycleWithSideCar, motorscooter, trailer, van, constructionOrMaintenanceVehicle, trolley, binTrolley, sweepingMachine, cleaningTrolley'";
    rdf:type rdf:Property;
    rdfs:label "vehicleType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>.
sdm:VehicleType rdf:type skos:ConceptScheme.
sdm:vehicleType rdfs:range [
  owl:oneOf (sdm:agriculturalVehicle sdm:bicycle sdm:bus sdm:minibus sdm:car sdm:caravan sdm:tram sdm:tanker sdm:carWithCaravan sdm:carWithTrailer sdm:lorry sdm:moped sdm:motorcycle sdm:motorcycleWithSideCar sdm:motorscooter sdm:trailer sdm:van sdm:constructionOrMaintenanceVehicle sdm:trolley sdm:binTrolley sdm:sweepingMachine sdm:cleaningTrolley)
].
sdm:agriculturalVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "agriculturalVehicle".
sdm:bicycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bicycle".
sdm:bus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "bus".
sdm:minibus rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "minibus".
sdm:car rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "car".
sdm:caravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "caravan".
sdm:tram rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tram".
sdm:tanker rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "tanker".
sdm:carWithCaravan rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithCaravan".
sdm:carWithTrailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "carWithTrailer".
sdm:lorry rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "lorry".
sdm:moped rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "moped".
sdm:motorcycle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycle".
sdm:motorcycleWithSideCar rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorcycleWithSideCar".
sdm:motorscooter rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "motorscooter".
sdm:trailer rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trailer".
sdm:van rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "van".
sdm:constructionOrMaintenanceVehicle rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "constructionOrMaintenanceVehicle".
sdm:trolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "trolley".
sdm:binTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "binTrolley".
sdm:sweepingMachine rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "sweepingMachine".
sdm:cleaningTrolley rdf:type skos:Concept;
    skos:inScheme sdm:VehicleType;
    rdfs:label "cleaningTrolley".
sdm:vehicleSubType dcterms:description "Property. It allows to specify a sub type of `vehicleType`, eg if the `vehicleType` is set to `Lorry` the `vehicleSubType` may be `OGV1` or `OGV2` to convey more information about the exact type of vehicle.";
    rdf:type rdf:Property;
    rdfs:label "vehicleSubType";
    rdfs:domain <https://smart-data-models.github.io/dataModel.Transportation/TrafficFlowObserved/schema.json>;
    rdfs:range xsd:string.
